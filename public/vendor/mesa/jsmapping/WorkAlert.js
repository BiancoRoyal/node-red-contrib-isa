var WorkAlert_Module_Factory = function () {
  var WorkAlert = {
    name: 'WorkAlert',
    defaultElementNamespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600',
    typeInfos: [{
        localName: 'MeasureType',
        typeName: {
          namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
          localPart: 'MeasureType'
        },
        propertyInfos: [{
            name: 'value',
            typeInfo: 'Decimal',
            type: 'value'
          }, {
            name: 'unitCode',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'unitCode'
            },
            type: 'attribute'
          }, {
            name: 'unitCodeListVersionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'unitCodeListVersionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'ShowWorkAlertInformationType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.ShowWorkAlertInformationType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'ActualEndTimeType',
        baseTypeInfo: '.DateTimeType'
      }, {
        localName: 'TransUserAreaType',
        propertyInfos: [{
            name: 'any',
            minOccurs: 0,
            collection: true,
            allowDom: false,
            mixed: false,
            type: 'anyElement'
          }]
      }, {
        localName: 'OpMaterialSpecificationType',
        propertyInfos: [{
            name: 'id',
            required: true,
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'materialClassID',
            minOccurs: 0,
            collection: true,
            elementName: 'MaterialClassID',
            typeInfo: '.MaterialClassIDType'
          }, {
            name: 'materialDefinitionID',
            minOccurs: 0,
            collection: true,
            elementName: 'MaterialDefinitionID',
            typeInfo: '.MaterialDefinitionIDType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'materialUse',
            elementName: 'MaterialUse',
            typeInfo: '.MaterialUseType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }, {
            name: 'assemblySpecification',
            minOccurs: 0,
            collection: true,
            elementName: 'AssemblySpecification',
            typeInfo: '.OpMaterialSpecificationType'
          }, {
            name: 'assemblyType',
            elementName: 'AssemblyType',
            typeInfo: '.AssemblyTypeType'
          }, {
            name: 'assemblyRelationship',
            elementName: 'AssemblyRelationship',
            typeInfo: '.AssemblyRelationshipType'
          }, {
            name: 'materialSpecificationProperty',
            minOccurs: 0,
            collection: true,
            elementName: 'MaterialSpecificationProperty',
            typeInfo: '.OpMaterialSpecificationPropertyType'
          }]
      }, {
        localName: 'NameType',
        typeName: {
          namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
          localPart: 'NameType'
        },
        propertyInfos: [{
            name: 'value',
            type: 'value'
          }, {
            name: 'languageID',
            typeInfo: 'Language',
            attributeName: {
              localPart: 'languageID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'ResultType',
        propertyInfos: [{
            name: 'valueString',
            required: true,
            elementName: 'ValueString',
            typeInfo: '.ValueStringType'
          }, {
            name: 'dataType',
            mixed: false,
            allowDom: false,
            elementName: 'DataType',
            typeInfo: '.DataTypeType',
            type: 'elementRef'
          }, {
            name: 'unitOfMeasure',
            mixed: false,
            allowDom: false,
            elementName: 'UnitOfMeasure',
            typeInfo: '.UnitOfMeasureType',
            type: 'elementRef'
          }, {
            name: 'key',
            elementName: 'Key',
            typeInfo: '.IdentifierType'
          }]
      }, {
        localName: 'RelationshipFormType',
        baseTypeInfo: '.RelationshipForm1Type',
        propertyInfos: [{
            name: 'otherValue',
            attributeName: {
              localPart: 'OtherValue'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'EquipmentElementLevelType',
        baseTypeInfo: '.EquipmentElementLevel1Type',
        propertyInfos: [{
            name: 'otherValue',
            attributeName: {
              localPart: 'OtherValue'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'OperationsType1Type',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'PublishedDateType',
        baseTypeInfo: '.DateTimeType'
      }, {
        localName: 'ValueStringType',
        baseTypeInfo: '.AnyGenericValueType'
      }, {
        localName: 'ProductProductionRuleType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'TestDateTimeType',
        baseTypeInfo: '.DateTimeType'
      }, {
        localName: 'StartTimeType',
        baseTypeInfo: '.DateTimeType'
      }, {
        localName: 'Dependency1Type',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'CancelWorkAlertDefinitionType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'cancel',
            required: true,
            elementName: 'Cancel',
            typeInfo: '.TransCancelType'
          }, {
            name: 'workAlertDefinition',
            required: true,
            collection: true,
            elementName: 'WorkAlertDefinition',
            typeInfo: '.WorkAlertDefinitionType'
          }]
      }, {
        localName: 'EndTimeType',
        baseTypeInfo: '.DateTimeType'
      }, {
        localName: 'WorkAlertInformationType',
        propertyInfos: [{
            name: 'id',
            mixed: false,
            allowDom: false,
            elementName: 'ID',
            typeInfo: '.IdentifierType',
            type: 'elementRef'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'hierarchyScope',
            mixed: false,
            allowDom: false,
            elementName: 'HierarchyScope',
            typeInfo: '.HierarchyScopeType',
            type: 'elementRef'
          }, {
            name: 'publishedDate',
            mixed: false,
            allowDom: false,
            elementName: 'PublishedDate',
            typeInfo: '.PublishedDateType',
            type: 'elementRef'
          }, {
            name: 'workAlertDefinition',
            minOccurs: 0,
            collection: true,
            elementName: 'WorkAlertDefinition',
            typeInfo: '.WorkAlertDefinitionType'
          }, {
            name: 'workAlert',
            minOccurs: 0,
            collection: true,
            elementName: 'WorkAlert',
            typeInfo: '.WorkAlertType'
          }]
      }, {
        localName: 'DataTypeType',
        baseTypeInfo: '.DataType1Type',
        propertyInfos: [{
            name: 'otherValue',
            attributeName: {
              localPart: 'OtherValue'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'BinaryObjectType',
        typeName: {
          namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
          localPart: 'BinaryObjectType'
        },
        propertyInfos: [{
            name: 'value',
            typeInfo: 'Base64Binary',
            type: 'value'
          }, {
            name: 'format',
            attributeName: {
              localPart: 'format'
            },
            type: 'attribute'
          }, {
            name: 'mimeCode',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'mimeCode'
            },
            type: 'attribute'
          }, {
            name: 'encodingCode',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'encodingCode'
            },
            type: 'attribute'
          }, {
            name: 'characterSetCode',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'characterSetCode'
            },
            type: 'attribute'
          }, {
            name: 'uri',
            attributeName: {
              localPart: 'uri'
            },
            type: 'attribute'
          }, {
            name: 'filename',
            attributeName: {
              localPart: 'filename'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'ProductionScheduleIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'RelationshipType1Type',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'PersonnelUseType',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'OpEquipmentSpecificationType',
        propertyInfos: [{
            name: 'equipmentClassID',
            minOccurs: 0,
            collection: true,
            elementName: 'EquipmentClassID',
            typeInfo: '.EquipmentClassIDType'
          }, {
            name: 'equipmentID',
            minOccurs: 0,
            collection: true,
            elementName: 'EquipmentID',
            typeInfo: '.EquipmentIDType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'equipmentUse',
            elementName: 'EquipmentUse',
            typeInfo: '.EquipmentUseType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }, {
            name: 'equipmentSpecificationProperty',
            minOccurs: 0,
            collection: true,
            elementName: 'EquipmentSpecificationProperty',
            typeInfo: '.OpEquipmentSpecificationPropertyType'
          }]
      }, {
        localName: 'ProcessSegmentIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'AssemblyRelationship1Type',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'ChangeWorkAlertInformationType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.ChangeWorkAlertInformationType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'OpMaterialCapabilityPropertyType',
        propertyInfos: [{
            name: 'id',
            required: true,
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'value',
            minOccurs: 0,
            collection: true,
            elementName: 'Value',
            typeInfo: '.ValueType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }, {
            name: 'materialUse',
            elementName: 'MaterialUse',
            typeInfo: '.MaterialUseType'
          }]
      }, {
        localName: 'RequiredByRequestedSegmentResponse1Type',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'PersonIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'OpEquipmentCapabilityPropertyType',
        propertyInfos: [{
            name: 'id',
            required: true,
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'value',
            minOccurs: 0,
            collection: true,
            elementName: 'Value',
            typeInfo: '.ValueType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }]
      }, {
        localName: 'BinaryObjectType',
        propertyInfos: [{
            name: 'value',
            typeInfo: 'Base64Binary',
            type: 'value'
          }, {
            name: 'format',
            attributeName: {
              localPart: 'format'
            },
            type: 'attribute'
          }, {
            name: 'mimeCode',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'mimeCode'
            },
            type: 'attribute'
          }, {
            name: 'encodingCode',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'encodingCode'
            },
            type: 'attribute'
          }, {
            name: 'characterSetCode',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'characterSetCode'
            },
            type: 'attribute'
          }, {
            name: 'uri',
            attributeName: {
              localPart: 'uri'
            },
            type: 'attribute'
          }, {
            name: 'filename',
            attributeName: {
              localPart: 'filename'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'ResourcesType',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'QualificationTestSpecificationIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'ProblemType',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'OpPhysicalAssetRequirementType',
        propertyInfos: [{
            name: 'physicalAssetClassID',
            minOccurs: 0,
            collection: true,
            elementName: 'PhysicalAssetClassID',
            typeInfo: '.PhysicalAssetClassIDType'
          }, {
            name: 'physicalAssetID',
            minOccurs: 0,
            collection: true,
            elementName: 'PhysicalAssetID',
            typeInfo: '.PhysicalAssetIDType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'physicalAssetUse',
            elementName: 'PhysicalAssetUse',
            typeInfo: '.PhysicalAssetUseType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }, {
            name: 'hierarchyScope',
            elementName: 'HierarchyScope',
            typeInfo: '.HierarchyScopeType'
          }, {
            name: 'equipmentLevel',
            elementName: 'EquipmentLevel',
            typeInfo: '.HierarchyScopeType'
          }, {
            name: 'physicalAssetRequirementProperty',
            minOccurs: 0,
            collection: true,
            elementName: 'PhysicalAssetRequirementProperty',
            typeInfo: '.OpPhysicalAssetRequirementPropertyType'
          }, {
            name: 'requiredByRequestedSegmentResponse',
            elementName: 'RequiredByRequestedSegmentResponse',
            typeInfo: '.RequiredByRequestedSegmentResponseType'
          }]
      }, {
        localName: 'OperationsSegmentIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'PhysicalAssetIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'MaterialUseType',
        baseTypeInfo: '.MaterialUse1Type',
        propertyInfos: [{
            name: 'otherValue',
            attributeName: {
              localPart: 'OtherValue'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'PhysicalAssetUseType',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'QuantityType',
        typeName: {
          namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
          localPart: 'QuantityType'
        },
        propertyInfos: [{
            name: 'value',
            typeInfo: 'Decimal',
            type: 'value'
          }, {
            name: 'unitCode',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'unitCode'
            },
            type: 'attribute'
          }, {
            name: 'unitCodeListID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'unitCodeListID'
            },
            type: 'attribute'
          }, {
            name: 'unitCodeListAgencyID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'unitCodeListAgencyID'
            },
            type: 'attribute'
          }, {
            name: 'unitCodeListAgencyName',
            attributeName: {
              localPart: 'unitCodeListAgencyName'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'OpPersonnelCapabilityType',
        propertyInfos: [{
            name: 'personnelClassID',
            minOccurs: 0,
            collection: true,
            elementName: 'PersonnelClassID',
            typeInfo: '.PersonnelClassIDType'
          }, {
            name: 'personID',
            minOccurs: 0,
            collection: true,
            elementName: 'PersonID',
            typeInfo: '.PersonIDType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'capabilityType',
            elementName: 'CapabilityType',
            typeInfo: '.CapabilityTypeType'
          }, {
            name: 'reason',
            elementName: 'Reason',
            typeInfo: '.ReasonType'
          }, {
            name: 'confidenceFactor',
            elementName: 'ConfidenceFactor',
            typeInfo: '.ConfidenceFactorType'
          }, {
            name: 'hierarchyScope',
            elementName: 'HierarchyScope',
            typeInfo: '.HierarchyScopeType'
          }, {
            name: 'personnelUse',
            elementName: 'PersonnelUse',
            typeInfo: '.PersonnelUseType'
          }, {
            name: 'startTime',
            elementName: 'StartTime',
            typeInfo: '.StartTimeType'
          }, {
            name: 'endTime',
            elementName: 'EndTime',
            typeInfo: '.EndTimeType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }, {
            name: 'personnelCapabilityProperty',
            minOccurs: 0,
            collection: true,
            elementName: 'PersonnelCapabilityProperty',
            typeInfo: '.OpPersonnelCapabilityPropertyType'
          }]
      }, {
        localName: 'AcknowledgeWorkAlertType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'acknowledge',
            required: true,
            elementName: 'Acknowledge',
            typeInfo: '.TransAcknowledgeType'
          }, {
            name: 'workAlert',
            required: true,
            collection: true,
            elementName: 'WorkAlert',
            typeInfo: '.WorkAlertType'
          }]
      }, {
        localName: 'QuantityStringType',
        baseTypeInfo: '.AnyGenericValueType'
      }, {
        localName: 'QuantityType',
        propertyInfos: [{
            name: 'value',
            typeInfo: 'Decimal',
            type: 'value'
          }, {
            name: 'unitCode',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'unitCode'
            },
            type: 'attribute'
          }, {
            name: 'unitCodeListID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'unitCodeListID'
            },
            type: 'attribute'
          }, {
            name: 'unitCodeListAgencyID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'unitCodeListAgencyID'
            },
            type: 'attribute'
          }, {
            name: 'unitCodeListAgencyName',
            attributeName: {
              localPart: 'unitCodeListAgencyName'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'NameType',
        propertyInfos: [{
            name: 'value',
            type: 'value'
          }, {
            name: 'languageID',
            typeInfo: 'Language',
            attributeName: {
              localPart: 'languageID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'PhysicalAssetActualIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'ReasonType',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'ProductSegmentIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'TextType',
        propertyInfos: [{
            name: 'value',
            type: 'value'
          }, {
            name: 'languageID',
            typeInfo: 'Language',
            attributeName: {
              localPart: 'languageID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'TransSignatureType',
        propertyInfos: [{
            name: 'any',
            minOccurs: 0,
            collection: true,
            allowDom: false,
            mixed: false,
            type: 'anyElement'
          }, {
            name: 'qualifyingAgencyID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'qualifyingAgencyID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'QuantityValueType',
        propertyInfos: [{
            name: 'quantityString',
            required: true,
            elementName: 'QuantityString',
            typeInfo: '.QuantityStringType'
          }, {
            name: 'dataType',
            mixed: false,
            allowDom: false,
            elementName: 'DataType',
            typeInfo: '.DataTypeType',
            type: 'elementRef'
          }, {
            name: 'unitOfMeasure',
            mixed: false,
            allowDom: false,
            elementName: 'UnitOfMeasure',
            typeInfo: '.UnitOfMeasureType',
            type: 'elementRef'
          }, {
            name: 'key',
            elementName: 'Key',
            typeInfo: '.IdentifierType'
          }]
      }, {
        localName: 'TransActionCriteriaType',
        propertyInfos: [{
            name: 'actionExpression',
            minOccurs: 0,
            collection: true,
            elementName: 'ActionExpression',
            typeInfo: '.TransExpressionType'
          }, {
            name: 'changeStatus',
            elementName: 'ChangeStatus',
            typeInfo: '.TransChangeStatusType'
          }]
      }, {
        localName: 'GetWorkAlertDefinitionType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.GetWorkAlertDefinitionType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'ShowWorkAlertDefinitionType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.ShowWorkAlertDefinitionType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'OpPersonnelRequirementType',
        propertyInfos: [{
            name: 'personnelClassID',
            minOccurs: 0,
            collection: true,
            elementName: 'PersonnelClassID',
            typeInfo: '.PersonnelClassIDType'
          }, {
            name: 'personID',
            minOccurs: 0,
            collection: true,
            elementName: 'PersonID',
            typeInfo: '.PersonIDType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'personnelUse',
            elementName: 'PersonnelUse',
            typeInfo: '.PersonnelUseType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }, {
            name: 'hierarchyScope',
            elementName: 'HierarchyScope',
            typeInfo: '.HierarchyScopeType'
          }, {
            name: 'personnelRequirementProperty',
            minOccurs: 0,
            collection: true,
            elementName: 'PersonnelRequirementProperty',
            typeInfo: '.OpPersonnelRequirementPropertyType'
          }, {
            name: 'requiredByRequestedSegmentResponse',
            elementName: 'RequiredByRequestedSegmentResponse',
            typeInfo: '.RequiredByRequestedSegmentResponseType'
          }]
      }, {
        localName: 'GetWorkAlertInformationType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'get',
            required: true,
            elementName: 'Get',
            typeInfo: '.TransGetType'
          }, {
            name: 'workAlertInformation',
            required: true,
            collection: true,
            elementName: 'WorkAlertInformation',
            typeInfo: '.WorkAlertInformationType'
          }]
      }, {
        localName: 'SyncWorkAlertType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'sync',
            required: true,
            elementName: 'Sync',
            typeInfo: '.TransSyncType'
          }, {
            name: 'workAlert',
            required: true,
            collection: true,
            elementName: 'WorkAlert',
            typeInfo: '.WorkAlertType'
          }]
      }, {
        localName: 'JobOrderCommand1Type',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'PlannedStartTimeType',
        baseTypeInfo: '.DateTimeType'
      }, {
        localName: 'HierarchyScopeType',
        propertyInfos: [{
            name: 'equipmentID',
            required: true,
            elementName: 'EquipmentID',
            typeInfo: '.EquipmentIDType'
          }, {
            name: 'equipmentElementLevel',
            required: true,
            elementName: 'EquipmentElementLevel',
            typeInfo: '.EquipmentElementLevelType'
          }, {
            name: 'hierarchyScope',
            elementName: 'HierarchyScope',
            typeInfo: '.HierarchyScopeType'
          }]
      }, {
        localName: 'OperationsDefinitionIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'OperationsTypeType',
        baseTypeInfo: '.OperationsType1Type',
        propertyInfos: [{
            name: 'otherValue',
            attributeName: {
              localPart: 'OtherValue'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'CancelWorkAlertInformationType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.CancelWorkAlertInformationType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'ChangeWorkAlertDefinitionType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'change',
            required: true,
            elementName: 'Change',
            typeInfo: '.TransChangeType'
          }, {
            name: 'workAlertDefinition',
            required: true,
            collection: true,
            elementName: 'WorkAlertDefinition',
            typeInfo: '.WorkAlertDefinitionType'
          }]
      }, {
        localName: 'ChangeWorkAlertInformationType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'change',
            required: true,
            elementName: 'Change',
            typeInfo: '.TransChangeType'
          }, {
            name: 'workAlertInformation',
            required: true,
            collection: true,
            elementName: 'WorkAlertInformation',
            typeInfo: '.WorkAlertInformationType'
          }]
      }, {
        localName: 'TransApplicationAreaType',
        propertyInfos: [{
            name: 'sender',
            elementName: 'Sender',
            typeInfo: '.TransSenderType'
          }, {
            name: 'receiver',
            minOccurs: 0,
            collection: true,
            elementName: 'Receiver',
            typeInfo: '.TransReceiverType'
          }, {
            name: 'creationDateTime',
            required: true,
            elementName: 'CreationDateTime',
            typeInfo: '.DateTimeType'
          }, {
            name: 'signature',
            elementName: 'Signature',
            typeInfo: '.TransSignatureType'
          }, {
            name: 'bodid',
            elementName: 'BODID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'userArea',
            elementName: 'UserArea',
            typeInfo: '.TransUserAreaType'
          }]
      }, {
        localName: 'DependencyType',
        baseTypeInfo: '.Dependency1Type',
        propertyInfos: [{
            name: 'otherValue',
            attributeName: {
              localPart: 'OtherValue'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'RelationshipTypeType',
        baseTypeInfo: '.RelationshipType1Type',
        propertyInfos: [{
            name: 'otherValue',
            attributeName: {
              localPart: 'OtherValue'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'SyncWorkAlertInformationType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'sync',
            required: true,
            elementName: 'Sync',
            typeInfo: '.TransSyncType'
          }, {
            name: 'workAlertInformation',
            required: true,
            collection: true,
            elementName: 'WorkAlertInformation',
            typeInfo: '.WorkAlertInformationType'
          }]
      }, {
        localName: 'OpPhysicalAssetCapabilityPropertyType',
        propertyInfos: [{
            name: 'id',
            required: true,
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'value',
            minOccurs: 0,
            collection: true,
            elementName: 'Value',
            typeInfo: '.ValueType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }]
      }, {
        localName: 'PriorityType',
        baseTypeInfo: '.NumericType'
      }, {
        localName: 'ProductProductionRuleIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'ShowWorkAlertDefinitionType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'show',
            required: true,
            elementName: 'Show',
            typeInfo: '.TransShowType'
          }, {
            name: 'workAlertDefinition',
            required: true,
            collection: true,
            elementName: 'WorkAlertDefinition',
            typeInfo: '.WorkAlertDefinitionType'
          }]
      }, {
        localName: 'ProcessWorkAlertDefinitionType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.ProcessWorkAlertDefinitionType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'MaterialUse1Type',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'TransReceiverType',
        propertyInfos: [{
            name: 'logicalID',
            elementName: 'LogicalID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'componentID',
            elementName: 'ComponentID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'id',
            minOccurs: 0,
            collection: true,
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }]
      }, {
        localName: 'ResourceReferenceType1Type',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'JobOrderCommandType',
        baseTypeInfo: '.JobOrderCommand1Type',
        propertyInfos: [{
            name: 'otherValue',
            attributeName: {
              localPart: 'OtherValue'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'JobOrderDispatchStatusType',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'SyncWorkAlertDefinitionType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.SyncWorkAlertDefinitionType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'AssemblyRelationshipType',
        baseTypeInfo: '.AssemblyRelationship1Type',
        propertyInfos: [{
            name: 'otherValue',
            attributeName: {
              localPart: 'OtherValue'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'RequestedCompletionDateType',
        baseTypeInfo: '.DateTimeType'
      }, {
        localName: 'PersonnelClassIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'TransConfirmType',
        propertyInfos: [{
            name: 'originalApplicationArea',
            elementName: 'OriginalApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'responseCriteria',
            minOccurs: 0,
            collection: true,
            elementName: 'ResponseCriteria',
            typeInfo: '.TransResponseCriteriaType'
          }]
      }, {
        localName: 'ProcessWorkAlertInformationType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.ProcessWorkAlertInformationType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'ParameterIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'AcknowledgeWorkAlertInformationType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'acknowledge',
            required: true,
            elementName: 'Acknowledge',
            typeInfo: '.TransAcknowledgeType'
          }, {
            name: 'workAlertInformation',
            required: true,
            collection: true,
            elementName: 'WorkAlertInformation',
            typeInfo: '.WorkAlertInformationType'
          }]
      }, {
        localName: 'ChangeWorkAlertType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.ChangeWorkAlertType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'WorkTypeType',
        baseTypeInfo: '.WorkType1Type',
        propertyInfos: [{
            name: 'otherValue',
            attributeName: {
              localPart: 'OtherValue'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'TransChangeStatusType',
        propertyInfos: [{
            name: 'code',
            elementName: 'Code',
            typeInfo: '.CodeType'
          }, {
            name: 'description',
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'effectiveDateTime',
            elementName: 'EffectiveDateTime',
            typeInfo: '.DateTimeType'
          }, {
            name: 'reasonCode',
            elementName: 'ReasonCode',
            typeInfo: '.CodeType'
          }, {
            name: 'reason',
            minOccurs: 0,
            collection: true,
            elementName: 'Reason',
            typeInfo: '.CodeType'
          }, {
            name: 'stateChange',
            minOccurs: 0,
            collection: true,
            elementName: 'StateChange',
            typeInfo: '.TransStateChangeType'
          }, {
            name: 'userArea',
            elementName: 'UserArea',
            typeInfo: '.TransUserAreaType'
          }]
      }, {
        localName: 'LatestEndTimeType',
        baseTypeInfo: '.DateTimeType'
      }, {
        localName: 'OpEquipmentSpecificationPropertyType',
        propertyInfos: [{
            name: 'id',
            required: true,
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'value',
            minOccurs: 0,
            collection: true,
            elementName: 'Value',
            typeInfo: '.ValueType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }]
      }, {
        localName: 'CodeType',
        typeName: {
          namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
          localPart: 'CodeType'
        },
        propertyInfos: [{
            name: 'value',
            typeInfo: 'NormalizedString',
            type: 'value'
          }, {
            name: 'listID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'listID'
            },
            type: 'attribute'
          }, {
            name: 'listAgencyID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'listAgencyID'
            },
            type: 'attribute'
          }, {
            name: 'listAgencyName',
            attributeName: {
              localPart: 'listAgencyName'
            },
            type: 'attribute'
          }, {
            name: 'listName',
            attributeName: {
              localPart: 'listName'
            },
            type: 'attribute'
          }, {
            name: 'listVersionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'listVersionID'
            },
            type: 'attribute'
          }, {
            name: 'name',
            attributeName: {
              localPart: 'name'
            },
            type: 'attribute'
          }, {
            name: 'languageID',
            typeInfo: 'Language',
            attributeName: {
              localPart: 'languageID'
            },
            type: 'attribute'
          }, {
            name: 'listURI',
            attributeName: {
              localPart: 'listURI'
            },
            type: 'attribute'
          }, {
            name: 'listSchemeURI',
            attributeName: {
              localPart: 'listSchemeURI'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'MaterialLotIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'EquipmentUseType',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'RespondWorkAlertDefinitionType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.RespondWorkAlertDefinitionType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'DescriptionType',
        baseTypeInfo: '.TextType'
      }, {
        localName: 'DateTimeType',
        typeName: {
          namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
          localPart: 'DateTimeType'
        },
        propertyInfos: [{
            name: 'value',
            typeInfo: 'DateTime',
            type: 'value'
          }, {
            name: 'format',
            attributeName: {
              localPart: 'format'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'RequiredByRequestedSegmentResponseType',
        baseTypeInfo: '.RequiredByRequestedSegmentResponse1Type',
        propertyInfos: [{
            name: 'otherValue',
            attributeName: {
              localPart: 'OtherValue'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'OpEquipmentRequirementType',
        propertyInfos: [{
            name: 'equipmentClassID',
            minOccurs: 0,
            collection: true,
            elementName: 'EquipmentClassID',
            typeInfo: '.EquipmentClassIDType'
          }, {
            name: 'equipmentID',
            minOccurs: 0,
            collection: true,
            elementName: 'EquipmentID',
            typeInfo: '.EquipmentIDType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'equipmentUse',
            elementName: 'EquipmentUse',
            typeInfo: '.EquipmentUseType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }, {
            name: 'hierarchyScope',
            elementName: 'HierarchyScope',
            typeInfo: '.HierarchyScopeType'
          }, {
            name: 'equipmentLevel',
            elementName: 'EquipmentLevel',
            typeInfo: '.HierarchyScopeType'
          }, {
            name: 'equipmentRequirementProperty',
            minOccurs: 0,
            collection: true,
            elementName: 'EquipmentRequirementProperty',
            typeInfo: '.OpEquipmentRequirementPropertyType'
          }, {
            name: 'requiredByRequestedSegmentResponse',
            elementName: 'RequiredByRequestedSegmentResponse',
            typeInfo: '.RequiredByRequestedSegmentResponseType'
          }]
      }, {
        localName: 'DateTimeType',
        propertyInfos: [{
            name: 'value',
            typeInfo: 'DateTime',
            type: 'value'
          }, {
            name: 'format',
            attributeName: {
              localPart: 'format'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'PersonNameType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'TransChangeType',
        propertyInfos: [{
            name: 'actionCriteria',
            minOccurs: 0,
            collection: true,
            elementName: 'ActionCriteria',
            typeInfo: '.TransActionCriteriaType'
          }, {
            name: 'responseCode',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'responseCode'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'MaterialCapabilityIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'GetWorkAlertType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.GetWorkAlertType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'MaterialClassIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'PhysicalAssetCapabilityTestSpecificationIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'CertificateOfAnalysisReferenceType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'CancelWorkAlertType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'cancel',
            required: true,
            elementName: 'Cancel',
            typeInfo: '.TransCancelType'
          }, {
            name: 'workAlert',
            required: true,
            collection: true,
            elementName: 'WorkAlert',
            typeInfo: '.WorkAlertType'
          }]
      }, {
        localName: 'TransExpressionType',
        baseTypeInfo: '.TransExpression1Type',
        propertyInfos: [{
            name: 'actionCode',
            required: true,
            attributeName: {
              localPart: 'actionCode'
            },
            type: 'attribute'
          }, {
            name: 'expressionLanguage',
            typeInfo: 'Token',
            attributeName: {
              localPart: 'expressionLanguage'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'CorrectionType',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'ExpirationTimeType',
        baseTypeInfo: '.DateTimeType'
      }, {
        localName: 'OpMaterialRequirementType',
        propertyInfos: [{
            name: 'materialClassID',
            minOccurs: 0,
            collection: true,
            elementName: 'MaterialClassID',
            typeInfo: '.MaterialClassIDType'
          }, {
            name: 'materialDefinitionID',
            minOccurs: 0,
            collection: true,
            elementName: 'MaterialDefinitionID',
            typeInfo: '.MaterialDefinitionIDType'
          }, {
            name: 'materialLotID',
            minOccurs: 0,
            collection: true,
            elementName: 'MaterialLotID',
            typeInfo: '.MaterialLotIDType'
          }, {
            name: 'materialSubLotID',
            minOccurs: 0,
            collection: true,
            elementName: 'MaterialSubLotID',
            typeInfo: '.MaterialSubLotIDType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'materialUse',
            elementName: 'MaterialUse',
            typeInfo: '.MaterialUseType'
          }, {
            name: 'storageLocation',
            elementName: 'StorageLocation',
            typeInfo: '.StorageLocationType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }, {
            name: 'assemblyRequirement',
            minOccurs: 0,
            collection: true,
            elementName: 'AssemblyRequirement',
            typeInfo: '.OpMaterialRequirementType'
          }, {
            name: 'assemblyType',
            elementName: 'AssemblyType',
            typeInfo: '.AssemblyTypeType'
          }, {
            name: 'assemblyRelationship',
            elementName: 'AssemblyRelationship',
            typeInfo: '.AssemblyRelationshipType'
          }, {
            name: 'hierarchyScope',
            elementName: 'HierarchyScope',
            typeInfo: '.HierarchyScopeType'
          }, {
            name: 'materialRequirementProperty',
            minOccurs: 0,
            collection: true,
            elementName: 'MaterialRequirementProperty',
            typeInfo: '.OpMaterialRequirementPropertyType'
          }, {
            name: 'requiredByRequestedSegmentResponse',
            elementName: 'RequiredByRequestedSegmentResponse',
            typeInfo: '.RequiredByRequestedSegmentResponseType'
          }]
      }, {
        localName: 'MaterialSpecificationIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'TransAcknowledgeType',
        propertyInfos: [{
            name: 'originalApplicationArea',
            elementName: 'OriginalApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'responseCriteria',
            minOccurs: 0,
            collection: true,
            elementName: 'ResponseCriteria',
            typeInfo: '.TransResponseCriteriaType'
          }]
      }, {
        localName: 'TransShowType',
        propertyInfos: [{
            name: 'originalApplicationArea',
            elementName: 'OriginalApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'responseCriteria',
            minOccurs: 0,
            collection: true,
            elementName: 'ResponseCriteria',
            typeInfo: '.TransResponseCriteriaType'
          }]
      }, {
        localName: 'StorageHierarchyScopeType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'OpPhysicalAssetRequirementPropertyType',
        propertyInfos: [{
            name: 'id',
            required: true,
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'value',
            minOccurs: 0,
            collection: true,
            elementName: 'Value',
            typeInfo: '.ValueType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }]
      }, {
        localName: 'AssemblyTypeType',
        baseTypeInfo: '.AssemblyType1Type',
        propertyInfos: [{
            name: 'otherValue',
            attributeName: {
              localPart: 'OtherValue'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'WorkScheduleIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'RespondWorkAlertType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.RespondWorkAlertType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'ResourceReferenceTypeType',
        baseTypeInfo: '.ResourceReferenceType1Type',
        propertyInfos: [{
            name: 'otherValue',
            attributeName: {
              localPart: 'OtherValue'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'BillOfMaterialsIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'JobOrderCommandRuleType',
        baseTypeInfo: '.TextType'
      }, {
        localName: 'CapabilityType1Type',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'CauseType',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'AmountType',
        typeName: {
          namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
          localPart: 'AmountType'
        },
        propertyInfos: [{
            name: 'value',
            typeInfo: 'Decimal',
            type: 'value'
          }, {
            name: 'currencyID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'currencyID'
            },
            type: 'attribute'
          }, {
            name: 'currencyCodeListVersionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'currencyCodeListVersionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'TransProcessType',
        propertyInfos: [{
            name: 'actionCriteria',
            minOccurs: 0,
            collection: true,
            elementName: 'ActionCriteria',
            typeInfo: '.TransActionCriteriaType'
          }, {
            name: 'acknowledgeCode',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'acknowledgeCode'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'OpPersonnelCapabilityPropertyType',
        propertyInfos: [{
            name: 'id',
            required: true,
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'value',
            minOccurs: 0,
            collection: true,
            elementName: 'Value',
            typeInfo: '.ValueType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }]
      }, {
        localName: 'DataType1Type',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'OpPersonnelSpecificationType',
        propertyInfos: [{
            name: 'personnelClassID',
            minOccurs: 0,
            collection: true,
            elementName: 'PersonnelClassID',
            typeInfo: '.PersonnelClassIDType'
          }, {
            name: 'personID',
            minOccurs: 0,
            collection: true,
            elementName: 'PersonID',
            typeInfo: '.PersonIDType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'personnelUse',
            elementName: 'PersonnelUse',
            typeInfo: '.PersonnelUseType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }, {
            name: 'personnelSpecificationProperty',
            minOccurs: 0,
            collection: true,
            elementName: 'PersonnelSpecificationProperty',
            typeInfo: '.OpPersonnelSpecificationPropertyType'
          }]
      }, {
        localName: 'ShowWorkAlertType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.ShowWorkAlertType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'RelationshipForm1Type',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'WorkAlertType',
        propertyInfos: [{
            name: 'id',
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'messageText',
            minOccurs: 0,
            collection: true,
            elementName: 'MessageText',
            typeInfo: '.DescriptionType'
          }, {
            name: 'hierarchyScope',
            elementName: 'HierarchyScope',
            typeInfo: '.HierarchyScopeType'
          }, {
            name: 'timeStamp',
            elementName: 'TimeStamp',
            typeInfo: '.StartTimeType'
          }, {
            name: 'priority',
            elementName: 'Priority',
            typeInfo: '.PriorityType'
          }, {
            name: 'category',
            elementName: 'Category',
            typeInfo: '.IdentifierType'
          }, {
            name: 'property',
            minOccurs: 0,
            collection: true,
            elementName: 'Property',
            typeInfo: '.WorkAlertPropertyType'
          }]
      }, {
        localName: 'TransStateChangeType',
        propertyInfos: [{
            name: 'fromStateCode',
            elementName: 'FromStateCode',
            typeInfo: '.CodeType'
          }, {
            name: 'toStateCode',
            elementName: 'ToStateCode',
            typeInfo: '.CodeType'
          }, {
            name: 'changeDateTime',
            elementName: 'ChangeDateTime',
            typeInfo: '.DateTimeType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'note',
            minOccurs: 0,
            collection: true,
            elementName: 'Note',
            typeInfo: '.TextType'
          }, {
            name: 'userArea',
            elementName: 'UserArea',
            typeInfo: '.TransUserAreaType'
          }]
      }, {
        localName: 'SegmentDependencyType',
        propertyInfos: [{
            name: 'id',
            required: true,
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'dependency',
            required: true,
            elementName: 'Dependency',
            typeInfo: '.DependencyType'
          }, {
            name: 'timingFactor',
            minOccurs: 0,
            collection: true,
            elementName: 'TimingFactor',
            typeInfo: '.ValueType'
          }, {
            name: 'productSegmentIDOrProcessSegmentIDOrSegmentID',
            minOccurs: 0,
            collection: true,
            elementTypeInfos: [{
                elementName: 'ProductSegmentID',
                typeInfo: '.ProductSegmentIDType'
              }, {
                elementName: 'ProcessSegmentID',
                typeInfo: '.ProcessSegmentIDType'
              }, {
                elementName: 'SegmentID',
                typeInfo: '.IdentifierType'
              }],
            type: 'elements'
          }]
      }, {
        localName: 'TextType',
        typeName: {
          namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
          localPart: 'TextType'
        },
        propertyInfos: [{
            name: 'value',
            type: 'value'
          }, {
            name: 'languageID',
            typeInfo: 'Language',
            attributeName: {
              localPart: 'languageID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'ConfidenceFactorType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'ProcessWorkAlertDefinitionType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'process',
            required: true,
            elementName: 'Process',
            typeInfo: '.TransProcessType'
          }, {
            name: 'workAlertDefinition',
            required: true,
            collection: true,
            elementName: 'WorkAlertDefinition',
            typeInfo: '.WorkAlertDefinitionType'
          }]
      }, {
        localName: 'PhysicalAssetClassIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'OpEquipmentCapabilityType',
        propertyInfos: [{
            name: 'equipmentClassID',
            minOccurs: 0,
            collection: true,
            elementName: 'EquipmentClassID',
            typeInfo: '.EquipmentClassIDType'
          }, {
            name: 'equipmentID',
            minOccurs: 0,
            collection: true,
            elementName: 'EquipmentID',
            typeInfo: '.EquipmentIDType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'capabilityType',
            elementName: 'CapabilityType',
            typeInfo: '.CapabilityTypeType'
          }, {
            name: 'reason',
            elementName: 'Reason',
            typeInfo: '.ReasonType'
          }, {
            name: 'confidenceFactor',
            elementName: 'ConfidenceFactor',
            typeInfo: '.ConfidenceFactorType'
          }, {
            name: 'hierarchyScope',
            elementName: 'HierarchyScope',
            typeInfo: '.HierarchyScopeType'
          }, {
            name: 'equipmentUse',
            elementName: 'EquipmentUse',
            typeInfo: '.EquipmentUseType'
          }, {
            name: 'startTime',
            elementName: 'StartTime',
            typeInfo: '.StartTimeType'
          }, {
            name: 'endTime',
            elementName: 'EndTime',
            typeInfo: '.EndTimeType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }, {
            name: 'equipmentCapabilityProperty',
            minOccurs: 0,
            collection: true,
            elementName: 'EquipmentCapabilityProperty',
            typeInfo: '.OpEquipmentCapabilityPropertyType'
          }]
      }, {
        localName: 'AnyGenericValueType',
        propertyInfos: [{
            name: 'value',
            type: 'value'
          }, {
            name: 'currencyID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'currencyID'
            },
            type: 'attribute'
          }, {
            name: 'currencyCodeListVersionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'currencyCodeListVersionID'
            },
            type: 'attribute'
          }, {
            name: 'encodingCode',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'encodingCode'
            },
            type: 'attribute'
          }, {
            name: 'format',
            attributeName: {
              localPart: 'format'
            },
            type: 'attribute'
          }, {
            name: 'characterSetCode',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'characterSetCode'
            },
            type: 'attribute'
          }, {
            name: 'listID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'listID'
            },
            type: 'attribute'
          }, {
            name: 'listAgencyID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'listAgencyID'
            },
            type: 'attribute'
          }, {
            name: 'listAgencyName',
            attributeName: {
              localPart: 'listAgencyName'
            },
            type: 'attribute'
          }, {
            name: 'listName',
            attributeName: {
              localPart: 'listName'
            },
            type: 'attribute'
          }, {
            name: 'listVersionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'listVersionID'
            },
            type: 'attribute'
          }, {
            name: 'languageID',
            typeInfo: 'Language',
            attributeName: {
              localPart: 'languageID'
            },
            type: 'attribute'
          }, {
            name: 'languageLocaleID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'languageLocaleID'
            },
            type: 'attribute'
          }, {
            name: 'listURI',
            attributeName: {
              localPart: 'listURI'
            },
            type: 'attribute'
          }, {
            name: 'listSchemaURI',
            attributeName: {
              localPart: 'listSchemaURI'
            },
            type: 'attribute'
          }, {
            name: 'mimeCode',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'mimeCode'
            },
            type: 'attribute'
          }, {
            name: 'name',
            attributeName: {
              localPart: 'name'
            },
            type: 'attribute'
          }, {
            name: 'schemaID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'schemaID'
            },
            type: 'attribute'
          }, {
            name: 'schemaName',
            attributeName: {
              localPart: 'schemaName'
            },
            type: 'attribute'
          }, {
            name: 'schemaAgencyID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'schemaAgencyID'
            },
            type: 'attribute'
          }, {
            name: 'schemaAgencyName',
            attributeName: {
              localPart: 'schemaAgencyName'
            },
            type: 'attribute'
          }, {
            name: 'schemaVersionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'schemaVersionID'
            },
            type: 'attribute'
          }, {
            name: 'schemaDataURI',
            attributeName: {
              localPart: 'schemaDataURI'
            },
            type: 'attribute'
          }, {
            name: 'schemaURI',
            attributeName: {
              localPart: 'schemaURI'
            },
            type: 'attribute'
          }, {
            name: 'unitCode',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'unitCode'
            },
            type: 'attribute'
          }, {
            name: 'unitCodeListID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'unitCodeListID'
            },
            type: 'attribute'
          }, {
            name: 'unitCodeListAgencyID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'unitCodeListAgencyID'
            },
            type: 'attribute'
          }, {
            name: 'unitCodeListAgencyName',
            attributeName: {
              localPart: 'unitCodeListAgencyName'
            },
            type: 'attribute'
          }, {
            name: 'unitCodeListVersionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'unitCodeListVersionID'
            },
            type: 'attribute'
          }, {
            name: 'filename',
            attributeName: {
              localPart: 'filename'
            },
            type: 'attribute'
          }, {
            name: 'uri',
            attributeName: {
              localPart: 'uri'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'OperationsRequestIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'ProductionRequestIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'GetWorkAlertType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'get',
            required: true,
            elementName: 'Get',
            typeInfo: '.TransGetType'
          }, {
            name: 'workAlert',
            required: true,
            collection: true,
            elementName: 'WorkAlert',
            typeInfo: '.WorkAlertType'
          }]
      }, {
        localName: 'WorkRequestIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'ValueType',
        propertyInfos: [{
            name: 'valueString',
            required: true,
            elementName: 'ValueString',
            typeInfo: '.ValueStringType'
          }, {
            name: 'dataType',
            mixed: false,
            allowDom: false,
            elementName: 'DataType',
            typeInfo: '.DataTypeType',
            type: 'elementRef'
          }, {
            name: 'unitOfMeasure',
            mixed: false,
            allowDom: false,
            elementName: 'UnitOfMeasure',
            typeInfo: '.UnitOfMeasureType',
            type: 'elementRef'
          }, {
            name: 'key',
            elementName: 'Key',
            typeInfo: '.IdentifierType'
          }]
      }, {
        localName: 'AcknowledgeWorkAlertDefinitionType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'acknowledge',
            required: true,
            elementName: 'Acknowledge',
            typeInfo: '.TransAcknowledgeType'
          }, {
            name: 'workAlertDefinition',
            required: true,
            collection: true,
            elementName: 'WorkAlertDefinition',
            typeInfo: '.WorkAlertDefinitionType'
          }]
      }, {
        localName: 'BillOfMaterialIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'BillOfResourcesIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'TransRespondType',
        propertyInfos: [{
            name: 'originalApplicationArea',
            elementName: 'OriginalApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'responseCriteria',
            minOccurs: 0,
            collection: true,
            elementName: 'ResponseCriteria',
            typeInfo: '.TransResponseCriteriaType'
          }]
      }, {
        localName: 'TransSenderType',
        propertyInfos: [{
            name: 'logicalID',
            elementName: 'LogicalID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'componentID',
            elementName: 'ComponentID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'taskID',
            elementName: 'TaskID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'referenceID',
            elementName: 'ReferenceID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'confirmationCode',
            elementName: 'ConfirmationCode',
            typeInfo: '.TransConfirmationCodeType'
          }, {
            name: 'authorizationID',
            elementName: 'AuthorizationID',
            typeInfo: '.IdentifierType'
          }]
      }, {
        localName: 'TransSyncType',
        propertyInfos: [{
            name: 'actionCriteria',
            minOccurs: 0,
            collection: true,
            elementName: 'ActionCriteria',
            typeInfo: '.TransActionCriteriaType'
          }]
      }, {
        localName: 'RespondWorkAlertType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'respond',
            required: true,
            elementName: 'Respond',
            typeInfo: '.TransRespondType'
          }, {
            name: 'workAlert',
            required: true,
            collection: true,
            elementName: 'WorkAlert',
            typeInfo: '.WorkAlertType'
          }]
      }, {
        localName: 'MaterialDefinitionIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'ResourceIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'TestResultType',
        propertyInfos: [{
            name: 'id',
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'testDateTime',
            elementName: 'TestDateTime',
            typeInfo: '.TestDateTimeType'
          }, {
            name: 'result',
            minOccurs: 0,
            collection: true,
            elementName: 'Result',
            typeInfo: '.ResultType'
          }, {
            name: 'expirationTime',
            elementName: 'ExpirationTime',
            typeInfo: '.ExpirationTimeType'
          }]
      }, {
        localName: 'ParameterType',
        propertyInfos: [{
            name: 'id',
            required: true,
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'value',
            minOccurs: 0,
            collection: true,
            elementName: 'Value',
            typeInfo: '.ValueType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'parameter',
            minOccurs: 0,
            collection: true,
            elementName: 'Parameter',
            typeInfo: '.ParameterType'
          }]
      }, {
        localName: 'MaterialSubLotIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'RequestedPriorityType',
        baseTypeInfo: '.NumericType'
      }, {
        localName: 'OpPhysicalAssetSpecificationType',
        propertyInfos: [{
            name: 'physicalAssetClassID',
            minOccurs: 0,
            collection: true,
            elementName: 'PhysicalAssetClassID',
            typeInfo: '.PhysicalAssetClassIDType'
          }, {
            name: 'physicalAssetID',
            minOccurs: 0,
            collection: true,
            elementName: 'PhysicalAssetID',
            typeInfo: '.PhysicalAssetIDType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'physicalAssetUse',
            elementName: 'PhysicalAssetUse',
            typeInfo: '.PhysicalAssetUseType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }, {
            name: 'physicalAssetSpecificationProperty',
            minOccurs: 0,
            collection: true,
            elementName: 'PhysicalAssetSpecificationProperty',
            typeInfo: '.OpPhysicalAssetSpecificationPropertyType'
          }]
      }, {
        localName: 'SyncWorkAlertInformationType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.SyncWorkAlertInformationType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'OtherDependencyType',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'RespondWorkAlertInformationType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.RespondWorkAlertInformationType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'ProcessWorkAlertInformationType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'process',
            required: true,
            elementName: 'Process',
            typeInfo: '.TransProcessType'
          }, {
            name: 'workAlertInformation',
            required: true,
            collection: true,
            elementName: 'WorkAlertInformation',
            typeInfo: '.WorkAlertInformationType'
          }]
      }, {
        localName: 'AcknowledgeWorkAlertInformationType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.AcknowledgeWorkAlertInformationType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'MeasureType',
        propertyInfos: [{
            name: 'value',
            typeInfo: 'Decimal',
            type: 'value'
          }, {
            name: 'unitCode',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'unitCode'
            },
            type: 'attribute'
          }, {
            name: 'unitCodeListVersionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'unitCodeListVersionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'OpPersonnelSpecificationPropertyType',
        propertyInfos: [{
            name: 'id',
            required: true,
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'value',
            minOccurs: 0,
            collection: true,
            elementName: 'Value',
            typeInfo: '.ValueType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }]
      }, {
        localName: 'ProcessWorkAlertType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.ProcessWorkAlertType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'TransResponseCriteriaType',
        propertyInfos: [{
            name: 'responseExpression',
            elementName: 'ResponseExpression',
            typeInfo: '.TransExpressionType'
          }, {
            name: 'changeStatus',
            elementName: 'ChangeStatus',
            typeInfo: '.TransChangeStatusType'
          }]
      }, {
        localName: 'IdentifierType',
        propertyInfos: [{
            name: 'value',
            typeInfo: 'NormalizedString',
            type: 'value'
          }, {
            name: 'schemeID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'schemeID'
            },
            type: 'attribute'
          }, {
            name: 'schemeName',
            attributeName: {
              localPart: 'schemeName'
            },
            type: 'attribute'
          }, {
            name: 'schemeAgencyID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'schemeAgencyID'
            },
            type: 'attribute'
          }, {
            name: 'schemeAgencyName',
            attributeName: {
              localPart: 'schemeAgencyName'
            },
            type: 'attribute'
          }, {
            name: 'schemeVersionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'schemeVersionID'
            },
            type: 'attribute'
          }, {
            name: 'schemeDataURI',
            attributeName: {
              localPart: 'schemeDataURI'
            },
            type: 'attribute'
          }, {
            name: 'schemeURI',
            attributeName: {
              localPart: 'schemeURI'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'OpEquipmentRequirementPropertyType',
        propertyInfos: [{
            name: 'id',
            required: true,
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'value',
            minOccurs: 0,
            collection: true,
            elementName: 'Value',
            typeInfo: '.ValueType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }]
      }, {
        localName: 'ShowWorkAlertInformationType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'show',
            required: true,
            elementName: 'Show',
            typeInfo: '.TransShowType'
          }, {
            name: 'workAlertInformation',
            required: true,
            collection: true,
            elementName: 'WorkAlertInformation',
            typeInfo: '.WorkAlertInformationType'
          }]
      }, {
        localName: 'ResourceNetworkConnectionIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'AcknowledgeWorkAlertDefinitionType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.AcknowledgeWorkAlertDefinitionType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'OpMaterialSpecificationPropertyType',
        propertyInfos: [{
            name: 'id',
            required: true,
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'value',
            minOccurs: 0,
            collection: true,
            elementName: 'Value',
            typeInfo: '.ValueType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }]
      }, {
        localName: 'AmountType',
        propertyInfos: [{
            name: 'value',
            typeInfo: 'Decimal',
            type: 'value'
          }, {
            name: 'currencyID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'currencyID'
            },
            type: 'attribute'
          }, {
            name: 'currencyCodeListVersionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'currencyCodeListVersionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'MaterialActualIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'PropertyIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'ProcessWorkAlertType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'process',
            required: true,
            elementName: 'Process',
            typeInfo: '.TransProcessType'
          }, {
            name: 'workAlert',
            required: true,
            collection: true,
            elementName: 'WorkAlert',
            typeInfo: '.WorkAlertType'
          }]
      }, {
        localName: 'SyncWorkAlertType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.SyncWorkAlertType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'ActualFinishTimeType',
        baseTypeInfo: '.DateTimeType'
      }, {
        localName: 'OpMaterialCapabilityType',
        propertyInfos: [{
            name: 'materialClassID',
            minOccurs: 0,
            collection: true,
            elementName: 'MaterialClassID',
            typeInfo: '.MaterialClassIDType'
          }, {
            name: 'materialDefinitionID',
            minOccurs: 0,
            collection: true,
            elementName: 'MaterialDefinitionID',
            typeInfo: '.MaterialDefinitionIDType'
          }, {
            name: 'materialLotID',
            minOccurs: 0,
            collection: true,
            elementName: 'MaterialLotID',
            typeInfo: '.MaterialLotIDType'
          }, {
            name: 'materialSubLotID',
            minOccurs: 0,
            collection: true,
            elementName: 'MaterialSubLotID',
            typeInfo: '.MaterialSubLotIDType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'capabilityType',
            elementName: 'CapabilityType',
            typeInfo: '.CapabilityTypeType'
          }, {
            name: 'reason',
            elementName: 'Reason',
            typeInfo: '.ReasonType'
          }, {
            name: 'confidenceFactor',
            elementName: 'ConfidenceFactor',
            typeInfo: '.ConfidenceFactorType'
          }, {
            name: 'hierarchyScope',
            elementName: 'HierarchyScope',
            typeInfo: '.HierarchyScopeType'
          }, {
            name: 'materialUse',
            elementName: 'MaterialUse',
            typeInfo: '.MaterialUseType'
          }, {
            name: 'startTime',
            elementName: 'StartTime',
            typeInfo: '.StartTimeType'
          }, {
            name: 'endTime',
            elementName: 'EndTime',
            typeInfo: '.EndTimeType'
          }, {
            name: 'assemblyCapability',
            minOccurs: 0,
            collection: true,
            elementName: 'AssemblyCapability',
            typeInfo: '.OpMaterialCapabilityType'
          }, {
            name: 'assemblyType',
            elementName: 'AssemblyType',
            typeInfo: '.AssemblyTypeType'
          }, {
            name: 'assemblyRelationship',
            elementName: 'AssemblyRelationship',
            typeInfo: '.AssemblyRelationshipType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }, {
            name: 'materialCapabilityProperty',
            minOccurs: 0,
            collection: true,
            elementName: 'MaterialCapabilityProperty',
            typeInfo: '.OpMaterialCapabilityPropertyType'
          }]
      }, {
        localName: 'CapabilityTypeType',
        baseTypeInfo: '.CapabilityType1Type',
        propertyInfos: [{
            name: 'otherValue',
            attributeName: {
              localPart: 'OtherValue'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'TransExpression1Type',
        propertyInfos: [{
            name: 'value',
            typeInfo: 'Token',
            type: 'value'
          }]
      }, {
        localName: 'WorkAlertDefinitionType',
        propertyInfos: [{
            name: 'id',
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'hierarchyScope',
            elementName: 'HierarchyScope',
            typeInfo: '.HierarchyScopeType'
          }, {
            name: 'priority',
            minOccurs: 0,
            collection: true,
            elementName: 'Priority',
            typeInfo: '.PriorityType'
          }, {
            name: 'category',
            minOccurs: 0,
            collection: true,
            elementName: 'Category',
            typeInfo: '.IdentifierType'
          }, {
            name: 'property',
            minOccurs: 0,
            collection: true,
            elementName: 'Property',
            typeInfo: '.WorkAlertPropertyType'
          }]
      }, {
        localName: 'RequestStateType',
        baseTypeInfo: '.RequestState1Type',
        propertyInfos: [{
            name: 'otherValue',
            attributeName: {
              localPart: 'OtherValue'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'CancelWorkAlertType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.CancelWorkAlertType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'GetWorkAlertDefinitionType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'get',
            required: true,
            elementName: 'Get',
            typeInfo: '.TransGetType'
          }, {
            name: 'workAlertDefinition',
            required: true,
            collection: true,
            elementName: 'WorkAlertDefinition',
            typeInfo: '.WorkAlertDefinitionType'
          }]
      }, {
        localName: 'OpMaterialRequirementPropertyType',
        propertyInfos: [{
            name: 'id',
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'value',
            minOccurs: 0,
            collection: true,
            elementName: 'Value',
            typeInfo: '.ValueType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }, {
            name: 'materialRequirementProperty',
            minOccurs: 0,
            collection: true,
            elementName: 'MaterialRequirementProperty',
            typeInfo: '.OpMaterialRequirementPropertyType'
          }]
      }, {
        localName: 'EquipmentClassIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'CancelWorkAlertInformationType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'cancel',
            required: true,
            elementName: 'Cancel',
            typeInfo: '.TransCancelType'
          }, {
            name: 'workAlertInformation',
            required: true,
            collection: true,
            elementName: 'WorkAlertInformation',
            typeInfo: '.WorkAlertInformationType'
          }]
      }, {
        localName: 'EarliestStartTimeType',
        baseTypeInfo: '.DateTimeType'
      }, {
        localName: 'MaterialTestSpecificationIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'StatusTimeType',
        baseTypeInfo: '.DateTimeType'
      }, {
        localName: 'StatusType',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'VersionType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'ResponseState1Type',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'ShowWorkAlertType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'show',
            required: true,
            elementName: 'Show',
            typeInfo: '.TransShowType'
          }, {
            name: 'workAlert',
            required: true,
            collection: true,
            elementName: 'WorkAlert',
            typeInfo: '.WorkAlertType'
          }]
      }, {
        localName: 'EquipmentIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'UnitOfMeasureType',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'AcknowledgeWorkAlertType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.AcknowledgeWorkAlertType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'OpPhysicalAssetCapabilityType',
        propertyInfos: [{
            name: 'physicalAssetClassID',
            minOccurs: 0,
            collection: true,
            elementName: 'PhysicalAssetClassID',
            typeInfo: '.PhysicalAssetClassIDType'
          }, {
            name: 'physicalAssetID',
            minOccurs: 0,
            collection: true,
            elementName: 'PhysicalAssetID',
            typeInfo: '.PhysicalAssetIDType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'capabilityType',
            elementName: 'CapabilityType',
            typeInfo: '.CapabilityTypeType'
          }, {
            name: 'reason',
            elementName: 'Reason',
            typeInfo: '.ReasonType'
          }, {
            name: 'confidenceFactor',
            elementName: 'ConfidenceFactor',
            typeInfo: '.ConfidenceFactorType'
          }, {
            name: 'hierarchyScope',
            elementName: 'HierarchyScope',
            typeInfo: '.HierarchyScopeType'
          }, {
            name: 'physicalAssetUse',
            elementName: 'PhysicalAssetUse',
            typeInfo: '.PhysicalAssetUseType'
          }, {
            name: 'startTime',
            elementName: 'StartTime',
            typeInfo: '.StartTimeType'
          }, {
            name: 'endTime',
            elementName: 'EndTime',
            typeInfo: '.EndTimeType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }, {
            name: 'physicalAssetCapabilityProperty',
            minOccurs: 0,
            collection: true,
            elementName: 'PhysicalAssetCapabilityProperty',
            typeInfo: '.OpPhysicalAssetCapabilityPropertyType'
          }]
      }, {
        localName: 'EquipmentElementLevel1Type',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'EquipmentAssetMappingType',
        propertyInfos: [{
            name: 'equipmentID',
            required: true,
            elementName: 'EquipmentID',
            typeInfo: '.EquipmentIDType'
          }, {
            name: 'physicalAssetID',
            required: true,
            elementName: 'PhysicalAssetID',
            typeInfo: '.PhysicalAssetIDType'
          }, {
            name: 'startTime',
            elementName: 'StartTime',
            typeInfo: '.DateTimeType'
          }, {
            name: 'endTime',
            elementName: 'EndTime',
            typeInfo: '.DateTimeType'
          }]
      }, {
        localName: 'WorkType1Type',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'TransGetType',
        propertyInfos: [{
            name: 'expression',
            minOccurs: 0,
            collection: true,
            elementName: 'Expression',
            typeInfo: 'Token'
          }]
      }, {
        localName: 'ChangeWorkAlertType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'change',
            required: true,
            elementName: 'Change',
            typeInfo: '.TransChangeType'
          }, {
            name: 'workAlert',
            required: true,
            collection: true,
            elementName: 'WorkAlert',
            typeInfo: '.WorkAlertType'
          }]
      }, {
        localName: 'PlannedFinishTimeType',
        baseTypeInfo: '.DateTimeType'
      }, {
        localName: 'NumericType',
        typeName: {
          namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
          localPart: 'NumericType'
        },
        propertyInfos: [{
            name: 'value',
            typeInfo: 'Decimal',
            type: 'value'
          }, {
            name: 'format',
            attributeName: {
              localPart: 'format'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'RequestState1Type',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'WorkAlertPropertyType',
        propertyInfos: [{
            name: 'id',
            required: true,
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'value',
            minOccurs: 0,
            collection: true,
            elementName: 'Value',
            typeInfo: '.ValueType'
          }]
      }, {
        localName: 'OpPersonnelRequirementPropertyType',
        propertyInfos: [{
            name: 'id',
            required: true,
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'value',
            minOccurs: 0,
            collection: true,
            elementName: 'Value',
            typeInfo: '.ValueType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }]
      }, {
        localName: 'OperationsScheduleIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'TransCancelType',
        propertyInfos: [{
            name: 'actionCriteria',
            minOccurs: 0,
            collection: true,
            elementName: 'ActionCriteria',
            typeInfo: '.TransActionCriteriaType'
          }]
      }, {
        localName: 'MaterialRequirementIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'OpPhysicalAssetSpecificationPropertyType',
        propertyInfos: [{
            name: 'id',
            required: true,
            elementName: 'ID',
            typeInfo: '.IdentifierType'
          }, {
            name: 'description',
            minOccurs: 0,
            collection: true,
            elementName: 'Description',
            typeInfo: '.DescriptionType'
          }, {
            name: 'value',
            minOccurs: 0,
            collection: true,
            elementName: 'Value',
            typeInfo: '.ValueType'
          }, {
            name: 'quantity',
            minOccurs: 0,
            collection: true,
            elementName: 'Quantity',
            typeInfo: '.QuantityValueType'
          }]
      }, {
        localName: 'SyncWorkAlertDefinitionType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'sync',
            required: true,
            elementName: 'Sync',
            typeInfo: '.TransSyncType'
          }, {
            name: 'workAlertDefinition',
            required: true,
            collection: true,
            elementName: 'WorkAlertDefinition',
            typeInfo: '.WorkAlertDefinitionType'
          }]
      }, {
        localName: 'RespondWorkAlertInformationType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'respond',
            required: true,
            elementName: 'Respond',
            typeInfo: '.TransRespondType'
          }, {
            name: 'workAlertInformation',
            required: true,
            collection: true,
            elementName: 'WorkAlertInformation',
            typeInfo: '.WorkAlertInformationType'
          }]
      }, {
        localName: 'TransConfirmationCodeType',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'CodeType',
        propertyInfos: [{
            name: 'value',
            typeInfo: 'NormalizedString',
            type: 'value'
          }, {
            name: 'listID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'listID'
            },
            type: 'attribute'
          }, {
            name: 'listAgencyID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'listAgencyID'
            },
            type: 'attribute'
          }, {
            name: 'listAgencyName',
            attributeName: {
              localPart: 'listAgencyName'
            },
            type: 'attribute'
          }, {
            name: 'listName',
            attributeName: {
              localPart: 'listName'
            },
            type: 'attribute'
          }, {
            name: 'listVersionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'listVersionID'
            },
            type: 'attribute'
          }, {
            name: 'name',
            attributeName: {
              localPart: 'name'
            },
            type: 'attribute'
          }, {
            name: 'languageID',
            typeInfo: 'Language',
            attributeName: {
              localPart: 'languageID'
            },
            type: 'attribute'
          }, {
            name: 'listURI',
            attributeName: {
              localPart: 'listURI'
            },
            type: 'attribute'
          }, {
            name: 'listSchemeURI',
            attributeName: {
              localPart: 'listSchemeURI'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'GetWorkAlertInformationType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.GetWorkAlertInformationType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'LocationType',
        propertyInfos: [{
            name: 'equipmentID',
            required: true,
            elementName: 'EquipmentID',
            typeInfo: '.EquipmentIDType'
          }, {
            name: 'equipmentElementLevel',
            required: true,
            elementName: 'EquipmentElementLevel',
            typeInfo: '.EquipmentElementLevelType'
          }, {
            name: 'location',
            elementName: 'Location',
            typeInfo: '.LocationType'
          }]
      }, {
        localName: 'AssemblyType1Type',
        baseTypeInfo: '.CodeType'
      }, {
        localName: 'ResponseStateType',
        baseTypeInfo: '.ResponseState1Type',
        propertyInfos: [{
            name: 'otherValue',
            attributeName: {
              localPart: 'OtherValue'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'ChangeWorkAlertDefinitionType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.ChangeWorkAlertDefinitionType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'IdentifierType',
        typeName: {
          namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
          localPart: 'IdentifierType'
        },
        propertyInfos: [{
            name: 'value',
            typeInfo: 'NormalizedString',
            type: 'value'
          }, {
            name: 'schemeID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'schemeID'
            },
            type: 'attribute'
          }, {
            name: 'schemeName',
            attributeName: {
              localPart: 'schemeName'
            },
            type: 'attribute'
          }, {
            name: 'schemeAgencyID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'schemeAgencyID'
            },
            type: 'attribute'
          }, {
            name: 'schemeAgencyName',
            attributeName: {
              localPart: 'schemeAgencyName'
            },
            type: 'attribute'
          }, {
            name: 'schemeVersionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'schemeVersionID'
            },
            type: 'attribute'
          }, {
            name: 'schemeDataURI',
            attributeName: {
              localPart: 'schemeDataURI'
            },
            type: 'attribute'
          }, {
            name: 'schemeURI',
            attributeName: {
              localPart: 'schemeURI'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'NumericType',
        propertyInfos: [{
            name: 'value',
            typeInfo: 'Decimal',
            type: 'value'
          }, {
            name: 'format',
            attributeName: {
              localPart: 'format'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'RespondWorkAlertDefinitionType.DataArea',
        typeName: null,
        propertyInfos: [{
            name: 'respond',
            required: true,
            elementName: 'Respond',
            typeInfo: '.TransRespondType'
          }, {
            name: 'workAlertDefinition',
            required: true,
            collection: true,
            elementName: 'WorkAlertDefinition',
            typeInfo: '.WorkAlertDefinitionType'
          }]
      }, {
        localName: 'ManufacturingBillIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'CancelWorkAlertDefinitionType',
        propertyInfos: [{
            name: 'applicationArea',
            required: true,
            elementName: 'ApplicationArea',
            typeInfo: '.TransApplicationAreaType'
          }, {
            name: 'dataArea',
            required: true,
            elementName: 'DataArea',
            typeInfo: '.CancelWorkAlertDefinitionType.DataArea'
          }, {
            name: 'releaseID',
            required: true,
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'releaseID'
            },
            type: 'attribute'
          }, {
            name: 'versionID',
            typeInfo: 'NormalizedString',
            attributeName: {
              localPart: 'versionID'
            },
            type: 'attribute'
          }]
      }, {
        localName: 'EquipmentCapabilityTestSpecificationIDType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'StorageLocationType',
        baseTypeInfo: '.IdentifierType'
      }, {
        localName: 'ActualStartTimeType',
        baseTypeInfo: '.DateTimeType'
      }, {
        type: 'enumInfo',
        localName: 'TransActionCodeEnumerationType',
        values: ['Add', 'Change', 'Delete', 'Replaced', 'Accepted', 'Modified', 'Rejected']
      }, {
        type: 'enumInfo',
        localName: 'TransResponseCodeType',
        baseTypeInfo: 'NormalizedString',
        values: ['Always', 'OnError']
      }],
    elementInfos: [{
        elementName: 'RespondWorkAlertInformation',
        typeInfo: '.RespondWorkAlertInformationType'
      }, {
        elementName: 'WorkAlertDefinition',
        typeInfo: '.WorkAlertDefinitionType'
      }, {
        elementName: 'ChangeWorkAlertInformation',
        typeInfo: '.ChangeWorkAlertInformationType'
      }, {
        elementName: 'HierarchyScope',
        typeInfo: '.HierarchyScopeType',
        scope: '.WorkAlertInformationType'
      }, {
        elementName: 'DataType',
        typeInfo: '.DataTypeType',
        scope: '.ValueType'
      }, {
        elementName: 'RespondWorkAlertDefinition',
        typeInfo: '.RespondWorkAlertDefinitionType'
      }, {
        elementName: 'ID',
        typeInfo: '.IdentifierType',
        scope: '.WorkAlertInformationType'
      }, {
        elementName: 'ShowWorkAlertDefinition',
        typeInfo: '.ShowWorkAlertDefinitionType'
      }, {
        elementName: 'CancelWorkAlert',
        typeInfo: '.CancelWorkAlertType'
      }, {
        elementName: 'GetWorkAlertInformation',
        typeInfo: '.GetWorkAlertInformationType'
      }, {
        elementName: 'GetWorkAlertDefinition',
        typeInfo: '.GetWorkAlertDefinitionType'
      }, {
        elementName: 'ProcessWorkAlertDefinition',
        typeInfo: '.ProcessWorkAlertDefinitionType'
      }, {
        elementName: 'ChangeWorkAlertDefinition',
        typeInfo: '.ChangeWorkAlertDefinitionType'
      }, {
        elementName: 'DataType',
        typeInfo: '.DataTypeType',
        scope: '.QuantityValueType'
      }, {
        elementName: 'ShowWorkAlertInformation',
        typeInfo: '.ShowWorkAlertInformationType'
      }, {
        elementName: 'RespondWorkAlert',
        typeInfo: '.RespondWorkAlertType'
      }, {
        elementName: 'WorkAlertInformation',
        typeInfo: '.WorkAlertInformationType'
      }, {
        elementName: 'ProcessWorkAlert',
        typeInfo: '.ProcessWorkAlertType'
      }, {
        elementName: 'UnitOfMeasure',
        typeInfo: '.UnitOfMeasureType',
        scope: '.ValueType'
      }, {
        elementName: 'WorkAlert',
        typeInfo: '.WorkAlertType'
      }, {
        elementName: 'AcknowledgeWorkAlertInformation',
        typeInfo: '.AcknowledgeWorkAlertInformationType'
      }, {
        elementName: 'GetWorkAlert',
        typeInfo: '.GetWorkAlertType'
      }, {
        elementName: 'UnitOfMeasure',
        typeInfo: '.UnitOfMeasureType',
        scope: '.ResultType'
      }, {
        elementName: 'ShowWorkAlert',
        typeInfo: '.ShowWorkAlertType'
      }, {
        elementName: 'UnitOfMeasure',
        typeInfo: '.UnitOfMeasureType',
        scope: '.QuantityValueType'
      }, {
        elementName: 'ProcessWorkAlertInformation',
        typeInfo: '.ProcessWorkAlertInformationType'
      }, {
        elementName: 'CancelWorkAlertDefinition',
        typeInfo: '.CancelWorkAlertDefinitionType'
      }, {
        elementName: 'SyncWorkAlertInformation',
        typeInfo: '.SyncWorkAlertInformationType'
      }, {
        elementName: 'ChangeWorkAlert',
        typeInfo: '.ChangeWorkAlertType'
      }, {
        elementName: 'PublishedDate',
        typeInfo: '.PublishedDateType',
        scope: '.WorkAlertInformationType'
      }, {
        elementName: 'SyncWorkAlert',
        typeInfo: '.SyncWorkAlertType'
      }, {
        elementName: 'AcknowledgeWorkAlertDefinition',
        typeInfo: '.AcknowledgeWorkAlertDefinitionType'
      }, {
        elementName: 'DataType',
        typeInfo: '.DataTypeType',
        scope: '.ResultType'
      }, {
        elementName: 'CancelWorkAlertInformation',
        typeInfo: '.CancelWorkAlertInformationType'
      }, {
        elementName: 'AcknowledgeWorkAlert',
        typeInfo: '.AcknowledgeWorkAlertType'
      }, {
        elementName: 'SyncWorkAlertDefinition',
        typeInfo: '.SyncWorkAlertDefinitionType'
      }]
  };
  return {
    WorkAlert: WorkAlert
  };
};
if (typeof define === 'function' && define.amd) {
  define([], WorkAlert_Module_Factory);
}
else {
  var WorkAlert_Module = WorkAlert_Module_Factory();
  if (typeof module !== 'undefined' && module.exports) {
    module.exports.WorkAlert = WorkAlert_Module.WorkAlert;
  }
  else {
    var WorkAlert = WorkAlert_Module.WorkAlert;
  }
}