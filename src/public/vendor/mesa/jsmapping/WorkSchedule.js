var WorkSchedule_Module_Factory = function () {
    var WorkSchedule = {
        name: 'WorkSchedule',
        defaultElementNamespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600',
        typeInfos: [{
            localName: 'OpEquipmentRequirementPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'ProblemType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'OpPhysicalAssetSpecificationType',
            propertyInfos: [{
                name: 'physicalAssetClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetClassID',
                typeInfo: '.PhysicalAssetClassIDType'
            }, {
                name: 'physicalAssetID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetID',
                typeInfo: '.PhysicalAssetIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'physicalAssetUse',
                elementName: 'PhysicalAssetUse',
                typeInfo: '.PhysicalAssetUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'physicalAssetSpecificationProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetSpecificationProperty',
                typeInfo: '.OpPhysicalAssetSpecificationPropertyType'
            }]
        }, {
            localName: 'TransSyncType',
            propertyInfos: [{
                name: 'actionCriteria',
                minOccurs: 0,
                collection: true,
                elementName: 'ActionCriteria',
                typeInfo: '.TransActionCriteriaType'
            }]
        }, {
            localName: 'OpMaterialSpecificationPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'JobOrderDispatchStatusType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'TransExpression1Type',
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Token',
                type: 'value'
            }]
        }, {
            localName: 'TransConfirmationCodeType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'StatusType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'AssemblyTypeType',
            baseTypeInfo: '.AssemblyType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'AnyGenericValueType',
            propertyInfos: [{
                name: 'value',
                type: 'value'
            }, {
                name: 'currencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'currencyID'
                },
                type: 'attribute'
            }, {
                name: 'currencyCodeListVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'currencyCodeListVersionID'
                },
                type: 'attribute'
            }, {
                name: 'encodingCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'encodingCode'
                },
                type: 'attribute'
            }, {
                name: 'format',
                attributeName: {
                    localPart: 'format'
                },
                type: 'attribute'
            }, {
                name: 'characterSetCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'characterSetCode'
                },
                type: 'attribute'
            }, {
                name: 'listID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'listID'
                },
                type: 'attribute'
            }, {
                name: 'listAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'listAgencyID'
                },
                type: 'attribute'
            }, {
                name: 'listAgencyName',
                attributeName: {
                    localPart: 'listAgencyName'
                },
                type: 'attribute'
            }, {
                name: 'listName',
                attributeName: {
                    localPart: 'listName'
                },
                type: 'attribute'
            }, {
                name: 'listVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'listVersionID'
                },
                type: 'attribute'
            }, {
                name: 'languageID',
                typeInfo: 'Language',
                attributeName: {
                    localPart: 'languageID'
                },
                type: 'attribute'
            }, {
                name: 'languageLocaleID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'languageLocaleID'
                },
                type: 'attribute'
            }, {
                name: 'listURI',
                attributeName: {
                    localPart: 'listURI'
                },
                type: 'attribute'
            }, {
                name: 'listSchemaURI',
                attributeName: {
                    localPart: 'listSchemaURI'
                },
                type: 'attribute'
            }, {
                name: 'mimeCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'mimeCode'
                },
                type: 'attribute'
            }, {
                name: 'name',
                attributeName: {
                    localPart: 'name'
                },
                type: 'attribute'
            }, {
                name: 'schemaID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'schemaID'
                },
                type: 'attribute'
            }, {
                name: 'schemaName',
                attributeName: {
                    localPart: 'schemaName'
                },
                type: 'attribute'
            }, {
                name: 'schemaAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'schemaAgencyID'
                },
                type: 'attribute'
            }, {
                name: 'schemaAgencyName',
                attributeName: {
                    localPart: 'schemaAgencyName'
                },
                type: 'attribute'
            }, {
                name: 'schemaVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'schemaVersionID'
                },
                type: 'attribute'
            }, {
                name: 'schemaDataURI',
                attributeName: {
                    localPart: 'schemaDataURI'
                },
                type: 'attribute'
            }, {
                name: 'schemaURI',
                attributeName: {
                    localPart: 'schemaURI'
                },
                type: 'attribute'
            }, {
                name: 'unitCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCode'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCodeListID'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCodeListAgencyID'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListAgencyName',
                attributeName: {
                    localPart: 'unitCodeListAgencyName'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCodeListVersionID'
                },
                type: 'attribute'
            }, {
                name: 'filename',
                attributeName: {
                    localPart: 'filename'
                },
                type: 'attribute'
            }, {
                name: 'uri',
                attributeName: {
                    localPart: 'uri'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OpPersonnelCapabilityType',
            propertyInfos: [{
                name: 'personnelClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelClassID',
                typeInfo: '.PersonnelClassIDType'
            }, {
                name: 'personID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonID',
                typeInfo: '.PersonIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'capabilityType',
                elementName: 'CapabilityType',
                typeInfo: '.CapabilityTypeType'
            }, {
                name: 'reason',
                elementName: 'Reason',
                typeInfo: '.ReasonType'
            }, {
                name: 'confidenceFactor',
                elementName: 'ConfidenceFactor',
                typeInfo: '.ConfidenceFactorType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'personnelUse',
                elementName: 'PersonnelUse',
                typeInfo: '.PersonnelUseType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'personnelCapabilityProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelCapabilityProperty',
                typeInfo: '.OpPersonnelCapabilityPropertyType'
            }]
        }, {
            localName: 'CorrectionType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'PropertyIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'OpPersonnelSpecificationType',
            propertyInfos: [{
                name: 'personnelClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelClassID',
                typeInfo: '.PersonnelClassIDType'
            }, {
                name: 'personID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonID',
                typeInfo: '.PersonIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'personnelUse',
                elementName: 'PersonnelUse',
                typeInfo: '.PersonnelUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'personnelSpecificationProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelSpecificationProperty',
                typeInfo: '.OpPersonnelSpecificationPropertyType'
            }]
        }, {
            localName: 'ShowWorkScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'workSchedule',
                required: true,
                collection: true,
                elementName: 'WorkSchedule',
                typeInfo: '.WorkScheduleType'
            }]
        }, {
            localName: 'RespondJobListType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'jobList',
                required: true,
                collection: true,
                elementName: 'JobList',
                typeInfo: '.JobListType'
            }]
        }, {
            localName: 'RequiredByRequestedSegmentResponseType',
            baseTypeInfo: '.RequiredByRequestedSegmentResponse1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OperationsRequestIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'DescriptionType',
            baseTypeInfo: '.TextType'
        }, {
            localName: 'JobOrderType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'workType',
                elementName: 'WorkType',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'workMasterID',
                elementName: 'WorkMasterID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'workMasterVersion',
                elementName: 'WorkMasterVersion',
                typeInfo: '.VersionType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'priority',
                elementName: 'Priority',
                typeInfo: '.PriorityType'
            }, {
                name: 'command',
                elementName: 'Command',
                typeInfo: '.JobOrderCommandType'
            }, {
                name: 'commandRule',
                elementName: 'CommandRule',
                typeInfo: '.JobOrderCommandRuleType'
            }, {
                name: 'dispatchStatus',
                elementName: 'DispatchStatus',
                typeInfo: '.JobOrderDispatchStatusType'
            }, {
                name: 'jobOrderParameter',
                minOccurs: 0,
                collection: true,
                elementName: 'JobOrderParameter',
                typeInfo: '.ParameterType'
            }, {
                name: 'personnelRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelRequirement',
                typeInfo: '.OpPersonnelRequirementType'
            }, {
                name: 'equipmentRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentRequirement',
                typeInfo: '.OpEquipmentRequirementType'
            }, {
                name: 'physicalAssetRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetRequirement',
                typeInfo: '.OpPhysicalAssetRequirementType'
            }, {
                name: 'materialRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialRequirement',
                typeInfo: '.OpMaterialRequirementType'
            }]
        }, {
            localName: 'ProcessWorkScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'workSchedule',
                required: true,
                collection: true,
                elementName: 'WorkSchedule',
                typeInfo: '.WorkScheduleType'
            }]
        }, {
            localName: 'PhysicalAssetUseType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'TransUserAreaType',
            propertyInfos: [{
                name: 'any',
                minOccurs: 0,
                collection: true,
                allowDom: false,
                mixed: false,
                type: 'anyElement'
            }]
        }, {
            localName: 'AcknowledgeJobListType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeJobListType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OperationsDefinitionIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'BinaryObjectType',
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Base64Binary',
                type: 'value'
            }, {
                name: 'format',
                attributeName: {
                    localPart: 'format'
                },
                type: 'attribute'
            }, {
                name: 'mimeCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'mimeCode'
                },
                type: 'attribute'
            }, {
                name: 'encodingCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'encodingCode'
                },
                type: 'attribute'
            }, {
                name: 'characterSetCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'characterSetCode'
                },
                type: 'attribute'
            }, {
                name: 'uri',
                attributeName: {
                    localPart: 'uri'
                },
                type: 'attribute'
            }, {
                name: 'filename',
                attributeName: {
                    localPart: 'filename'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'MaterialUseType',
            baseTypeInfo: '.MaterialUse1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OpEquipmentRequirementType',
            propertyInfos: [{
                name: 'equipmentClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentClassID',
                typeInfo: '.EquipmentClassIDType'
            }, {
                name: 'equipmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentID',
                typeInfo: '.EquipmentIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'equipmentUse',
                elementName: 'EquipmentUse',
                typeInfo: '.EquipmentUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'equipmentLevel',
                elementName: 'EquipmentLevel',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'equipmentRequirementProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentRequirementProperty',
                typeInfo: '.OpEquipmentRequirementPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'AssemblyRelationship1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'SyncWorkScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncWorkScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'AmountType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'AmountType'
            },
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Decimal',
                type: 'value'
            }, {
                name: 'currencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'currencyID'
                },
                type: 'attribute'
            }, {
                name: 'currencyCodeListVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'currencyCodeListVersionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ChangeJobListType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeJobListType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ProductProductionRuleIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'TransAcknowledgeType',
            propertyInfos: [{
                name: 'originalApplicationArea',
                elementName: 'OriginalApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'responseCriteria',
                minOccurs: 0,
                collection: true,
                elementName: 'ResponseCriteria',
                typeInfo: '.TransResponseCriteriaType'
            }]
        }, {
            localName: 'JobOrderCommand1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'ValueType',
            propertyInfos: [{
                name: 'valueString',
                required: true,
                elementName: 'ValueString',
                typeInfo: '.ValueStringType'
            }, {
                name: 'dataType',
                mixed: false,
                allowDom: false,
                elementName: 'DataType',
                typeInfo: '.DataTypeType',
                type: 'elementRef'
            }, {
                name: 'unitOfMeasure',
                mixed: false,
                allowDom: false,
                elementName: 'UnitOfMeasure',
                typeInfo: '.UnitOfMeasureType',
                type: 'elementRef'
            }, {
                name: 'key',
                elementName: 'Key',
                typeInfo: '.IdentifierType'
            }]
        }, {
            localName: 'AcknowledgeWorkScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'workSchedule',
                required: true,
                collection: true,
                elementName: 'WorkSchedule',
                typeInfo: '.WorkScheduleType'
            }]
        }, {
            localName: 'SyncJobListType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'jobList',
                required: true,
                collection: true,
                elementName: 'JobList',
                typeInfo: '.JobListType'
            }]
        }, {
            localName: 'LocationType',
            propertyInfos: [{
                name: 'equipmentID',
                required: true,
                elementName: 'EquipmentID',
                typeInfo: '.EquipmentIDType'
            }, {
                name: 'equipmentElementLevel',
                required: true,
                elementName: 'EquipmentElementLevel',
                typeInfo: '.EquipmentElementLevelType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }]
        }, {
            localName: 'OpMaterialActualPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'materialActualProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialActualProperty',
                typeInfo: '.OpMaterialActualPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'RequestStateType',
            baseTypeInfo: '.RequestState1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'TransRespondType',
            propertyInfos: [{
                name: 'originalApplicationArea',
                elementName: 'OriginalApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'responseCriteria',
                minOccurs: 0,
                collection: true,
                elementName: 'ResponseCriteria',
                typeInfo: '.TransResponseCriteriaType'
            }]
        }, {
            localName: 'EquipmentClassIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'TransConfirmType',
            propertyInfos: [{
                name: 'originalApplicationArea',
                elementName: 'OriginalApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'responseCriteria',
                minOccurs: 0,
                collection: true,
                elementName: 'ResponseCriteria',
                typeInfo: '.TransResponseCriteriaType'
            }]
        }, {
            localName: 'TestResultType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'testDateTime',
                elementName: 'TestDateTime',
                typeInfo: '.TestDateTimeType'
            }, {
                name: 'result',
                minOccurs: 0,
                collection: true,
                elementName: 'Result',
                typeInfo: '.ResultType'
            }, {
                name: 'expirationTime',
                elementName: 'ExpirationTime',
                typeInfo: '.ExpirationTimeType'
            }]
        }, {
            localName: 'WorkScheduleType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'workType',
                elementName: 'WorkType',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'scheduleState',
                elementName: 'ScheduleState',
                typeInfo: '.RequestStateType'
            }, {
                name: 'publishedDate',
                elementName: 'PublishedDate',
                typeInfo: '.PublishedDateType'
            }, {
                name: 'workSchedule',
                minOccurs: 0,
                collection: true,
                elementName: 'WorkSchedule',
                typeInfo: '.WorkScheduleType'
            }, {
                name: 'workRequest',
                minOccurs: 0,
                collection: true,
                elementName: 'WorkRequest',
                typeInfo: '.WorkRequestType'
            }]
        }, {
            localName: 'MaterialTestSpecificationIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'TextType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'TextType'
            },
            propertyInfos: [{
                name: 'value',
                type: 'value'
            }, {
                name: 'languageID',
                typeInfo: 'Language',
                attributeName: {
                    localPart: 'languageID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ResponseState1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'EndTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'GetWorkScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'workSchedule',
                required: true,
                collection: true,
                elementName: 'WorkSchedule',
                typeInfo: '.WorkScheduleType'
            }]
        }, {
            localName: 'GetWorkScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetWorkScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OpMaterialSpecificationType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'materialClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialClassID',
                typeInfo: '.MaterialClassIDType'
            }, {
                name: 'materialDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialDefinitionID',
                typeInfo: '.MaterialDefinitionIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'materialUse',
                elementName: 'MaterialUse',
                typeInfo: '.MaterialUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'assemblySpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'AssemblySpecification',
                typeInfo: '.OpMaterialSpecificationType'
            }, {
                name: 'assemblyType',
                elementName: 'AssemblyType',
                typeInfo: '.AssemblyTypeType'
            }, {
                name: 'assemblyRelationship',
                elementName: 'AssemblyRelationship',
                typeInfo: '.AssemblyRelationshipType'
            }, {
                name: 'materialSpecificationProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSpecificationProperty',
                typeInfo: '.OpMaterialSpecificationPropertyType'
            }]
        }, {
            localName: 'MeasureType',
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Decimal',
                type: 'value'
            }, {
                name: 'unitCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCode'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCodeListVersionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'QualificationTestSpecificationIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'OperationsType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'RelationshipFormType',
            baseTypeInfo: '.RelationshipForm1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'PersonnelClassIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ResourceNetworkConnectionIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'AcknowledgeWorkScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeWorkScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OpPersonnelActualPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'ActualFinishTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'ShowJobListType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'jobList',
                required: true,
                collection: true,
                elementName: 'JobList',
                typeInfo: '.JobListType'
            }]
        }, {
            localName: 'OpPhysicalAssetCapabilityPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'MaterialCapabilityIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'OpPhysicalAssetActualPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'ChangeWorkScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeWorkScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'TransChangeStatusType',
            propertyInfos: [{
                name: 'code',
                elementName: 'Code',
                typeInfo: '.CodeType'
            }, {
                name: 'description',
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'effectiveDateTime',
                elementName: 'EffectiveDateTime',
                typeInfo: '.DateTimeType'
            }, {
                name: 'reasonCode',
                elementName: 'ReasonCode',
                typeInfo: '.CodeType'
            }, {
                name: 'reason',
                minOccurs: 0,
                collection: true,
                elementName: 'Reason',
                typeInfo: '.CodeType'
            }, {
                name: 'stateChange',
                minOccurs: 0,
                collection: true,
                elementName: 'StateChange',
                typeInfo: '.TransStateChangeType'
            }, {
                name: 'userArea',
                elementName: 'UserArea',
                typeInfo: '.TransUserAreaType'
            }]
        }, {
            localName: 'OpEquipmentCapabilityPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'WorkType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'MeasureType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'MeasureType'
            },
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Decimal',
                type: 'value'
            }, {
                name: 'unitCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCode'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCodeListVersionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'NumericType',
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Decimal',
                type: 'value'
            }, {
                name: 'format',
                attributeName: {
                    localPart: 'format'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'DataType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'CodeType',
            propertyInfos: [{
                name: 'value',
                typeInfo: 'NormalizedString',
                type: 'value'
            }, {
                name: 'listID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'listID'
                },
                type: 'attribute'
            }, {
                name: 'listAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'listAgencyID'
                },
                type: 'attribute'
            }, {
                name: 'listAgencyName',
                attributeName: {
                    localPart: 'listAgencyName'
                },
                type: 'attribute'
            }, {
                name: 'listName',
                attributeName: {
                    localPart: 'listName'
                },
                type: 'attribute'
            }, {
                name: 'listVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'listVersionID'
                },
                type: 'attribute'
            }, {
                name: 'name',
                attributeName: {
                    localPart: 'name'
                },
                type: 'attribute'
            }, {
                name: 'languageID',
                typeInfo: 'Language',
                attributeName: {
                    localPart: 'languageID'
                },
                type: 'attribute'
            }, {
                name: 'listURI',
                attributeName: {
                    localPart: 'listURI'
                },
                type: 'attribute'
            }, {
                name: 'listSchemeURI',
                attributeName: {
                    localPart: 'listSchemeURI'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'EquipmentElementLevel1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'OpPersonnelSpecificationPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'QuantityType',
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Decimal',
                type: 'value'
            }, {
                name: 'unitCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCode'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCodeListID'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCodeListAgencyID'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListAgencyName',
                attributeName: {
                    localPart: 'unitCodeListAgencyName'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'MaterialLotIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'TransExpressionType',
            baseTypeInfo: '.TransExpression1Type',
            propertyInfos: [{
                name: 'actionCode',
                required: true,
                attributeName: {
                    localPart: 'actionCode'
                },
                type: 'attribute'
            }, {
                name: 'expressionLanguage',
                typeInfo: 'Token',
                attributeName: {
                    localPart: 'expressionLanguage'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'CauseType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'ProcessSegmentIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ResponseStateType',
            baseTypeInfo: '.ResponseState1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'DependencyType',
            baseTypeInfo: '.Dependency1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'PhysicalAssetClassIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'TransSignatureType',
            propertyInfos: [{
                name: 'any',
                minOccurs: 0,
                collection: true,
                allowDom: false,
                mixed: false,
                type: 'anyElement'
            }, {
                name: 'qualifyingAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'qualifyingAgencyID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ValueStringType',
            baseTypeInfo: '.AnyGenericValueType'
        }, {
            localName: 'ProcessJobListType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessJobListType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'TransGetType',
            propertyInfos: [{
                name: 'expression',
                minOccurs: 0,
                collection: true,
                elementName: 'Expression',
                typeInfo: 'Token'
            }]
        }, {
            localName: 'ProcessJobListType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'jobList',
                required: true,
                collection: true,
                elementName: 'JobList',
                typeInfo: '.JobListType'
            }]
        }, {
            localName: 'OperationsScheduleIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'NameType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'NameType'
            },
            propertyInfos: [{
                name: 'value',
                type: 'value'
            }, {
                name: 'languageID',
                typeInfo: 'Language',
                attributeName: {
                    localPart: 'languageID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OpPhysicalAssetRequirementType',
            propertyInfos: [{
                name: 'physicalAssetClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetClassID',
                typeInfo: '.PhysicalAssetClassIDType'
            }, {
                name: 'physicalAssetID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetID',
                typeInfo: '.PhysicalAssetIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'physicalAssetUse',
                elementName: 'PhysicalAssetUse',
                typeInfo: '.PhysicalAssetUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'equipmentLevel',
                elementName: 'EquipmentLevel',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'physicalAssetRequirementProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetRequirementProperty',
                typeInfo: '.OpPhysicalAssetRequirementPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'PersonNameType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'PhysicalAssetCapabilityTestSpecificationIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'CancelJobListType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelJobListType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'PersonIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'OpMaterialActualType',
            propertyInfos: [{
                name: 'materialClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialClassID',
                typeInfo: '.MaterialClassIDType'
            }, {
                name: 'materialDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialDefinitionID',
                typeInfo: '.MaterialDefinitionIDType'
            }, {
                name: 'materialLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialLotID',
                typeInfo: '.MaterialLotIDType'
            }, {
                name: 'materialSubLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSubLotID',
                typeInfo: '.MaterialSubLotIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'materialUse',
                elementName: 'MaterialUse',
                typeInfo: '.MaterialUseType'
            }, {
                name: 'storageLocation',
                elementName: 'StorageLocation',
                typeInfo: '.StorageLocationType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'assemblyActual',
                minOccurs: 0,
                collection: true,
                elementName: 'AssemblyActual',
                typeInfo: '.OpMaterialActualType'
            }, {
                name: 'assemblyType',
                elementName: 'AssemblyType',
                typeInfo: '.AssemblyTypeType'
            }, {
                name: 'assemblyRelationship',
                elementName: 'AssemblyRelationship',
                typeInfo: '.AssemblyRelationshipType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'materialActualProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialActualProperty',
                typeInfo: '.OpMaterialActualPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'OpSegmentResponseType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'operationsType',
                elementName: 'OperationsType',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'processSegmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'ProcessSegmentID',
                typeInfo: '.ProcessSegmentIDType'
            }, {
                name: 'actualStartTime',
                elementName: 'ActualStartTime',
                typeInfo: '.ActualStartTimeType'
            }, {
                name: 'actualEndTime',
                elementName: 'ActualEndTime',
                typeInfo: '.ActualEndTimeType'
            }, {
                name: 'operationsDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'OperationsDefinitionID',
                typeInfo: '.OperationsDefinitionIDType'
            }, {
                name: 'segmentState',
                elementName: 'SegmentState',
                typeInfo: '.ResponseStateType'
            }, {
                name: 'segmentData',
                minOccurs: 0,
                collection: true,
                elementName: 'SegmentData',
                typeInfo: '.OpSegmentDataType'
            }, {
                name: 'personnelActual',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelActual',
                typeInfo: '.OpPersonnelActualType'
            }, {
                name: 'equipmentActual',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentActual',
                typeInfo: '.OpEquipmentActualType'
            }, {
                name: 'physicalAssetActual',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetActual',
                typeInfo: '.OpPhysicalAssetActualType'
            }, {
                name: 'materialActual',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialActual',
                typeInfo: '.OpMaterialActualType'
            }, {
                name: 'segmentResponse',
                minOccurs: 0,
                collection: true,
                elementName: 'SegmentResponse',
                typeInfo: '.OpSegmentResponseType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'OpEquipmentActualPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'CodeType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'CodeType'
            },
            propertyInfos: [{
                name: 'value',
                typeInfo: 'NormalizedString',
                type: 'value'
            }, {
                name: 'listID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'listID'
                },
                type: 'attribute'
            }, {
                name: 'listAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'listAgencyID'
                },
                type: 'attribute'
            }, {
                name: 'listAgencyName',
                attributeName: {
                    localPart: 'listAgencyName'
                },
                type: 'attribute'
            }, {
                name: 'listName',
                attributeName: {
                    localPart: 'listName'
                },
                type: 'attribute'
            }, {
                name: 'listVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'listVersionID'
                },
                type: 'attribute'
            }, {
                name: 'name',
                attributeName: {
                    localPart: 'name'
                },
                type: 'attribute'
            }, {
                name: 'languageID',
                typeInfo: 'Language',
                attributeName: {
                    localPart: 'languageID'
                },
                type: 'attribute'
            }, {
                name: 'listURI',
                attributeName: {
                    localPart: 'listURI'
                },
                type: 'attribute'
            }, {
                name: 'listSchemeURI',
                attributeName: {
                    localPart: 'listSchemeURI'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'RequiredByRequestedSegmentResponse1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'ChangeJobListType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'jobList',
                required: true,
                collection: true,
                elementName: 'JobList',
                typeInfo: '.JobListType'
            }]
        }, {
            localName: 'OpPersonnelRequirementType',
            propertyInfos: [{
                name: 'personnelClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelClassID',
                typeInfo: '.PersonnelClassIDType'
            }, {
                name: 'personID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonID',
                typeInfo: '.PersonIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'personnelUse',
                elementName: 'PersonnelUse',
                typeInfo: '.PersonnelUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'personnelRequirementProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelRequirementProperty',
                typeInfo: '.OpPersonnelRequirementPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'PlannedStartTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'DataTypeType',
            baseTypeInfo: '.DataType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OperationsTypeType',
            baseTypeInfo: '.OperationsType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'StatusTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'TransReceiverType',
            propertyInfos: [{
                name: 'logicalID',
                elementName: 'LogicalID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'componentID',
                elementName: 'ComponentID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'id',
                minOccurs: 0,
                collection: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }]
        }, {
            localName: 'GetJobListType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetJobListType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'RelationshipForm1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'IdentifierType',
            propertyInfos: [{
                name: 'value',
                typeInfo: 'NormalizedString',
                type: 'value'
            }, {
                name: 'schemeID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'schemeID'
                },
                type: 'attribute'
            }, {
                name: 'schemeName',
                attributeName: {
                    localPart: 'schemeName'
                },
                type: 'attribute'
            }, {
                name: 'schemeAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'schemeAgencyID'
                },
                type: 'attribute'
            }, {
                name: 'schemeAgencyName',
                attributeName: {
                    localPart: 'schemeAgencyName'
                },
                type: 'attribute'
            }, {
                name: 'schemeVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'schemeVersionID'
                },
                type: 'attribute'
            }, {
                name: 'schemeDataURI',
                attributeName: {
                    localPart: 'schemeDataURI'
                },
                type: 'attribute'
            }, {
                name: 'schemeURI',
                attributeName: {
                    localPart: 'schemeURI'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'IdentifierType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'IdentifierType'
            },
            propertyInfos: [{
                name: 'value',
                typeInfo: 'NormalizedString',
                type: 'value'
            }, {
                name: 'schemeID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'schemeID'
                },
                type: 'attribute'
            }, {
                name: 'schemeName',
                attributeName: {
                    localPart: 'schemeName'
                },
                type: 'attribute'
            }, {
                name: 'schemeAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'schemeAgencyID'
                },
                type: 'attribute'
            }, {
                name: 'schemeAgencyName',
                attributeName: {
                    localPart: 'schemeAgencyName'
                },
                type: 'attribute'
            }, {
                name: 'schemeVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'schemeVersionID'
                },
                type: 'attribute'
            }, {
                name: 'schemeDataURI',
                attributeName: {
                    localPart: 'schemeDataURI'
                },
                type: 'attribute'
            }, {
                name: 'schemeURI',
                attributeName: {
                    localPart: 'schemeURI'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'WorkRequestIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'Dependency1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'ProcessWorkScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessWorkScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ResourceIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'EquipmentAssetMappingType',
            propertyInfos: [{
                name: 'equipmentID',
                required: true,
                elementName: 'EquipmentID',
                typeInfo: '.EquipmentIDType'
            }, {
                name: 'physicalAssetID',
                required: true,
                elementName: 'PhysicalAssetID',
                typeInfo: '.PhysicalAssetIDType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.DateTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.DateTimeType'
            }]
        }, {
            localName: 'ExpirationTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'TransResponseCriteriaType',
            propertyInfos: [{
                name: 'responseExpression',
                elementName: 'ResponseExpression',
                typeInfo: '.TransExpressionType'
            }, {
                name: 'changeStatus',
                elementName: 'ChangeStatus',
                typeInfo: '.TransChangeStatusType'
            }]
        }, {
            localName: 'SyncWorkScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'workSchedule',
                required: true,
                collection: true,
                elementName: 'WorkSchedule',
                typeInfo: '.WorkScheduleType'
            }]
        }, {
            localName: 'UnitOfMeasureType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'MaterialActualIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'MaterialSubLotIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'QuantityType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'QuantityType'
            },
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Decimal',
                type: 'value'
            }, {
                name: 'unitCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCode'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCodeListID'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCodeListAgencyID'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListAgencyName',
                attributeName: {
                    localPart: 'unitCodeListAgencyName'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'GetJobListType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'jobList',
                required: true,
                collection: true,
                elementName: 'JobList',
                typeInfo: '.JobListType'
            }]
        }, {
            localName: 'EquipmentElementLevelType',
            baseTypeInfo: '.EquipmentElementLevel1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'CertificateOfAnalysisReferenceType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ProductionScheduleIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'QuantityValueType',
            propertyInfos: [{
                name: 'quantityString',
                required: true,
                elementName: 'QuantityString',
                typeInfo: '.QuantityStringType'
            }, {
                name: 'dataType',
                mixed: false,
                allowDom: false,
                elementName: 'DataType',
                typeInfo: '.DataTypeType',
                type: 'elementRef'
            }, {
                name: 'unitOfMeasure',
                mixed: false,
                allowDom: false,
                elementName: 'UnitOfMeasure',
                typeInfo: '.UnitOfMeasureType',
                type: 'elementRef'
            }, {
                name: 'key',
                elementName: 'Key',
                typeInfo: '.IdentifierType'
            }]
        }, {
            localName: 'OpEquipmentActualType',
            propertyInfos: [{
                name: 'equipmentClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentClassID',
                typeInfo: '.EquipmentClassIDType'
            }, {
                name: 'equipmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentID',
                typeInfo: '.EquipmentIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'equipmentUse',
                elementName: 'EquipmentUse',
                typeInfo: '.EquipmentUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'equipmentActualProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentActualProperty',
                typeInfo: '.OpEquipmentActualPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'WorkTypeType',
            baseTypeInfo: '.WorkType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'BillOfMaterialIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'WorkRequestType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'workype',
                elementName: 'Workype',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'priority',
                elementName: 'Priority',
                typeInfo: '.PriorityType'
            }, {
                name: 'workRequest',
                minOccurs: 0,
                collection: true,
                elementName: 'WorkRequest',
                typeInfo: '.WorkRequestType'
            }, {
                name: 'jobOrder',
                minOccurs: 0,
                collection: true,
                elementName: 'JobOrder',
                typeInfo: '.JobOrderType'
            }]
        }, {
            localName: 'TransActionCriteriaType',
            propertyInfos: [{
                name: 'actionExpression',
                minOccurs: 0,
                collection: true,
                elementName: 'ActionExpression',
                typeInfo: '.TransExpressionType'
            }, {
                name: 'changeStatus',
                elementName: 'ChangeStatus',
                typeInfo: '.TransChangeStatusType'
            }]
        }, {
            localName: 'RespondWorkScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondWorkScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'PhysicalAssetActualIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'RespondJobListType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondJobListType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'HierarchyScopeType',
            propertyInfos: [{
                name: 'equipmentID',
                required: true,
                elementName: 'EquipmentID',
                typeInfo: '.EquipmentIDType'
            }, {
                name: 'equipmentElementLevel',
                required: true,
                elementName: 'EquipmentElementLevel',
                typeInfo: '.EquipmentElementLevelType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }]
        }, {
            localName: 'VersionType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ChangeWorkScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'workSchedule',
                required: true,
                collection: true,
                elementName: 'WorkSchedule',
                typeInfo: '.WorkScheduleType'
            }]
        }, {
            localName: 'OpPersonnelCapabilityPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'BillOfResourcesIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'PublishedDateType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'CapabilityType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'OpMaterialRequirementType',
            propertyInfos: [{
                name: 'materialClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialClassID',
                typeInfo: '.MaterialClassIDType'
            }, {
                name: 'materialDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialDefinitionID',
                typeInfo: '.MaterialDefinitionIDType'
            }, {
                name: 'materialLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialLotID',
                typeInfo: '.MaterialLotIDType'
            }, {
                name: 'materialSubLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSubLotID',
                typeInfo: '.MaterialSubLotIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'materialUse',
                elementName: 'MaterialUse',
                typeInfo: '.MaterialUseType'
            }, {
                name: 'storageLocation',
                elementName: 'StorageLocation',
                typeInfo: '.StorageLocationType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'assemblyRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'AssemblyRequirement',
                typeInfo: '.OpMaterialRequirementType'
            }, {
                name: 'assemblyType',
                elementName: 'AssemblyType',
                typeInfo: '.AssemblyTypeType'
            }, {
                name: 'assemblyRelationship',
                elementName: 'AssemblyRelationship',
                typeInfo: '.AssemblyRelationshipType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'materialRequirementProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialRequirementProperty',
                typeInfo: '.OpMaterialRequirementPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'ShowWorkScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowWorkScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OpPersonnelActualType',
            propertyInfos: [{
                name: 'personnelClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelClassID',
                typeInfo: '.PersonnelClassIDType'
            }, {
                name: 'personID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonID',
                typeInfo: '.PersonIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'personnelUse',
                elementName: 'PersonnelUse',
                typeInfo: '.PersonnelUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'personnelActualProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelActualProperty',
                typeInfo: '.OpPersonnelActualPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'TransChangeType',
            propertyInfos: [{
                name: 'actionCriteria',
                minOccurs: 0,
                collection: true,
                elementName: 'ActionCriteria',
                typeInfo: '.TransActionCriteriaType'
            }, {
                name: 'responseCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'responseCode'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'StorageLocationType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'NameType',
            propertyInfos: [{
                name: 'value',
                type: 'value'
            }, {
                name: 'languageID',
                typeInfo: 'Language',
                attributeName: {
                    localPart: 'languageID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OperationsSegmentIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ResourceReferenceTypeType',
            baseTypeInfo: '.ResourceReferenceType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OpPhysicalAssetSpecificationPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'TestDateTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'TransSenderType',
            propertyInfos: [{
                name: 'logicalID',
                elementName: 'LogicalID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'componentID',
                elementName: 'ComponentID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'taskID',
                elementName: 'TaskID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'referenceID',
                elementName: 'ReferenceID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'confirmationCode',
                elementName: 'ConfirmationCode',
                typeInfo: '.TransConfirmationCodeType'
            }, {
                name: 'authorizationID',
                elementName: 'AuthorizationID',
                typeInfo: '.IdentifierType'
            }]
        }, {
            localName: 'OpEquipmentCapabilityType',
            propertyInfos: [{
                name: 'equipmentClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentClassID',
                typeInfo: '.EquipmentClassIDType'
            }, {
                name: 'equipmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentID',
                typeInfo: '.EquipmentIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'capabilityType',
                elementName: 'CapabilityType',
                typeInfo: '.CapabilityTypeType'
            }, {
                name: 'reason',
                elementName: 'Reason',
                typeInfo: '.ReasonType'
            }, {
                name: 'confidenceFactor',
                elementName: 'ConfidenceFactor',
                typeInfo: '.ConfidenceFactorType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'equipmentUse',
                elementName: 'EquipmentUse',
                typeInfo: '.EquipmentUseType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'equipmentCapabilityProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentCapabilityProperty',
                typeInfo: '.OpEquipmentCapabilityPropertyType'
            }]
        }, {
            localName: 'TextType',
            propertyInfos: [{
                name: 'value',
                type: 'value'
            }, {
                name: 'languageID',
                typeInfo: 'Language',
                attributeName: {
                    localPart: 'languageID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'TransApplicationAreaType',
            propertyInfos: [{
                name: 'sender',
                elementName: 'Sender',
                typeInfo: '.TransSenderType'
            }, {
                name: 'receiver',
                minOccurs: 0,
                collection: true,
                elementName: 'Receiver',
                typeInfo: '.TransReceiverType'
            }, {
                name: 'creationDateTime',
                required: true,
                elementName: 'CreationDateTime',
                typeInfo: '.DateTimeType'
            }, {
                name: 'signature',
                elementName: 'Signature',
                typeInfo: '.TransSignatureType'
            }, {
                name: 'bodid',
                elementName: 'BODID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'userArea',
                elementName: 'UserArea',
                typeInfo: '.TransUserAreaType'
            }]
        }, {
            localName: 'ConfidenceFactorType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'RequestedPriorityType',
            baseTypeInfo: '.NumericType'
        }, {
            localName: 'StorageHierarchyScopeType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'MaterialUse1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'OpPersonnelRequirementPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'ParameterType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'parameter',
                minOccurs: 0,
                collection: true,
                elementName: 'Parameter',
                typeInfo: '.ParameterType'
            }]
        }, {
            localName: 'ActualEndTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'MaterialDefinitionIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'OpEquipmentSpecificationType',
            propertyInfos: [{
                name: 'equipmentClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentClassID',
                typeInfo: '.EquipmentClassIDType'
            }, {
                name: 'equipmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentID',
                typeInfo: '.EquipmentIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'equipmentUse',
                elementName: 'EquipmentUse',
                typeInfo: '.EquipmentUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'equipmentSpecificationProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentSpecificationProperty',
                typeInfo: '.OpEquipmentSpecificationPropertyType'
            }]
        }, {
            localName: 'OpMaterialRequirementPropertyType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'materialRequirementProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialRequirementProperty',
                typeInfo: '.OpMaterialRequirementPropertyType'
            }]
        }, {
            localName: 'JobOrderCommandRuleType',
            baseTypeInfo: '.TextType'
        }, {
            localName: 'ManufacturingBillIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ProductionRequestIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'OpSegmentDataType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'segmentData',
                minOccurs: 0,
                collection: true,
                elementName: 'SegmentData',
                typeInfo: '.OpSegmentDataType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'OpMaterialCapabilityPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'materialUse',
                elementName: 'MaterialUse',
                typeInfo: '.MaterialUseType'
            }]
        }, {
            localName: 'CancelWorkScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelWorkScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ResourceReferenceType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'ParameterIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'EarliestStartTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'TransProcessType',
            propertyInfos: [{
                name: 'actionCriteria',
                minOccurs: 0,
                collection: true,
                elementName: 'ActionCriteria',
                typeInfo: '.TransActionCriteriaType'
            }, {
                name: 'acknowledgeCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'acknowledgeCode'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'AssemblyRelationshipType',
            baseTypeInfo: '.AssemblyRelationship1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'CancelWorkScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'workSchedule',
                required: true,
                collection: true,
                elementName: 'WorkSchedule',
                typeInfo: '.WorkScheduleType'
            }]
        }, {
            localName: 'CapabilityTypeType',
            baseTypeInfo: '.CapabilityType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'RequestedCompletionDateType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'OpPhysicalAssetActualType',
            propertyInfos: [{
                name: 'physicalAssetClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetClassID',
                typeInfo: '.PhysicalAssetClassIDType'
            }, {
                name: 'physicalAssetID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetID',
                typeInfo: '.PhysicalAssetIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'physicalAssetActualProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetActualProperty',
                typeInfo: '.OpPhysicalAssetActualPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'SegmentDependencyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'dependency',
                required: true,
                elementName: 'Dependency',
                typeInfo: '.DependencyType'
            }, {
                name: 'timingFactor',
                minOccurs: 0,
                collection: true,
                elementName: 'TimingFactor',
                typeInfo: '.ValueType'
            }, {
                name: 'productSegmentIDOrProcessSegmentIDOrSegmentID',
                minOccurs: 0,
                collection: true,
                elementTypeInfos: [{
                    elementName: 'ProductSegmentID',
                    typeInfo: '.ProductSegmentIDType'
                }, {
                    elementName: 'ProcessSegmentID',
                    typeInfo: '.ProcessSegmentIDType'
                }, {
                    elementName: 'SegmentID',
                    typeInfo: '.IdentifierType'
                }],
                type: 'elements'
            }]
        }, {
            localName: 'BinaryObjectType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'BinaryObjectType'
            },
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Base64Binary',
                type: 'value'
            }, {
                name: 'format',
                attributeName: {
                    localPart: 'format'
                },
                type: 'attribute'
            }, {
                name: 'mimeCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'mimeCode'
                },
                type: 'attribute'
            }, {
                name: 'encodingCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'encodingCode'
                },
                type: 'attribute'
            }, {
                name: 'characterSetCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'characterSetCode'
                },
                type: 'attribute'
            }, {
                name: 'uri',
                attributeName: {
                    localPart: 'uri'
                },
                type: 'attribute'
            }, {
                name: 'filename',
                attributeName: {
                    localPart: 'filename'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'CancelJobListType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'jobList',
                required: true,
                collection: true,
                elementName: 'JobList',
                typeInfo: '.JobListType'
            }]
        }, {
            localName: 'PersonnelUseType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'JobListType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'workype',
                elementName: 'Workype',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'jobOrder',
                minOccurs: 0,
                collection: true,
                elementName: 'JobOrder',
                typeInfo: '.JobOrderType'
            }]
        }, {
            localName: 'ProductSegmentIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'TransShowType',
            propertyInfos: [{
                name: 'originalApplicationArea',
                elementName: 'OriginalApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'responseCriteria',
                minOccurs: 0,
                collection: true,
                elementName: 'ResponseCriteria',
                typeInfo: '.TransResponseCriteriaType'
            }]
        }, {
            localName: 'MaterialClassIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'DateTimeType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'DateTimeType'
            },
            propertyInfos: [{
                name: 'value',
                typeInfo: 'DateTime',
                type: 'value'
            }, {
                name: 'format',
                attributeName: {
                    localPart: 'format'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'RespondWorkScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'workSchedule',
                required: true,
                collection: true,
                elementName: 'WorkSchedule',
                typeInfo: '.WorkScheduleType'
            }]
        }, {
            localName: 'AssemblyType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'OpMaterialCapabilityType',
            propertyInfos: [{
                name: 'materialClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialClassID',
                typeInfo: '.MaterialClassIDType'
            }, {
                name: 'materialDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialDefinitionID',
                typeInfo: '.MaterialDefinitionIDType'
            }, {
                name: 'materialLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialLotID',
                typeInfo: '.MaterialLotIDType'
            }, {
                name: 'materialSubLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSubLotID',
                typeInfo: '.MaterialSubLotIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'capabilityType',
                elementName: 'CapabilityType',
                typeInfo: '.CapabilityTypeType'
            }, {
                name: 'reason',
                elementName: 'Reason',
                typeInfo: '.ReasonType'
            }, {
                name: 'confidenceFactor',
                elementName: 'ConfidenceFactor',
                typeInfo: '.ConfidenceFactorType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'materialUse',
                elementName: 'MaterialUse',
                typeInfo: '.MaterialUseType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'assemblyCapability',
                minOccurs: 0,
                collection: true,
                elementName: 'AssemblyCapability',
                typeInfo: '.OpMaterialCapabilityType'
            }, {
                name: 'assemblyType',
                elementName: 'AssemblyType',
                typeInfo: '.AssemblyTypeType'
            }, {
                name: 'assemblyRelationship',
                elementName: 'AssemblyRelationship',
                typeInfo: '.AssemblyRelationshipType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'materialCapabilityProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialCapabilityProperty',
                typeInfo: '.OpMaterialCapabilityPropertyType'
            }]
        }, {
            localName: 'AcknowledgeJobListType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'jobList',
                required: true,
                collection: true,
                elementName: 'JobList',
                typeInfo: '.JobListType'
            }]
        }, {
            localName: 'OpPhysicalAssetRequirementPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'ProductProductionRuleType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'RelationshipTypeType',
            baseTypeInfo: '.RelationshipType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'JobOrderCommandType',
            baseTypeInfo: '.JobOrderCommand1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'EquipmentCapabilityTestSpecificationIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'TransCancelType',
            propertyInfos: [{
                name: 'actionCriteria',
                minOccurs: 0,
                collection: true,
                elementName: 'ActionCriteria',
                typeInfo: '.TransActionCriteriaType'
            }]
        }, {
            localName: 'ActualStartTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'ReasonType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'OtherDependencyType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'RequestState1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'WorkScheduleIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'LatestEndTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'PhysicalAssetIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'PriorityType',
            baseTypeInfo: '.NumericType'
        }, {
            localName: 'MaterialRequirementIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'RelationshipType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'OpPhysicalAssetCapabilityType',
            propertyInfos: [{
                name: 'physicalAssetClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetClassID',
                typeInfo: '.PhysicalAssetClassIDType'
            }, {
                name: 'physicalAssetID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetID',
                typeInfo: '.PhysicalAssetIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'capabilityType',
                elementName: 'CapabilityType',
                typeInfo: '.CapabilityTypeType'
            }, {
                name: 'reason',
                elementName: 'Reason',
                typeInfo: '.ReasonType'
            }, {
                name: 'confidenceFactor',
                elementName: 'ConfidenceFactor',
                typeInfo: '.ConfidenceFactorType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'physicalAssetUse',
                elementName: 'PhysicalAssetUse',
                typeInfo: '.PhysicalAssetUseType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'physicalAssetCapabilityProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetCapabilityProperty',
                typeInfo: '.OpPhysicalAssetCapabilityPropertyType'
            }]
        }, {
            localName: 'ShowJobListType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowJobListType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'QuantityStringType',
            baseTypeInfo: '.AnyGenericValueType'
        }, {
            localName: 'ResultType',
            propertyInfos: [{
                name: 'valueString',
                required: true,
                elementName: 'ValueString',
                typeInfo: '.ValueStringType'
            }, {
                name: 'dataType',
                mixed: false,
                allowDom: false,
                elementName: 'DataType',
                typeInfo: '.DataTypeType',
                type: 'elementRef'
            }, {
                name: 'unitOfMeasure',
                mixed: false,
                allowDom: false,
                elementName: 'UnitOfMeasure',
                typeInfo: '.UnitOfMeasureType',
                type: 'elementRef'
            }, {
                name: 'key',
                elementName: 'Key',
                typeInfo: '.IdentifierType'
            }]
        }, {
            localName: 'EquipmentUseType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'TransStateChangeType',
            propertyInfos: [{
                name: 'fromStateCode',
                elementName: 'FromStateCode',
                typeInfo: '.CodeType'
            }, {
                name: 'toStateCode',
                elementName: 'ToStateCode',
                typeInfo: '.CodeType'
            }, {
                name: 'changeDateTime',
                elementName: 'ChangeDateTime',
                typeInfo: '.DateTimeType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'note',
                minOccurs: 0,
                collection: true,
                elementName: 'Note',
                typeInfo: '.TextType'
            }, {
                name: 'userArea',
                elementName: 'UserArea',
                typeInfo: '.TransUserAreaType'
            }]
        }, {
            localName: 'PlannedFinishTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'EquipmentIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'StartTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'OpEquipmentSpecificationPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'AmountType',
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Decimal',
                type: 'value'
            }, {
                name: 'currencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'currencyID'
                },
                type: 'attribute'
            }, {
                name: 'currencyCodeListVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'currencyCodeListVersionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'DateTimeType',
            propertyInfos: [{
                name: 'value',
                typeInfo: 'DateTime',
                type: 'value'
            }, {
                name: 'format',
                attributeName: {
                    localPart: 'format'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ResourcesType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'NumericType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'NumericType'
            },
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Decimal',
                type: 'value'
            }, {
                name: 'format',
                attributeName: {
                    localPart: 'format'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'MaterialSpecificationIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'SyncJobListType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncJobListType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'BillOfMaterialsIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            type: 'enumInfo',
            localName: 'TransResponseCodeType',
            baseTypeInfo: 'NormalizedString',
            values: ['Always', 'OnError']
        }, {
            type: 'enumInfo',
            localName: 'TransActionCodeEnumerationType',
            values: ['Add', 'Change', 'Delete', 'Replaced', 'Accepted', 'Modified', 'Rejected']
        }],
        elementInfos: [{
            elementName: 'CancelWorkSchedule',
            typeInfo: '.CancelWorkScheduleType'
        }, {
            elementName: 'ShowWorkSchedule',
            typeInfo: '.ShowWorkScheduleType'
        }, {
            elementName: 'ChangeJobList',
            typeInfo: '.ChangeJobListType'
        }, {
            elementName: 'AcknowledgeJobList',
            typeInfo: '.AcknowledgeJobListType'
        }, {
            elementName: 'DataType',
            typeInfo: '.DataTypeType',
            scope: '.ResultType'
        }, {
            elementName: 'RespondJobList',
            typeInfo: '.RespondJobListType'
        }, {
            elementName: 'UnitOfMeasure',
            typeInfo: '.UnitOfMeasureType',
            scope: '.ResultType'
        }, {
            elementName: 'GetJobList',
            typeInfo: '.GetJobListType'
        }, {
            elementName: 'WorkSchedule',
            typeInfo: '.WorkScheduleType'
        }, {
            elementName: 'GetWorkSchedule',
            typeInfo: '.GetWorkScheduleType'
        }, {
            elementName: 'SyncWorkSchedule',
            typeInfo: '.SyncWorkScheduleType'
        }, {
            elementName: 'JobOrder',
            typeInfo: '.JobOrderType'
        }, {
            elementName: 'ProcessJobList',
            typeInfo: '.ProcessJobListType'
        }, {
            elementName: 'WorkRequest',
            typeInfo: '.WorkRequestType'
        }, {
            elementName: 'JobList',
            typeInfo: '.JobListType'
        }, {
            elementName: 'DataType',
            typeInfo: '.DataTypeType',
            scope: '.ValueType'
        }, {
            elementName: 'UnitOfMeasure',
            typeInfo: '.UnitOfMeasureType',
            scope: '.ValueType'
        }, {
            elementName: 'SyncJobList',
            typeInfo: '.SyncJobListType'
        }, {
            elementName: 'ProcessWorkSchedule',
            typeInfo: '.ProcessWorkScheduleType'
        }, {
            elementName: 'DataType',
            typeInfo: '.DataTypeType',
            scope: '.QuantityValueType'
        }, {
            elementName: 'RespondWorkSchedule',
            typeInfo: '.RespondWorkScheduleType'
        }, {
            elementName: 'ShowJobList',
            typeInfo: '.ShowJobListType'
        }, {
            elementName: 'CancelJobList',
            typeInfo: '.CancelJobListType'
        }, {
            elementName: 'ChangeWorkSchedule',
            typeInfo: '.ChangeWorkScheduleType'
        }, {
            elementName: 'UnitOfMeasure',
            typeInfo: '.UnitOfMeasureType',
            scope: '.QuantityValueType'
        }, {
            elementName: 'AcknowledgeWorkSchedule',
            typeInfo: '.AcknowledgeWorkScheduleType'
        }]
    };
    return {
        WorkSchedule: WorkSchedule
    };
};
if (typeof define === 'function' && define.amd) {
    define([], WorkSchedule_Module_Factory);
}
else {
    var WorkSchedule_Module = WorkSchedule_Module_Factory();
    if (typeof module !== 'undefined' && module.exports) {
        module.exports.WorkSchedule = WorkSchedule_Module.WorkSchedule;
    }
    else {
        var WorkSchedule = WorkSchedule_Module.WorkSchedule;
    }
}