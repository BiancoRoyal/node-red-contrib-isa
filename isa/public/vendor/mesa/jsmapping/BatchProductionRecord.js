var BatchProductionRecord_Module_Factory = function () {
    var BatchProductionRecord = {
        name: 'BatchProductionRecord',
        defaultElementNamespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600',
        typeInfos: [{
            localName: 'ShowOperationsPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowOperationsPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'CancelWorkDefinitionInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'workDefinitionInformation',
                required: true,
                collection: true,
                elementName: 'WorkDefinitionInformation',
                typeInfo: '.WorkDefinitionInformationType'
            }]
        }, {
            localName: 'GetWorkflowSpecificationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'workflowSpecification',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecification',
                typeInfo: '.WorkflowSpecificationType'
            }]
        }, {
            localName: 'CancelWorkPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'workPerformance',
                required: true,
                collection: true,
                elementName: 'WorkPerformance',
                typeInfo: '.WorkPerformanceType'
            }]
        }, {
            localName: 'OpPhysicalAssetSpecificationPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'OpPersonnelSpecificationType',
            propertyInfos: [{
                name: 'personnelClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelClassID',
                typeInfo: '.PersonnelClassIDType'
            }, {
                name: 'personID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonID',
                typeInfo: '.PersonIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'personnelUse',
                elementName: 'PersonnelUse',
                typeInfo: '.PersonnelUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'personnelSpecificationProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelSpecificationProperty',
                typeInfo: '.OpPersonnelSpecificationPropertyType'
            }]
        }, {
            localName: 'BatchValueType',
            propertyInfos: [{
                name: 'content',
                collection: true,
                allowDom: false,
                elementTypeInfos: [{
                    elementName: 'EnumerationSetID',
                    typeInfo: '.EnumerationSetIDType'
                }, {
                    elementName: 'ValueString',
                    typeInfo: '.ValueStringType'
                }, {
                    elementName: 'DataInterpretation',
                    typeInfo: '.DataInterpretationType'
                }, {
                    elementName: 'DataType',
                    typeInfo: '.DataTypeType'
                }, {
                    elementName: 'UnitOfMeasure',
                    typeInfo: '.UnitOfMeasureType'
                }],
                type: 'elementRefs'
            }]
        }, {
            localName: 'GetJobListType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'jobList',
                required: true,
                collection: true,
                elementName: 'JobList',
                typeInfo: '.JobListType'
            }]
        }, {
            localName: 'BatchStatus1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'TimeSpecificationType',
            propertyInfos: [{
                name: 'relative',
                elementName: 'Relative',
                typeInfo: 'Boolean'
            }, {
                name: 'offsetTime',
                elementName: 'OffsetTime',
                typeInfo: '.DateTimeType'
            }]
        }, {
            localName: 'ProductInformationType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'publishedDate',
                elementName: 'PublishedDate',
                typeInfo: '.PublishedDateType'
            }, {
                name: 'productDefinition',
                minOccurs: 0,
                collection: true,
                elementName: 'ProductDefinition',
                typeInfo: '.ProductDefinitionType'
            }]
        }, {
            localName: 'SyncProductDefinitionType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncProductDefinitionType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ProcessProductInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'productInformation',
                required: true,
                collection: true,
                elementName: 'ProductInformation',
                typeInfo: '.ProductInformationType'
            }]
        }, {
            localName: 'GetOperationsDefinitionType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetOperationsDefinitionType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ActualFinishTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'SyncJobListType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncJobListType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ParameterTypeType',
            baseTypeInfo: '.ParameterType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ProcessWorkflowSpecificationTypeType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'workflowSpecificationType',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecificationType',
                typeInfo: '.WorkflowSpecificationTypeType'
            }]
        }, {
            localName: 'ConsumableExpectedRequirementPropertyType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'AcknowledgeWorkScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeWorkScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ProcessOperationsDefinitionType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'operationsDefinition',
                required: true,
                collection: true,
                elementName: 'OperationsDefinition',
                typeInfo: '.OperationsDefinitionType'
            }]
        }, {
            localName: 'QuantityType',
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Decimal',
                type: 'value'
            }, {
                name: 'unitCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCode'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCodeListID'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCodeListAgencyID'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListAgencyName',
                attributeName: {
                    localPart: 'unitCodeListAgencyName'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'DefaultValueType',
            baseTypeInfo: '.TextType'
        }, {
            localName: 'TransStateChangeType',
            propertyInfos: [{
                name: 'fromStateCode',
                elementName: 'FromStateCode',
                typeInfo: '.CodeType'
            }, {
                name: 'toStateCode',
                elementName: 'ToStateCode',
                typeInfo: '.CodeType'
            }, {
                name: 'changeDateTime',
                elementName: 'ChangeDateTime',
                typeInfo: '.DateTimeType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'note',
                minOccurs: 0,
                collection: true,
                elementName: 'Note',
                typeInfo: '.TextType'
            }, {
                name: 'userArea',
                elementName: 'UserArea',
                typeInfo: '.TransUserAreaType'
            }]
        }, {
            localName: 'TransExpressionType',
            baseTypeInfo: '.TransExpression1Type',
            propertyInfos: [{
                name: 'actionCode',
                required: true,
                attributeName: {
                    localPart: 'actionCode'
                },
                type: 'attribute'
            }, {
                name: 'expressionLanguage',
                typeInfo: 'Token',
                attributeName: {
                    localPart: 'expressionLanguage'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'GetProductionPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetProductionPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ChangeProductDefinitionType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeProductDefinitionType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'MaterialRequirementType',
            propertyInfos: [{
                name: 'materialClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialClassID',
                typeInfo: '.MaterialClassIDType'
            }, {
                name: 'materialDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialDefinitionID',
                typeInfo: '.MaterialDefinitionIDType'
            }, {
                name: 'materialLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialLotID',
                typeInfo: '.MaterialLotIDType'
            }, {
                name: 'materialSubLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSubLotID',
                typeInfo: '.MaterialSubLotIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'materialUse',
                elementName: 'MaterialUse',
                typeInfo: '.MaterialUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'assemblyRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'AssemblyRequirement',
                typeInfo: '.MaterialRequirementType'
            }, {
                name: 'assemblyType',
                elementName: 'AssemblyType',
                typeInfo: '.AssemblyTypeType'
            }, {
                name: 'assemblyRelationship',
                elementName: 'AssemblyRelationship',
                typeInfo: '.AssemblyRelationshipType'
            }, {
                name: 'materialRequirementProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialRequirementProperty',
                typeInfo: '.MaterialRequirementPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'ResultType',
            propertyInfos: [{
                name: 'valueString',
                required: true,
                elementName: 'ValueString',
                typeInfo: '.ValueStringType'
            }, {
                name: 'dataType',
                mixed: false,
                allowDom: false,
                elementName: 'DataType',
                typeInfo: '.DataTypeType',
                type: 'elementRef'
            }, {
                name: 'unitOfMeasure',
                mixed: false,
                allowDom: false,
                elementName: 'UnitOfMeasure',
                typeInfo: '.UnitOfMeasureType',
                type: 'elementRef'
            }, {
                name: 'key',
                elementName: 'Key',
                typeInfo: '.IdentifierType'
            }]
        }, {
            localName: 'CodeType',
            propertyInfos: [{
                name: 'value',
                typeInfo: 'NormalizedString',
                type: 'value'
            }, {
                name: 'listID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'listID'
                },
                type: 'attribute'
            }, {
                name: 'listAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'listAgencyID'
                },
                type: 'attribute'
            }, {
                name: 'listAgencyName',
                attributeName: {
                    localPart: 'listAgencyName'
                },
                type: 'attribute'
            }, {
                name: 'listName',
                attributeName: {
                    localPart: 'listName'
                },
                type: 'attribute'
            }, {
                name: 'listVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'listVersionID'
                },
                type: 'attribute'
            }, {
                name: 'name',
                attributeName: {
                    localPart: 'name'
                },
                type: 'attribute'
            }, {
                name: 'languageID',
                typeInfo: 'Language',
                attributeName: {
                    localPart: 'languageID'
                },
                type: 'attribute'
            }, {
                name: 'listURI',
                attributeName: {
                    localPart: 'listURI'
                },
                type: 'attribute'
            }, {
                name: 'listSchemeURI',
                attributeName: {
                    localPart: 'listSchemeURI'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'TransResponseCriteriaType',
            propertyInfos: [{
                name: 'responseExpression',
                elementName: 'ResponseExpression',
                typeInfo: '.TransExpressionType'
            }, {
                name: 'changeStatus',
                elementName: 'ChangeStatus',
                typeInfo: '.TransChangeStatusType'
            }]
        }, {
            localName: 'EquipmentAssetMappingType',
            propertyInfos: [{
                name: 'equipmentID',
                required: true,
                elementName: 'EquipmentID',
                typeInfo: '.EquipmentIDType'
            }, {
                name: 'physicalAssetID',
                required: true,
                elementName: 'PhysicalAssetID',
                typeInfo: '.PhysicalAssetIDType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.DateTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.DateTimeType'
            }]
        }, {
            localName: 'ConsumableActualPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'AssemblyType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'RecipeElementType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'OperationsSegmentIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'RespondOperationsDefinitionType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'operationsDefinition',
                required: true,
                collection: true,
                elementName: 'OperationsDefinition',
                typeInfo: '.OperationsDefinitionType'
            }]
        }, {
            localName: 'ChangeWorkDirectiveType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'workDirective',
                required: true,
                collection: true,
                elementName: 'WorkDirective',
                typeInfo: '.WorkDirectiveType'
            }]
        }, {
            localName: 'GetProductionPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'productionPerformance',
                required: true,
                collection: true,
                elementName: 'ProductionPerformance',
                typeInfo: '.ProductionPerformanceType'
            }]
        }, {
            localName: 'DataInterpretation1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'RequestState1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'ProcessJobResponseType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'jobResponse',
                required: true,
                collection: true,
                elementName: 'JobResponse',
                typeInfo: '.JobResponseType'
            }]
        }, {
            localName: 'ResourceQualificationsType',
            propertyInfos: [{
                name: 'resourceQualificationsManifest',
                minOccurs: 0,
                collection: true,
                elementName: 'ResourceQualificationsManifest',
                typeInfo: '.ResourceQualificationsManifestType'
            }]
        }, {
            localName: 'AcknowledgeWorkDefinitionInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeWorkDefinitionInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'MasterRecipesType',
            propertyInfos: [{
                name: 'masterRecipeRecord',
                minOccurs: 0,
                collection: true,
                elementName: 'MasterRecipeRecord',
                typeInfo: '.MasterRecipeRecordType'
            }]
        }, {
            localName: 'OperationsDefinitionsType',
            propertyInfos: [{
                name: 'operationsDefinitionRecord',
                minOccurs: 0,
                collection: true,
                elementName: 'OperationsDefinitionRecord',
                typeInfo: '.OperationsDefinitionRecordType'
            }]
        }, {
            localName: 'CancelOperationsDefinitionType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'operationsDefinition',
                required: true,
                collection: true,
                elementName: 'OperationsDefinition',
                typeInfo: '.OperationsDefinitionType'
            }]
        }, {
            localName: 'PlannedStartTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'OpPhysicalAssetSpecificationType',
            propertyInfos: [{
                name: 'physicalAssetClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetClassID',
                typeInfo: '.PhysicalAssetClassIDType'
            }, {
                name: 'physicalAssetID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetID',
                typeInfo: '.PhysicalAssetIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'physicalAssetUse',
                elementName: 'PhysicalAssetUse',
                typeInfo: '.PhysicalAssetUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'physicalAssetSpecificationProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetSpecificationProperty',
                typeInfo: '.OpPhysicalAssetSpecificationPropertyType'
            }]
        }, {
            localName: 'RespondProductDefinitionType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondProductDefinitionType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'SyncBatchProductionRecordType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncBatchProductionRecordType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'EventSubType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'EffectiveDateType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'ProductionRequestType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'productProductionRuleIDGroup',
                minOccurs: 0,
                collection: true,
                elementTypeInfos: [{
                    elementName: 'ProductProductionRuleID',
                    typeInfo: '.ProductProductionRuleIDType'
                }, {
                    elementName: 'Version',
                    typeInfo: '.VersionType'
                }],
                type: 'elements'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'priority',
                elementName: 'Priority',
                typeInfo: '.PriorityType'
            }, {
                name: 'segmentRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'SegmentRequirement',
                typeInfo: '.SegmentRequirementType'
            }, {
                name: 'segmentResponse',
                minOccurs: 0,
                collection: true,
                elementName: 'SegmentResponse',
                typeInfo: '.SegmentResponseType'
            }, {
                name: 'requestState',
                elementName: 'RequestState',
                typeInfo: '.RequestStateType'
            }]
        }, {
            localName: 'WorkScheduleRecordType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'workSchedule',
                required: true,
                elementName: 'WorkSchedule',
                typeInfo: '.WorkScheduleType'
            }]
        }, {
            localName: 'EquipmentProceduralElementClassType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'equipmentProceduralElementType',
                required: true,
                elementName: 'EquipmentProceduralElementType',
                typeInfo: '.EquipmentProceduralElementTypeType'
            }, {
                name: 'parameter',
                minOccurs: 0,
                collection: true,
                elementName: 'Parameter',
                typeInfo: '.BatchParameterType'
            }]
        }, {
            localName: 'ShowOperationsDefinitionType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowOperationsDefinitionType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'AcknowledgeProductInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeProductInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OpPhysicalAssetCapabilityType',
            propertyInfos: [{
                name: 'physicalAssetClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetClassID',
                typeInfo: '.PhysicalAssetClassIDType'
            }, {
                name: 'physicalAssetID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetID',
                typeInfo: '.PhysicalAssetIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'capabilityType',
                elementName: 'CapabilityType',
                typeInfo: '.CapabilityTypeType'
            }, {
                name: 'reason',
                elementName: 'Reason',
                typeInfo: '.ReasonType'
            }, {
                name: 'confidenceFactor',
                elementName: 'ConfidenceFactor',
                typeInfo: '.ConfidenceFactorType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'physicalAssetUse',
                elementName: 'PhysicalAssetUse',
                typeInfo: '.PhysicalAssetUseType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'physicalAssetCapabilityProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetCapabilityProperty',
                typeInfo: '.OpPhysicalAssetCapabilityPropertyType'
            }]
        }, {
            localName: 'MaterialActualIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'RecipeElementRecordType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'recipeElementType',
                required: true,
                elementName: 'RecipeElementType',
                typeInfo: '.RecipeElementType'
            }]
        }, {
            localName: 'SyncProductionScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncProductionScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'TransChangeType',
            propertyInfos: [{
                name: 'actionCriteria',
                minOccurs: 0,
                collection: true,
                elementName: 'ActionCriteria',
                typeInfo: '.TransActionCriteriaType'
            }, {
                name: 'responseCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'responseCode'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OpMaterialActualPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'materialActualProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialActualProperty',
                typeInfo: '.OpMaterialActualPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'SyncOperationsDefinitionType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncOperationsDefinitionType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'BatchListEntryType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'ProcessWorkMasterType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'workMaster',
                required: true,
                collection: true,
                elementName: 'WorkMaster',
                typeInfo: '.WorkMasterType'
            }]
        }, {
            localName: 'PersonnelIdentificationManifestType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'recordReference',
                required: true,
                elementName: 'RecordReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'name',
                required: true,
                collection: true,
                elementName: 'Name',
                typeInfo: '.NameType'
            }, {
                name: 'changeIndication',
                required: true,
                elementName: 'ChangeIndication'
            }, {
                name: 'reason',
                elementName: 'Reason',
                typeInfo: '.TextType'
            }]
        }, {
            localName: 'RecipeElementVersionType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'OperationsScheduleType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'operationsType',
                elementName: 'OperationsType',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'scheduleState',
                elementName: 'ScheduleState',
                typeInfo: '.RequestStateType'
            }, {
                name: 'publishedDate',
                elementName: 'PublishedDate',
                typeInfo: '.PublishedDateType'
            }, {
                name: 'operationsRequest',
                minOccurs: 0,
                collection: true,
                elementName: 'OperationsRequest',
                typeInfo: '.OperationsRequestType'
            }]
        }, {
            localName: 'RespondWorkflowSpecificationTypeType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'workflowSpecificationType',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecificationType',
                typeInfo: '.WorkflowSpecificationTypeType'
            }]
        }, {
            localName: 'IDScope1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'GetOperationsDefinitionInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'operationsDefinitionInformation',
                required: true,
                collection: true,
                elementName: 'OperationsDefinitionInformation',
                typeInfo: '.OperationsDefinitionInformationType'
            }]
        }, {
            localName: 'ResourceReferenceType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'EquipmentSpecificationType',
            propertyInfos: [{
                name: 'equipmentClassID',
                elementName: 'EquipmentClassID',
                typeInfo: '.EquipmentClassIDType'
            }, {
                name: 'equipmentID',
                elementName: 'EquipmentID',
                typeInfo: '.EquipmentIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'equipmentSpecificationProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentSpecificationProperty',
                typeInfo: '.EquipmentSpecificationPropertyType'
            }]
        }, {
            localName: 'RecipeElementIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ShowWorkMasterType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowWorkMasterType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ProcessJobListType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'jobList',
                required: true,
                collection: true,
                elementName: 'JobList',
                typeInfo: '.JobListType'
            }]
        }, {
            localName: 'EquipmentElementPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                elementName: 'Value',
                typeInfo: '.BatchValueType'
            }, {
                name: 'property',
                minOccurs: 0,
                collection: true,
                elementName: 'Property',
                typeInfo: '.EquipmentElementPropertyType'
            }]
        }, {
            localName: 'CancelWorkDefinitionInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelWorkDefinitionInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'MaterialTestSpecificationIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'StorageLocationType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'MaterialProducedRequirementType',
            propertyInfos: [{
                name: 'materialClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialClassID',
                typeInfo: '.MaterialClassIDType'
            }, {
                name: 'materialDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialDefinitionID',
                typeInfo: '.MaterialDefinitionIDType'
            }, {
                name: 'materialLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialLotID',
                typeInfo: '.MaterialLotIDType'
            }, {
                name: 'materialSubLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSubLotID',
                typeInfo: '.MaterialSubLotIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'materialProducedRequirementProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialProducedRequirementProperty',
                typeInfo: '.MaterialProducedRequirementPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'TransGetType',
            propertyInfos: [{
                name: 'expression',
                minOccurs: 0,
                collection: true,
                elementName: 'Expression',
                typeInfo: 'Token'
            }]
        }, {
            localName: 'GetWorkflowSpecificationTypeType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'workflowSpecificationType',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecificationType',
                typeInfo: '.WorkflowSpecificationTypeType'
            }]
        }, {
            localName: 'ResourceReferenceTypeType',
            baseTypeInfo: '.ResourceReferenceType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'RespondWorkDefinitionInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'workDefinitionInformation',
                required: true,
                collection: true,
                elementName: 'WorkDefinitionInformation',
                typeInfo: '.WorkDefinitionInformationType'
            }]
        }, {
            localName: 'VersionType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ProcessOperationsDefinitionInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessOperationsDefinitionInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ProductSegmentType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'duration',
                elementName: 'Duration',
                typeInfo: 'Duration'
            }, {
                name: 'processSegmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'ProcessSegmentID',
                typeInfo: '.ProcessSegmentIDType'
            }, {
                name: 'parameter',
                minOccurs: 0,
                collection: true,
                elementName: 'Parameter',
                typeInfo: '.ParameterType'
            }, {
                name: 'personnelSpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelSpecification',
                typeInfo: '.PersonnelSpecificationType'
            }, {
                name: 'equipmentSpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentSpecification',
                typeInfo: '.EquipmentSpecificationType'
            }, {
                name: 'physicalAssetSpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetSpecification',
                typeInfo: '.PhysicalAssetSpecificationType'
            }, {
                name: 'materialSpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSpecification',
                typeInfo: '.MaterialSpecificationType'
            }, {
                name: 'segmentDependency',
                minOccurs: 0,
                collection: true,
                elementName: 'SegmentDependency',
                typeInfo: '.SegmentDependencyType'
            }, {
                name: 'productSegment',
                minOccurs: 0,
                collection: true,
                elementName: 'ProductSegment',
                typeInfo: '.ProductSegmentType'
            }]
        }, {
            localName: 'JobOrderCommand1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'ShowWorkflowSpecificationInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowWorkflowSpecificationInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ConnectionType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'RespondWorkMasterType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondWorkMasterType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ShowWorkflowSpecificationTypeType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'workflowSpecificationType',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecificationType',
                typeInfo: '.WorkflowSpecificationTypeType'
            }]
        }, {
            localName: 'WorkflowSpecificationNodeTypeType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'property',
                minOccurs: 0,
                collection: true,
                elementName: 'Property',
                typeInfo: '.WorkflowSpecificationPropertyType'
            }]
        }, {
            localName: 'GetWorkflowSpecificationInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetWorkflowSpecificationInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ChangeJobListType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'jobList',
                required: true,
                collection: true,
                elementName: 'JobList',
                typeInfo: '.JobListType'
            }]
        }, {
            localName: 'AmountType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'AmountType'
            },
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Decimal',
                type: 'value'
            }, {
                name: 'currencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'currencyID'
                },
                type: 'attribute'
            }, {
                name: 'currencyCodeListVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'currencyCodeListVersionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'CreateDateType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'SyncProductionPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'productionPerformance',
                required: true,
                collection: true,
                elementName: 'ProductionPerformance',
                typeInfo: '.ProductionPerformanceType'
            }]
        }, {
            localName: 'ControlRecipeRecordType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'controlRecipe',
                required: true,
                elementName: 'ControlRecipe',
                typeInfo: '.ControlRecipeType'
            }]
        }, {
            localName: 'AcknowledgeProductionPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'productionPerformance',
                required: true,
                collection: true,
                elementName: 'ProductionPerformance',
                typeInfo: '.ProductionPerformanceType'
            }]
        }, {
            localName: 'EquipmentRequirementPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'SyncJobListType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'jobList',
                required: true,
                collection: true,
                elementName: 'JobList',
                typeInfo: '.JobListType'
            }]
        }, {
            localName: 'ShowWorkflowSpecificationTypeType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowWorkflowSpecificationTypeType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'GetWorkDefinitionInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'workDefinitionInformation',
                required: true,
                collection: true,
                elementName: 'WorkDefinitionInformation',
                typeInfo: '.WorkDefinitionInformationType'
            }]
        }, {
            localName: 'WorkRequestType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'workype',
                elementName: 'Workype',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'priority',
                elementName: 'Priority',
                typeInfo: '.PriorityType'
            }, {
                name: 'workRequest',
                minOccurs: 0,
                collection: true,
                elementName: 'WorkRequest',
                typeInfo: '.WorkRequestType'
            }, {
                name: 'jobOrder',
                minOccurs: 0,
                collection: true,
                elementName: 'JobOrder',
                typeInfo: '.JobOrderType'
            }]
        }, {
            localName: 'PersonnelSpecificationType',
            propertyInfos: [{
                name: 'personnelClassID',
                elementName: 'PersonnelClassID',
                typeInfo: '.PersonnelClassIDType'
            }, {
                name: 'personID',
                elementName: 'PersonID',
                typeInfo: '.PersonIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'personnelSpecificationProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelSpecificationProperty',
                typeInfo: '.PersonnelSpecificationPropertyType'
            }]
        }, {
            localName: 'RespondOperationsScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondOperationsScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'AcknowledgeProductionPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeProductionPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ShowWorkScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'workSchedule',
                required: true,
                collection: true,
                elementName: 'WorkSchedule',
                typeInfo: '.WorkScheduleType'
            }]
        }, {
            localName: 'SyncWorkflowSpecificationInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncWorkflowSpecificationInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ActualEndTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'ProductionSchedulesType',
            propertyInfos: [{
                name: 'productionScheduleRecord',
                minOccurs: 0,
                collection: true,
                elementName: 'ProductionScheduleRecord',
                typeInfo: '.ProductionScheduleRecordType'
            }]
        }, {
            localName: 'GetProductionScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'productionSchedule',
                required: true,
                collection: true,
                elementName: 'ProductionSchedule',
                typeInfo: '.ProductionScheduleType'
            }]
        }, {
            localName: 'MinType',
            baseTypeInfo: '.MeasureType'
        }, {
            localName: 'OpPhysicalAssetCapabilityPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'ChangeOperationsPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeOperationsPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'SyncWorkDefinitionInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncWorkDefinitionInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'GetOperationsScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetOperationsScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ChangeWorkScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'workSchedule',
                required: true,
                collection: true,
                elementName: 'WorkSchedule',
                typeInfo: '.WorkScheduleType'
            }]
        }, {
            localName: 'MaterialUse1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'RespondWorkMasterType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'workMaster',
                required: true,
                collection: true,
                elementName: 'WorkMaster',
                typeInfo: '.WorkMasterType'
            }]
        }, {
            localName: 'ProductionScheduleRecordType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'productionSchedule',
                required: true,
                elementName: 'ProductionSchedule',
                typeInfo: '.ProductionScheduleType'
            }]
        }, {
            localName: 'QualificationTestSpecificationIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ActualStartTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'AcknowledgeWorkflowSpecificationTypeType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeWorkflowSpecificationTypeType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OperationsDefinitionIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ConfidenceFactorType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'DateTimeType',
            propertyInfos: [{
                name: 'value',
                typeInfo: 'DateTime',
                type: 'value'
            }, {
                name: 'format',
                attributeName: {
                    localPart: 'format'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'MaterialDefinitionIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'WorkScheduleIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'RecipeElementTypeType',
            baseTypeInfo: '.RecipeElementType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'LinkType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IDType'
            }, {
                name: 'fromID',
                minOccurs: 0,
                collection: true,
                elementName: 'FromID',
                typeInfo: '.FromIDType'
            }, {
                name: 'toID',
                minOccurs: 0,
                collection: true,
                elementName: 'ToID',
                typeInfo: '.ToIDType'
            }, {
                name: 'linkType',
                required: true,
                elementName: 'LinkType',
                typeInfo: '.LinkTypeType'
            }, {
                name: 'depiction',
                required: true,
                elementName: 'Depiction',
                typeInfo: '.DepictionType'
            }, {
                name: 'evaluationOrder',
                elementName: 'EvaluationOrder',
                typeInfo: '.EvaluationOrderType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }]
        }, {
            localName: 'TransConfirmationCodeType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'ChangeWorkDefinitionInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeWorkDefinitionInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'JobListType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'workype',
                elementName: 'Workype',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'jobOrder',
                minOccurs: 0,
                collection: true,
                elementName: 'JobOrder',
                typeInfo: '.JobOrderType'
            }]
        }, {
            localName: 'EquipmentRequirementType',
            propertyInfos: [{
                name: 'equipmentClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentClassID',
                typeInfo: '.EquipmentClassIDType'
            }, {
                name: 'equipmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentID',
                typeInfo: '.EquipmentIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'equipmentRequirementProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentRequirementProperty',
                typeInfo: '.EquipmentRequirementPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'OpPersonnelCapabilityPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'ProcessOperationsDefinitionInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'operationsDefinitionInformation',
                required: true,
                collection: true,
                elementName: 'OperationsDefinitionInformation',
                typeInfo: '.OperationsDefinitionInformationType'
            }]
        }, {
            localName: 'GetWorkPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'workPerformance',
                required: true,
                collection: true,
                elementName: 'WorkPerformance',
                typeInfo: '.WorkPerformanceType'
            }]
        }, {
            localName: 'CancelWorkflowSpecificationTypeType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'workflowSpecificationType',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecificationType',
                typeInfo: '.WorkflowSpecificationTypeType'
            }]
        }, {
            localName: 'GetWorkDefinitionInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetWorkDefinitionInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ShowJobListType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'jobList',
                required: true,
                collection: true,
                elementName: 'JobList',
                typeInfo: '.JobListType'
            }]
        }, {
            localName: 'ActualProductProducedType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'GetWorkScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'workSchedule',
                required: true,
                collection: true,
                elementName: 'WorkSchedule',
                typeInfo: '.WorkScheduleType'
            }]
        }, {
            localName: 'GetWorkPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetWorkPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OpEquipmentCapabilityType',
            propertyInfos: [{
                name: 'equipmentClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentClassID',
                typeInfo: '.EquipmentClassIDType'
            }, {
                name: 'equipmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentID',
                typeInfo: '.EquipmentIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'capabilityType',
                elementName: 'CapabilityType',
                typeInfo: '.CapabilityTypeType'
            }, {
                name: 'reason',
                elementName: 'Reason',
                typeInfo: '.ReasonType'
            }, {
                name: 'confidenceFactor',
                elementName: 'ConfidenceFactor',
                typeInfo: '.ConfidenceFactorType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'equipmentUse',
                elementName: 'EquipmentUse',
                typeInfo: '.EquipmentUseType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'equipmentCapabilityProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentCapabilityProperty',
                typeInfo: '.OpEquipmentCapabilityPropertyType'
            }]
        }, {
            localName: 'RespondProductionPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondProductionPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'RespondProductDefinitionType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'productDefinition',
                required: true,
                collection: true,
                elementName: 'ProductDefinition',
                typeInfo: '.ProductDefinitionType'
            }]
        }, {
            localName: 'WorkflowSpecificationNodeType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'nodeType',
                required: true,
                elementName: 'NodeType',
                typeInfo: '.IdentifierType'
            }, {
                name: 'workflowSpecification',
                elementName: 'WorkflowSpecification',
                typeInfo: '.WorkflowSpecificationType'
            }, {
                name: 'property',
                minOccurs: 0,
                collection: true,
                elementName: 'Property',
                typeInfo: '.WorkflowSpecificationPropertyType'
            }]
        }, {
            localName: 'ChangeWorkMasterType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeWorkMasterType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'RespondJobResponseType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondJobResponseType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'UserAttributeType',
            propertyInfos: [{
                name: 'attributeID',
                required: true,
                elementName: 'AttributeID',
                typeInfo: '.CodeType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.TextType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }]
        }, {
            localName: 'EquipmentElementType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'equipmentElementType',
                required: true,
                elementName: 'EquipmentElementType',
                typeInfo: '.EquipmentElementTypeType'
            }, {
                name: 'equipmentElementLevel',
                required: true,
                elementName: 'EquipmentElementLevel',
                typeInfo: '.EquipmentElementLevelType'
            }, {
                name: 'classInstanceAssociation',
                minOccurs: 0,
                collection: true,
                elementName: 'ClassInstanceAssociation',
                typeInfo: '.ClassInstanceAssociationType'
            }, {
                name: 'property',
                minOccurs: 0,
                collection: true,
                elementName: 'Property',
                typeInfo: '.EquipmentElementPropertyType'
            }, {
                name: 'equipmentProceduralElementClass',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentProceduralElementClass',
                typeInfo: '.EquipmentProceduralElementClassType'
            }, {
                name: 'equipmentProceduralElement',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentProceduralElement',
                typeInfo: '.EquipmentProceduralElementType'
            }, {
                name: 'equipmentConnection',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentConnection',
                typeInfo: '.EquipmentConnectionType'
            }, {
                name: 'equipmentElementOrEquipmentElementID',
                minOccurs: 0,
                collection: true,
                elementTypeInfos: [{
                    elementName: 'EquipmentElement',
                    typeInfo: '.EquipmentElementType'
                }, {
                    elementName: 'EquipmentElementID',
                    typeInfo: '.EquipmentElementIDType'
                }],
                type: 'elements'
            }]
        }, {
            localName: 'GetWorkflowSpecificationTypeType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetWorkflowSpecificationTypeType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'TestDateTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'ProcessWorkDefinitionInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessWorkDefinitionInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ControlRecipeType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IDType'
            }, {
                name: 'version',
                elementName: 'Version',
                typeInfo: '.VersionType'
            }, {
                name: 'versionDate',
                elementName: 'VersionDate',
                typeInfo: '.VersionDateType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'batchID',
                elementName: 'BatchID',
                typeInfo: '.BatchIDType'
            }, {
                name: 'header',
                elementName: 'Header',
                typeInfo: '.HeaderType'
            }, {
                name: 'equipmentRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentRequirement',
                typeInfo: '.BatchEquipmentRequirementType'
            }, {
                name: 'formula',
                elementName: 'Formula',
                typeInfo: '.FormulaType'
            }, {
                name: 'procedureLogic',
                elementName: 'ProcedureLogic',
                typeInfo: '.ProcedureLogicType'
            }, {
                name: 'recipeElement',
                minOccurs: 0,
                collection: true,
                elementName: 'RecipeElement',
                typeInfo: '.RecipeElementType'
            }, {
                name: 'otherInformation',
                minOccurs: 0,
                collection: true,
                elementName: 'OtherInformation',
                typeInfo: '.OtherInformationType'
            }]
        }, {
            localName: 'ConsumableExpectedRequirementType',
            propertyInfos: [{
                name: 'materialClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialClassID',
                typeInfo: '.MaterialClassIDType'
            }, {
                name: 'materialDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialDefinitionID',
                typeInfo: '.MaterialDefinitionIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'consumableExpectedRequirementProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'ConsumableExpectedRequirementProperty',
                typeInfo: '.ConsumableExpectedRequirementPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'ManufacturingBillIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'OpPersonnelActualType',
            propertyInfos: [{
                name: 'personnelClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelClassID',
                typeInfo: '.PersonnelClassIDType'
            }, {
                name: 'personID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonID',
                typeInfo: '.PersonIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'personnelUse',
                elementName: 'PersonnelUse',
                typeInfo: '.PersonnelUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'personnelActualProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelActualProperty',
                typeInfo: '.OpPersonnelActualPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'AcknowledgeJobResponseType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'jobResponse',
                required: true,
                collection: true,
                elementName: 'JobResponse',
                typeInfo: '.JobResponseType'
            }]
        }, {
            localName: 'StepType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IDType'
            }, {
                name: 'recipeElementID',
                required: true,
                elementName: 'RecipeElementID',
                typeInfo: '.RecipeElementIDType'
            }, {
                name: 'recipeElementVersion',
                required: true,
                elementName: 'RecipeElementVersion',
                typeInfo: '.RecipeElementVersionType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }]
        }, {
            localName: 'OperationsSegmentType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'operationsType',
                elementName: 'OperationsType',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'duration',
                elementName: 'Duration',
                typeInfo: 'Duration'
            }, {
                name: 'processSegmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'ProcessSegmentID',
                typeInfo: '.ProcessSegmentIDType'
            }, {
                name: 'parameter',
                minOccurs: 0,
                collection: true,
                elementName: 'Parameter',
                typeInfo: '.ParameterType'
            }, {
                name: 'personnelSpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelSpecification',
                typeInfo: '.OpPersonnelSpecificationType'
            }, {
                name: 'equipmentSpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentSpecification',
                typeInfo: '.OpEquipmentSpecificationType'
            }, {
                name: 'physicalAssetSpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetSpecification',
                typeInfo: '.OpPhysicalAssetSpecificationType'
            }, {
                name: 'materialSpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSpecification',
                typeInfo: '.OpMaterialSpecificationType'
            }, {
                name: 'segmentDependency',
                minOccurs: 0,
                collection: true,
                elementName: 'SegmentDependency',
                typeInfo: '.SegmentDependencyType'
            }, {
                name: 'operationsSegment',
                minOccurs: 0,
                collection: true,
                elementName: 'OperationsSegment',
                typeInfo: '.OperationsSegmentType'
            }]
        }, {
            localName: 'EquipmentElementType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'StartTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'ProductSegmentIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ChangeType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'recordReference',
                required: true,
                elementName: 'RecordReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'prechangeData',
                required: true,
                collection: true,
                elementName: 'PrechangeData',
                typeInfo: '.ValueType'
            }, {
                name: 'reason',
                minOccurs: 0,
                collection: true,
                elementName: 'Reason',
                typeInfo: '.TextType'
            }]
        }, {
            localName: 'OperationsMaterialBillType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'operationsMaterialBillItem',
                minOccurs: 0,
                collection: true,
                elementName: 'OperationsMaterialBillItem',
                typeInfo: '.OperationsMaterialBillItemType'
            }]
        }, {
            localName: 'ClassInstanceAssociationType',
            propertyInfos: [{
                name: 'classEquipmentID',
                required: true,
                elementName: 'ClassEquipmentID',
                typeInfo: '.ClassEquipmentIDType'
            }, {
                name: 'memberEquipmentID',
                required: true,
                elementName: 'MemberEquipmentID',
                typeInfo: '.MemberEquipmentIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }]
        }, {
            localName: 'ProcessProductDefinitionType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'productDefinition',
                required: true,
                collection: true,
                elementName: 'ProductDefinition',
                typeInfo: '.ProductDefinitionType'
            }]
        }, {
            localName: 'RespondWorkDirectiveType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondWorkDirectiveType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'AcknowledgeWorkflowSpecificationInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'workflowSpecificationInformation',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecificationInformation',
                typeInfo: '.WorkflowSpecificationInformationType'
            }]
        }, {
            localName: 'ChangeOperationsPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'operationsPerformance',
                required: true,
                collection: true,
                elementName: 'OperationsPerformance',
                typeInfo: '.OperationsPerformanceType'
            }]
        }, {
            localName: 'SyncWorkflowSpecificationTypeType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'workflowSpecificationType',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecificationType',
                typeInfo: '.WorkflowSpecificationTypeType'
            }]
        }, {
            localName: 'AuthorType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'AcknowledgeProductDefinitionType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeProductDefinitionType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'BatchIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ToEquipmentIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'PhysicalAssetRequirementPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'TagSpecificationType',
            propertyInfos: [{
                name: 'tagIndex',
                required: true,
                elementName: 'TagIndex',
                typeInfo: '.NumericType'
            }, {
                name: 'dataType',
                required: true,
                elementName: 'DataType',
                typeInfo: '.DataTypeType'
            }, {
                name: 'unitOfMeasure',
                required: true,
                elementName: 'UnitOfMeasure',
                typeInfo: '.UnitOfMeasureType'
            }, {
                name: 'dataSource',
                minOccurs: 0,
                collection: true,
                elementName: 'DataSource',
                typeInfo: '.IdentifierType'
            }, {
                name: 'alias',
                minOccurs: 0,
                collection: true,
                elementName: 'Alias',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'equipmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'physicalAssetID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'proceduralElementReference',
                minOccurs: 0,
                collection: true,
                elementName: 'ProceduralElementReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'deadband',
                minOccurs: 0,
                collection: true,
                elementName: 'Deadband',
                typeInfo: '.ValueType'
            }, {
                name: 'significantDigits',
                minOccurs: 0,
                collection: true,
                elementName: 'SignificantDigits',
                typeInfo: '.IdentifierType'
            }, {
                name: 'dataCompression',
                minOccurs: 0,
                collection: true,
                elementName: 'DataCompression',
                typeInfo: '.IdentifierType'
            }, {
                name: 'samplingType',
                minOccurs: 0,
                collection: true,
                elementName: 'SamplingType',
                typeInfo: '.IdentifierType'
            }]
        }, {
            localName: 'OpPhysicalAssetActualType',
            propertyInfos: [{
                name: 'physicalAssetClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetClassID',
                typeInfo: '.PhysicalAssetClassIDType'
            }, {
                name: 'physicalAssetID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetID',
                typeInfo: '.PhysicalAssetIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'physicalAssetActualProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetActualProperty',
                typeInfo: '.OpPhysicalAssetActualPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'AcknowledgeProductionScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeProductionScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'MaterialRequirementIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ProductProductionRuleIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'EquipmentElementTypeType',
            baseTypeInfo: '.EquipmentElementType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ScheduleEntryNoteType',
            baseTypeInfo: '.TextType'
        }, {
            localName: 'OperationsScheduleRecordType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'operationsSchedule',
                required: true,
                elementName: 'OperationsSchedule',
                typeInfo: '.OperationsScheduleType'
            }]
        }, {
            localName: 'OperationsMaterialBillItemType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'materialClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialClassID',
                typeInfo: '.MaterialClassIDType'
            }, {
                name: 'materialDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialDefinitionID',
                typeInfo: '.MaterialDefinitionIDType'
            }, {
                name: 'useType',
                elementName: 'UseType',
                typeInfo: '.CodeType'
            }, {
                name: 'assemblyBillOfMaterialItem',
                minOccurs: 0,
                collection: true,
                elementName: 'AssemblyBillOfMaterialItem',
                typeInfo: '.OperationsMaterialBillItemType'
            }, {
                name: 'assemblyType',
                elementName: 'AssemblyType',
                typeInfo: '.AssemblyTypeType'
            }, {
                name: 'assemblyRelationship',
                elementName: 'AssemblyRelationship',
                typeInfo: '.AssemblyRelationshipType'
            }, {
                name: 'materialSpecificationID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSpecificationID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'ExpirationDateType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'AcknowledgeWorkflowSpecificationInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeWorkflowSpecificationInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'CancelWorkScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'workSchedule',
                required: true,
                collection: true,
                elementName: 'WorkSchedule',
                typeInfo: '.WorkScheduleType'
            }]
        }, {
            localName: 'SyncProductionScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'productionSchedule',
                required: true,
                collection: true,
                elementName: 'ProductionSchedule',
                typeInfo: '.ProductionScheduleType'
            }]
        }, {
            localName: 'RequestedStartTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'TransitionType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IDType'
            }, {
                name: 'condition',
                required: true,
                elementName: 'Condition',
                typeInfo: '.ConditionType'
            }, {
                name: 'conditionAnnotation',
                elementName: 'ConditionAnnotation',
                typeInfo: '.ConditionAnnotationType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }]
        }, {
            localName: 'AcknowledgeBatchProductionRecordType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeBatchProductionRecordType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ChangeOperationsDefinitionType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeOperationsDefinitionType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OpPhysicalAssetRequirementType',
            propertyInfos: [{
                name: 'physicalAssetClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetClassID',
                typeInfo: '.PhysicalAssetClassIDType'
            }, {
                name: 'physicalAssetID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetID',
                typeInfo: '.PhysicalAssetIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'physicalAssetUse',
                elementName: 'PhysicalAssetUse',
                typeInfo: '.PhysicalAssetUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'equipmentLevel',
                elementName: 'EquipmentLevel',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'physicalAssetRequirementProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetRequirementProperty',
                typeInfo: '.OpPhysicalAssetRequirementPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'TransActionCriteriaType',
            propertyInfos: [{
                name: 'actionExpression',
                minOccurs: 0,
                collection: true,
                elementName: 'ActionExpression',
                typeInfo: '.TransExpressionType'
            }, {
                name: 'changeStatus',
                elementName: 'ChangeStatus',
                typeInfo: '.TransChangeStatusType'
            }]
        }, {
            localName: 'OperationsTypeType',
            baseTypeInfo: '.OperationsType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'GetBatchProductionRecordType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetBatchProductionRecordType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'GetWorkflowSpecificationInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'workflowSpecificationInformation',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecificationInformation',
                typeInfo: '.WorkflowSpecificationInformationType'
            }]
        }, {
            localName: 'GetOperationsDefinitionInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetOperationsDefinitionInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'RespondJobListType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'jobList',
                required: true,
                collection: true,
                elementName: 'JobList',
                typeInfo: '.JobListType'
            }]
        }, {
            localName: 'WorkDirectiveRecordType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'workDirective',
                required: true,
                elementName: 'WorkDirective',
                typeInfo: '.WorkDirectiveType'
            }]
        }, {
            localName: 'WorkPerformanceType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'workType',
                elementName: 'WorkType',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'workScheduleID',
                elementName: 'WorkScheduleID',
                typeInfo: '.WorkScheduleIDType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'workState',
                elementName: 'WorkState',
                typeInfo: '.ResponseStateType'
            }, {
                name: 'publishedDate',
                elementName: 'PublishedDate',
                typeInfo: '.PublishedDateType'
            }, {
                name: 'workResponse',
                minOccurs: 0,
                collection: true,
                elementName: 'WorkResponse',
                typeInfo: '.WorkResponseType'
            }]
        }, {
            localName: 'ApprovedByType',
            baseTypeInfo: '.NameType'
        }, {
            localName: 'OpEquipmentSpecificationPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'CancelOperationsDefinitionType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelOperationsDefinitionType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ConnectionTypeType',
            baseTypeInfo: '.ConnectionType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OpPersonnelRequirementType',
            propertyInfos: [{
                name: 'personnelClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelClassID',
                typeInfo: '.PersonnelClassIDType'
            }, {
                name: 'personID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonID',
                typeInfo: '.PersonIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'personnelUse',
                elementName: 'PersonnelUse',
                typeInfo: '.PersonnelUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'personnelRequirementProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelRequirementProperty',
                typeInfo: '.OpPersonnelRequirementPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'CommentsType',
            propertyInfos: [{
                name: 'comment',
                minOccurs: 0,
                collection: true,
                elementName: 'Comment',
                typeInfo: '.CommentType'
            }]
        }, {
            localName: 'RespondJobResponseType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'jobResponse',
                required: true,
                collection: true,
                elementName: 'JobResponse',
                typeInfo: '.JobResponseType'
            }]
        }, {
            localName: 'ProductionRequestIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ChangeWorkflowSpecificationTypeType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeWorkflowSpecificationTypeType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'AlarmDataType',
            propertyInfos: [{
                name: 'alarmEvent',
                required: true,
                elementName: 'AlarmEvent',
                typeInfo: '.CodeType'
            }, {
                name: 'alarmType',
                required: true,
                elementName: 'AlarmType',
                typeInfo: '.CodeType'
            }, {
                name: 'alarmLimit',
                minOccurs: 0,
                collection: true,
                elementName: 'AlarmLimit',
                typeInfo: '.ValueType'
            }, {
                name: 'priority',
                minOccurs: 0,
                collection: true,
                elementName: 'Priority',
                typeInfo: '.IdentifierType'
            }]
        }, {
            localName: 'PersonnelRequirementPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'SyncProductInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncProductInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ShowProductDefinitionType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowProductDefinitionType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'SyncWorkPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncWorkPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ShowProductionPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'productionPerformance',
                required: true,
                collection: true,
                elementName: 'ProductionPerformance',
                typeInfo: '.ProductionPerformanceType'
            }]
        }, {
            localName: 'ChangeWorkDirectiveType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeWorkDirectiveType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'AcknowledgeOperationsPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'operationsPerformance',
                required: true,
                collection: true,
                elementName: 'OperationsPerformance',
                typeInfo: '.OperationsPerformanceType'
            }]
        }, {
            localName: 'RecipeVersionType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ShowWorkDefinitionInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowWorkDefinitionInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'DepictionType',
            baseTypeInfo: '.Depiction1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'EquipmentClassIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'AcknowledgeOperationsScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'operationsSchedule',
                required: true,
                collection: true,
                elementName: 'OperationsSchedule',
                typeInfo: '.OperationsScheduleType'
            }]
        }, {
            localName: 'WorkType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'TransProcessType',
            propertyInfos: [{
                name: 'actionCriteria',
                minOccurs: 0,
                collection: true,
                elementName: 'ActionCriteria',
                typeInfo: '.TransActionCriteriaType'
            }, {
                name: 'acknowledgeCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'acknowledgeCode'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ProcessWorkDirectiveType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'workDirective',
                required: true,
                collection: true,
                elementName: 'WorkDirective',
                typeInfo: '.WorkDirectiveType'
            }]
        }, {
            localName: 'ProductDefinitionType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'version',
                elementName: 'Version',
                typeInfo: '.VersionType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'publishedDate',
                elementName: 'PublishedDate',
                typeInfo: '.PublishedDateType'
            }, {
                name: 'productProductionRule',
                elementName: 'ProductProductionRule',
                typeInfo: '.ProductProductionRuleType'
            }, {
                name: 'billOfMaterialsID',
                elementName: 'BillOfMaterialsID',
                typeInfo: '.BillOfMaterialsIDType'
            }, {
                name: 'billOfResourcesID',
                elementName: 'BillOfResourcesID',
                typeInfo: '.BillOfResourcesIDType'
            }, {
                name: 'manufacturingBill',
                minOccurs: 0,
                collection: true,
                elementName: 'ManufacturingBill',
                typeInfo: '.ManufacturingBillType'
            }, {
                name: 'productSegment',
                minOccurs: 0,
                collection: true,
                elementName: 'ProductSegment',
                typeInfo: '.ProductSegmentType'
            }]
        }, {
            localName: 'SyncWorkflowSpecificationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncWorkflowSpecificationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'AcknowledgeProductInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'productInformation',
                required: true,
                collection: true,
                elementName: 'ProductInformation',
                typeInfo: '.ProductInformationType'
            }]
        }, {
            localName: 'ExpirationTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'ShowWorkDirectiveType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowWorkDirectiveType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ShowOperationsDefinitionInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'operationsDefinitionInformation',
                required: true,
                collection: true,
                elementName: 'OperationsDefinitionInformation',
                typeInfo: '.OperationsDefinitionInformationType'
            }]
        }, {
            localName: 'AcknowledgeOperationsDefinitionInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'operationsDefinitionInformation',
                required: true,
                collection: true,
                elementName: 'OperationsDefinitionInformation',
                typeInfo: '.OperationsDefinitionInformationType'
            }]
        }, {
            localName: 'AcknowledgeBatchProductionRecordType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'batchProductionRecord',
                required: true,
                collection: true,
                elementName: 'BatchProductionRecord',
                typeInfo: '.BatchProductionRecordType'
            }]
        }, {
            localName: 'ShowOperationsDefinitionType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'operationsDefinition',
                required: true,
                collection: true,
                elementName: 'OperationsDefinition',
                typeInfo: '.OperationsDefinitionType'
            }]
        }, {
            localName: 'ApprovalDateType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'TransSyncType',
            propertyInfos: [{
                name: 'actionCriteria',
                minOccurs: 0,
                collection: true,
                elementName: 'ActionCriteria',
                typeInfo: '.TransActionCriteriaType'
            }]
        }, {
            localName: 'OrderIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'RecipeElementType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IDType'
            }, {
                name: 'version',
                elementName: 'Version',
                typeInfo: '.VersionType'
            }, {
                name: 'versionDate',
                elementName: 'VersionDate',
                typeInfo: '.VersionDateType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'recipeElementType',
                required: true,
                elementName: 'RecipeElementType',
                typeInfo: '.RecipeElementTypeType'
            }, {
                name: 'buildingBlockElementID',
                elementName: 'BuildingBlockElementID',
                typeInfo: '.BuildingBlockElementIDType'
            }, {
                name: 'buildingBlockElementVersion',
                elementName: 'BuildingBlockElementVersion',
                typeInfo: '.BuildingBlockElementVersionType'
            }, {
                name: 'actualEquipmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'ActualEquipmentID',
                typeInfo: '.ActualEquipmentIDType'
            }, {
                name: 'header',
                elementName: 'Header',
                typeInfo: '.HeaderType'
            }, {
                name: 'equipmentRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentRequirement',
                typeInfo: '.BatchEquipmentRequirementType'
            }, {
                name: 'parameter',
                minOccurs: 0,
                collection: true,
                elementName: 'Parameter',
                typeInfo: '.BatchParameterType'
            }, {
                name: 'procedureLogic',
                elementName: 'ProcedureLogic',
                typeInfo: '.ProcedureLogicType'
            }, {
                name: 'recipeElement',
                minOccurs: 0,
                collection: true,
                elementName: 'RecipeElement',
                typeInfo: '.RecipeElementType'
            }, {
                name: 'otherInformation',
                minOccurs: 0,
                collection: true,
                elementName: 'OtherInformation',
                typeInfo: '.OtherInformationType'
            }]
        }, {
            localName: 'EnumerationNumberType',
            baseTypeInfo: '.NumericType'
        }, {
            localName: 'RespondOperationsDefinitionInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'operationsDefinitionInformation',
                required: true,
                collection: true,
                elementName: 'OperationsDefinitionInformation',
                typeInfo: '.OperationsDefinitionInformationType'
            }]
        }, {
            localName: 'SyncWorkDirectiveType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'workDirective',
                required: true,
                collection: true,
                elementName: 'WorkDirective',
                typeInfo: '.WorkDirectiveType'
            }]
        }, {
            localName: 'EquipmentConnectionType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'connectionType',
                required: true,
                elementName: 'ConnectionType',
                typeInfo: '.ConnectionTypeType'
            }, {
                name: 'fromEquipmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'FromEquipmentID',
                typeInfo: '.FromEquipmentIDType'
            }, {
                name: 'toEquipmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'ToEquipmentID',
                typeInfo: '.ToEquipmentIDType'
            }]
        }, {
            localName: 'BillOfMaterialsIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'AssemblyRelationship1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'OpEquipmentActualType',
            propertyInfos: [{
                name: 'equipmentClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentClassID',
                typeInfo: '.EquipmentClassIDType'
            }, {
                name: 'equipmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentID',
                typeInfo: '.EquipmentIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'equipmentUse',
                elementName: 'EquipmentUse',
                typeInfo: '.EquipmentUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'equipmentActualProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentActualProperty',
                typeInfo: '.OpEquipmentActualPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'BatchEquipmentRequirementType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IDType'
            }, {
                name: 'constraint',
                minOccurs: 0,
                collection: true,
                elementName: 'Constraint',
                typeInfo: '.ConstraintType'
            }, {
                name: 'description',
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }]
        }, {
            localName: 'RespondProductionPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'productionPerformance',
                required: true,
                collection: true,
                elementName: 'ProductionPerformance',
                typeInfo: '.ProductionPerformanceType'
            }]
        }, {
            localName: 'BinaryObjectType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'BinaryObjectType'
            },
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Base64Binary',
                type: 'value'
            }, {
                name: 'format',
                attributeName: {
                    localPart: 'format'
                },
                type: 'attribute'
            }, {
                name: 'mimeCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'mimeCode'
                },
                type: 'attribute'
            }, {
                name: 'encodingCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'encodingCode'
                },
                type: 'attribute'
            }, {
                name: 'characterSetCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'characterSetCode'
                },
                type: 'attribute'
            }, {
                name: 'uri',
                attributeName: {
                    localPart: 'uri'
                },
                type: 'attribute'
            }, {
                name: 'filename',
                attributeName: {
                    localPart: 'filename'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'FromTypeType',
            baseTypeInfo: '.FromType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'WorkflowSpecificationInformationType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'publishedDate',
                elementName: 'PublishedDate',
                typeInfo: '.PublishedDateType'
            }, {
                name: 'workflowSpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'WorkflowSpecification',
                typeInfo: '.WorkflowSpecificationType'
            }, {
                name: 'workflowSpecificationType',
                minOccurs: 0,
                collection: true,
                elementName: 'WorkflowSpecificationType',
                typeInfo: '.WorkflowSpecificationTypeType'
            }]
        }, {
            localName: 'ProductDefinitionsType',
            propertyInfos: [{
                name: 'productDefinitionRecord',
                minOccurs: 0,
                collection: true,
                elementName: 'ProductDefinitionRecord',
                typeInfo: '.ProductDefinitionRecordType'
            }]
        }, {
            localName: 'HeaderType',
            propertyInfos: [{
                name: 'modificationLog',
                minOccurs: 0,
                collection: true,
                elementName: 'ModificationLog',
                typeInfo: '.ModificationLogType'
            }, {
                name: 'approvalHistory',
                minOccurs: 0,
                collection: true,
                elementName: 'ApprovalHistory',
                typeInfo: '.ApprovalHistoryType'
            }, {
                name: 'effectiveDate',
                elementName: 'EffectiveDate',
                typeInfo: '.EffectiveDateType'
            }, {
                name: 'expirationDate',
                elementName: 'ExpirationDate',
                typeInfo: '.ExpirationDateType'
            }, {
                name: 'productID',
                elementName: 'ProductID',
                typeInfo: '.ProductIDType'
            }, {
                name: 'productName',
                elementName: 'ProductName',
                typeInfo: '.ProductNameType'
            }, {
                name: 'batchSize',
                elementName: 'BatchSize',
                typeInfo: '.BatchSizeType'
            }, {
                name: 'actualProductProduced',
                minOccurs: 0,
                collection: true,
                elementName: 'ActualProductProduced',
                typeInfo: '.ActualProductProducedType'
            }, {
                name: 'status',
                elementName: 'Status',
                typeInfo: '.BatchStatusType'
            }]
        }, {
            localName: 'AcknowledgeWorkMasterType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'workMaster',
                required: true,
                collection: true,
                elementName: 'WorkMaster',
                typeInfo: '.WorkMasterType'
            }]
        }, {
            localName: 'CancelBatchProductionRecordType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelBatchProductionRecordType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'WorkPerformanceRecordType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'workPerformaance',
                required: true,
                elementName: 'WorkPerformaance',
                typeInfo: '.WorkPerformanceType'
            }]
        }, {
            localName: 'ChangeOperationsScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'operationsSchedule',
                required: true,
                collection: true,
                elementName: 'OperationsSchedule',
                typeInfo: '.OperationsScheduleType'
            }]
        }, {
            localName: 'ParameterType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'TransChangeStatusType',
            propertyInfos: [{
                name: 'code',
                elementName: 'Code',
                typeInfo: '.CodeType'
            }, {
                name: 'description',
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'effectiveDateTime',
                elementName: 'EffectiveDateTime',
                typeInfo: '.DateTimeType'
            }, {
                name: 'reasonCode',
                elementName: 'ReasonCode',
                typeInfo: '.CodeType'
            }, {
                name: 'reason',
                minOccurs: 0,
                collection: true,
                elementName: 'Reason',
                typeInfo: '.CodeType'
            }, {
                name: 'stateChange',
                minOccurs: 0,
                collection: true,
                elementName: 'StateChange',
                typeInfo: '.TransStateChangeType'
            }, {
                name: 'userArea',
                elementName: 'UserArea',
                typeInfo: '.TransUserAreaType'
            }]
        }, {
            localName: 'ParameterIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ProcessProductDefinitionType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessProductDefinitionType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'SyncOperationsPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncOperationsPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ProcessWorkScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'workSchedule',
                required: true,
                collection: true,
                elementName: 'WorkSchedule',
                typeInfo: '.WorkScheduleType'
            }]
        }, {
            localName: 'SampleTestType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'testCode',
                elementName: 'TestCode',
                typeInfo: '.CodeType'
            }, {
                name: 'testName',
                elementName: 'TestName',
                typeInfo: '.IdentifierType'
            }, {
                name: 'sampleTestResult',
                minOccurs: 0,
                collection: true,
                elementName: 'SampleTestResult',
                typeInfo: '.SampleTestResultType'
            }]
        }, {
            localName: 'IDScopeType',
            baseTypeInfo: '.IDScope1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'EquipmentUseType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'MaterialLotIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'CancelOperationsScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'operationsSchedule',
                required: true,
                collection: true,
                elementName: 'OperationsSchedule',
                typeInfo: '.OperationsScheduleType'
            }]
        }, {
            localName: 'ShowProductDefinitionType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'productDefinition',
                required: true,
                collection: true,
                elementName: 'ProductDefinition',
                typeInfo: '.ProductDefinitionType'
            }]
        }, {
            localName: 'EnumerationType',
            propertyInfos: [{
                name: 'enumerationNumber',
                required: true,
                elementName: 'EnumerationNumber',
                typeInfo: '.EnumerationNumberType'
            }, {
                name: 'enumerationString',
                elementName: 'EnumerationString',
                typeInfo: '.EnumerationStringType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }]
        }, {
            localName: 'DescriptionType',
            baseTypeInfo: '.TextType'
        }, {
            localName: 'MasterRecipeType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IDType'
            }, {
                name: 'version',
                elementName: 'Version',
                typeInfo: '.VersionType'
            }, {
                name: 'versionDate',
                elementName: 'VersionDate',
                typeInfo: '.VersionDateType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'header',
                elementName: 'Header',
                typeInfo: '.HeaderType'
            }, {
                name: 'equipmentRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentRequirement',
                typeInfo: '.BatchEquipmentRequirementType'
            }, {
                name: 'formula',
                elementName: 'Formula',
                typeInfo: '.FormulaType'
            }, {
                name: 'procedureLogic',
                elementName: 'ProcedureLogic',
                typeInfo: '.ProcedureLogicType'
            }, {
                name: 'recipeElement',
                minOccurs: 0,
                collection: true,
                elementName: 'RecipeElement',
                typeInfo: '.RecipeElementType'
            }, {
                name: 'otherInformation',
                minOccurs: 0,
                collection: true,
                elementName: 'OtherInformation',
                typeInfo: '.OtherInformationType'
            }]
        }, {
            localName: 'ShowProductionScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowProductionScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ChangeWorkPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'workPerformance',
                required: true,
                collection: true,
                elementName: 'WorkPerformance',
                typeInfo: '.WorkPerformanceType'
            }]
        }, {
            localName: 'DataValueType',
            propertyInfos: [{
                name: 'tagIndex',
                elementName: 'TagIndex',
                typeInfo: '.NumericType'
            }, {
                name: 'value',
                required: true,
                collection: true,
                elementName: 'Value'
            }, {
                name: 'quality',
                elementName: 'Quality',
                typeInfo: '.IdentifierType'
            }]
        }, {
            localName: 'PhysicalAssetCapabilityTestSpecificationIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'PriorityType',
            baseTypeInfo: '.NumericType'
        }, {
            localName: 'ShowWorkMasterType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'workMaster',
                required: true,
                collection: true,
                elementName: 'WorkMaster',
                typeInfo: '.WorkMasterType'
            }]
        }, {
            localName: 'BuildingBlockElementIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ShowOperationsScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'operationsSchedule',
                required: true,
                collection: true,
                elementName: 'OperationsSchedule',
                typeInfo: '.OperationsScheduleType'
            }]
        }, {
            localName: 'SyncOperationsScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncOperationsScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'QuantityType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'QuantityType'
            },
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Decimal',
                type: 'value'
            }, {
                name: 'unitCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCode'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCodeListID'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCodeListAgencyID'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListAgencyName',
                attributeName: {
                    localPart: 'unitCodeListAgencyName'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'TransSenderType',
            propertyInfos: [{
                name: 'logicalID',
                elementName: 'LogicalID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'componentID',
                elementName: 'ComponentID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'taskID',
                elementName: 'TaskID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'referenceID',
                elementName: 'ReferenceID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'confirmationCode',
                elementName: 'ConfirmationCode',
                typeInfo: '.TransConfirmationCodeType'
            }, {
                name: 'authorizationID',
                elementName: 'AuthorizationID',
                typeInfo: '.IdentifierType'
            }]
        }, {
            localName: 'VersionDateType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'PersonNameType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'CancelWorkPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelWorkPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'AcknowledgeWorkPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'workPerformance',
                required: true,
                collection: true,
                elementName: 'WorkPerformance',
                typeInfo: '.WorkPerformanceType'
            }]
        }, {
            localName: 'RespondOperationsDefinitionInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondOperationsDefinitionInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'EnumerationSetType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'enumeration',
                minOccurs: 0,
                collection: true,
                elementName: 'Enumeration',
                typeInfo: '.EnumerationType'
            }]
        }, {
            localName: 'MaterialConsumedActualPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'OperationsDefinitionRecordType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'operationsDefinition',
                required: true,
                elementName: 'OperationsDefinition',
                typeInfo: '.OperationsDefinitionType'
            }]
        }, {
            localName: 'SegmentDependencyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'dependency',
                required: true,
                elementName: 'Dependency',
                typeInfo: '.DependencyType'
            }, {
                name: 'timingFactor',
                minOccurs: 0,
                collection: true,
                elementName: 'TimingFactor',
                typeInfo: '.ValueType'
            }, {
                name: 'productSegmentIDOrProcessSegmentIDOrSegmentID',
                minOccurs: 0,
                collection: true,
                elementTypeInfos: [{
                    elementName: 'ProductSegmentID',
                    typeInfo: '.ProductSegmentIDType'
                }, {
                    elementName: 'ProcessSegmentID',
                    typeInfo: '.ProcessSegmentIDType'
                }, {
                    elementName: 'SegmentID',
                    typeInfo: '.IdentifierType'
                }],
                type: 'elements'
            }]
        }, {
            localName: 'ChangeWorkPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeWorkPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ChangeOperationsDefinitionType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'operationsDefinition',
                required: true,
                collection: true,
                elementName: 'OperationsDefinition',
                typeInfo: '.OperationsDefinitionType'
            }]
        }, {
            localName: 'IDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'PhysicalAssetSpecificationType',
            propertyInfos: [{
                name: 'physicalAssetClassID',
                elementName: 'PhysicalAssetClassID',
                typeInfo: '.PhysicalAssetClassIDType'
            }, {
                name: 'physicalAssetID',
                elementName: 'PhysicalAssetID',
                typeInfo: '.PhysicalAssetIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'physicalAssetSpecificationProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetSpecificationProperty',
                typeInfo: '.PhysicalAssetSpecificationPropertyType'
            }]
        }, {
            localName: 'OperationsDefinitionType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'version',
                elementName: 'Version',
                typeInfo: '.VersionType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'operationsType',
                elementName: 'OperationsType',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'publishedDate',
                elementName: 'PublishedDate',
                typeInfo: '.PublishedDateType'
            }, {
                name: 'billOfMaterialsID',
                elementName: 'BillOfMaterialsID',
                typeInfo: '.BillOfMaterialsIDType'
            }, {
                name: 'workDefinitionID',
                elementName: 'WorkDefinitionID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'billOfResourcesID',
                elementName: 'BillOfResourcesID',
                typeInfo: '.BillOfResourcesIDType'
            }, {
                name: 'operationsMaterialBill',
                minOccurs: 0,
                collection: true,
                elementName: 'OperationsMaterialBill',
                typeInfo: '.OperationsMaterialBillType'
            }, {
                name: 'operationsSegment',
                minOccurs: 0,
                collection: true,
                elementName: 'OperationsSegment',
                typeInfo: '.OperationsSegmentType'
            }]
        }, {
            localName: 'ChangeOperationsDefinitionInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'operationsDefinitionInformation',
                required: true,
                collection: true,
                elementName: 'OperationsDefinitionInformation',
                typeInfo: '.OperationsDefinitionInformationType'
            }]
        }, {
            localName: 'AcknowledgeWorkDirectiveType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeWorkDirectiveType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'GetOperationsScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'operationsSchedule',
                required: true,
                collection: true,
                elementName: 'OperationsSchedule',
                typeInfo: '.OperationsScheduleType'
            }]
        }, {
            localName: 'PhysicalAssetRequirementType',
            propertyInfos: [{
                name: 'physicalAssetClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetClassID',
                typeInfo: '.PhysicalAssetClassIDType'
            }, {
                name: 'physicalAssetID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetID',
                typeInfo: '.PhysicalAssetIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'physicalAssetRequirementProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetRequirementProperty',
                typeInfo: '.PhysicalAssetRequirementPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'DataSetsType',
            propertyInfos: [{
                name: 'dataSet',
                minOccurs: 0,
                collection: true,
                elementName: 'DataSet',
                typeInfo: '.DataSetType'
            }]
        }, {
            localName: 'RelationshipForm1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'CodeType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'CodeType'
            },
            propertyInfos: [{
                name: 'value',
                typeInfo: 'NormalizedString',
                type: 'value'
            }, {
                name: 'listID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'listID'
                },
                type: 'attribute'
            }, {
                name: 'listAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'listAgencyID'
                },
                type: 'attribute'
            }, {
                name: 'listAgencyName',
                attributeName: {
                    localPart: 'listAgencyName'
                },
                type: 'attribute'
            }, {
                name: 'listName',
                attributeName: {
                    localPart: 'listName'
                },
                type: 'attribute'
            }, {
                name: 'listVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'listVersionID'
                },
                type: 'attribute'
            }, {
                name: 'name',
                attributeName: {
                    localPart: 'name'
                },
                type: 'attribute'
            }, {
                name: 'languageID',
                typeInfo: 'Language',
                attributeName: {
                    localPart: 'languageID'
                },
                type: 'attribute'
            }, {
                name: 'listURI',
                attributeName: {
                    localPart: 'listURI'
                },
                type: 'attribute'
            }, {
                name: 'listSchemeURI',
                attributeName: {
                    localPart: 'listSchemeURI'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ScaledType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'ChangeProductInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeProductInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'PersonIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'CancelWorkflowSpecificationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelWorkflowSpecificationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ShowJobResponseType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'jobResponse',
                required: true,
                collection: true,
                elementName: 'JobResponse',
                typeInfo: '.JobResponseType'
            }]
        }, {
            localName: 'PersonnelClassIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ChangeWorkDefinitionInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'workDefinitionInformation',
                required: true,
                collection: true,
                elementName: 'WorkDefinitionInformation',
                typeInfo: '.WorkDefinitionInformationType'
            }]
        }, {
            localName: 'GetOperationsPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetOperationsPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OrderedDataType',
            propertyInfos: [{
                name: 'orderIndex',
                elementName: 'OrderIndex',
                typeInfo: '.NumericType'
            }, {
                name: 'timeValue',
                elementName: 'TimeValue',
                typeInfo: '.DateTimeType'
            }, {
                name: 'dataValue',
                required: true,
                collection: true,
                elementName: 'DataValue',
                typeInfo: '.DataValueType'
            }]
        }, {
            localName: 'GetWorkDirectiveType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'workDirective',
                required: true,
                collection: true,
                elementName: 'WorkDirective',
                typeInfo: '.WorkDirectiveType'
            }]
        }, {
            localName: 'ChangeOperationsDefinitionInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeOperationsDefinitionInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'RespondWorkScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'workSchedule',
                required: true,
                collection: true,
                elementName: 'WorkSchedule',
                typeInfo: '.WorkScheduleType'
            }]
        }, {
            localName: 'EventType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'EventsType',
            propertyInfos: [{
                name: 'event',
                minOccurs: 0,
                collection: true,
                elementName: 'Event',
                typeInfo: '.SingleEventType'
            }]
        }, {
            localName: 'RecipeIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'GetJobResponseType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetJobResponseType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ShowProductInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'productInformation',
                required: true,
                collection: true,
                elementName: 'ProductInformation',
                typeInfo: '.ProductInformationType'
            }]
        }, {
            localName: 'NoteType',
            baseTypeInfo: '.TextType'
        }, {
            localName: 'OperationsResponseType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'operationsType',
                elementName: 'OperationsType',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'operationsRequestID',
                minOccurs: 0,
                collection: true,
                elementName: 'OperationsRequestID',
                typeInfo: '.OperationsRequestIDType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'operationsDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'OperationsDefinitionID',
                typeInfo: '.OperationsDefinitionIDType'
            }, {
                name: 'responseState',
                elementName: 'ResponseState',
                typeInfo: '.ResponseStateType'
            }, {
                name: 'segmentResponse',
                minOccurs: 0,
                collection: true,
                elementName: 'SegmentResponse',
                typeInfo: '.OpSegmentResponseType'
            }]
        }, {
            localName: 'ShowWorkPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'workPerformance',
                required: true,
                collection: true,
                elementName: 'WorkPerformance',
                typeInfo: '.WorkPerformanceType'
            }]
        }, {
            localName: 'ProductionPerformancesType',
            propertyInfos: [{
                name: 'productionPerformanceRecord',
                minOccurs: 0,
                collection: true,
                elementName: 'ProductionPerformanceRecord',
                typeInfo: '.ProductionPerformanceRecordType'
            }]
        }, {
            localName: 'CancelProductionScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'productionSchedule',
                required: true,
                collection: true,
                elementName: 'ProductionSchedule',
                typeInfo: '.ProductionScheduleType'
            }]
        }, {
            localName: 'PlannedFinishTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'RespondOperationsPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondOperationsPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ChangeBatchProductionRecordType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeBatchProductionRecordType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ProcessProductionPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessProductionPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ReasonType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'ChangeProductionScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeProductionScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'CapabilityTypeType',
            baseTypeInfo: '.CapabilityType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'TransUserAreaType',
            propertyInfos: [{
                name: 'any',
                minOccurs: 0,
                collection: true,
                allowDom: false,
                mixed: false,
                type: 'anyElement'
            }]
        }, {
            localName: 'GetJobResponseType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'jobResponse',
                required: true,
                collection: true,
                elementName: 'JobResponse',
                typeInfo: '.JobResponseType'
            }]
        }, {
            localName: 'ProblemType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'OperationsRequestIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'RecordObjectType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'ModifiedDateType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'ConditionType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'Dependency1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'SyncJobResponseType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'jobResponse',
                required: true,
                collection: true,
                elementName: 'JobResponse',
                typeInfo: '.JobResponseType'
            }]
        }, {
            localName: 'ChangeWorkMasterType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'workMaster',
                required: true,
                collection: true,
                elementName: 'WorkMaster',
                typeInfo: '.WorkMasterType'
            }]
        }, {
            localName: 'TextType',
            propertyInfos: [{
                name: 'value',
                type: 'value'
            }, {
                name: 'languageID',
                typeInfo: 'Language',
                attributeName: {
                    localPart: 'languageID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ProcessWorkPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'workPerformance',
                required: true,
                collection: true,
                elementName: 'WorkPerformance',
                typeInfo: '.WorkPerformanceType'
            }]
        }, {
            localName: 'EventSubTypeType',
            baseTypeInfo: '.EventSubType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'PersonnelUseType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'ProcessBatchProductionRecordType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessBatchProductionRecordType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'DependencyType',
            baseTypeInfo: '.Dependency1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ProcessProductInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessProductInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'TransConfirmType',
            propertyInfos: [{
                name: 'originalApplicationArea',
                elementName: 'OriginalApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'responseCriteria',
                minOccurs: 0,
                collection: true,
                elementName: 'ResponseCriteria',
                typeInfo: '.TransResponseCriteriaType'
            }]
        }, {
            localName: 'RespondWorkflowSpecificationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'workflowSpecification',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecification',
                typeInfo: '.WorkflowSpecificationType'
            }]
        }, {
            localName: 'BatchParameterType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IDType'
            }, {
                name: 'description',
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'parameterType',
                required: true,
                elementName: 'ParameterType',
                typeInfo: '.ParameterTypeType'
            }, {
                name: 'parameterSubType',
                minOccurs: 0,
                collection: true,
                elementName: 'ParameterSubType',
                typeInfo: '.ParameterSubTypeType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.BatchValueType'
            }, {
                name: 'scaled',
                elementName: 'Scaled',
                typeInfo: '.ScaledType'
            }, {
                name: 'scaleReference',
                elementName: 'ScaleReference',
                typeInfo: '.ScaleReferenceType'
            }, {
                name: 'parameter',
                minOccurs: 0,
                collection: true,
                elementName: 'Parameter',
                typeInfo: '.BatchParameterType'
            }]
        }, {
            localName: 'ProcessWorkDefinitionInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'workDefinitionInformation',
                required: true,
                collection: true,
                elementName: 'WorkDefinitionInformation',
                typeInfo: '.WorkDefinitionInformationType'
            }]
        }, {
            localName: 'AnyGenericValueType',
            propertyInfos: [{
                name: 'value',
                type: 'value'
            }, {
                name: 'currencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'currencyID'
                },
                type: 'attribute'
            }, {
                name: 'currencyCodeListVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'currencyCodeListVersionID'
                },
                type: 'attribute'
            }, {
                name: 'encodingCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'encodingCode'
                },
                type: 'attribute'
            }, {
                name: 'format',
                attributeName: {
                    localPart: 'format'
                },
                type: 'attribute'
            }, {
                name: 'characterSetCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'characterSetCode'
                },
                type: 'attribute'
            }, {
                name: 'listID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'listID'
                },
                type: 'attribute'
            }, {
                name: 'listAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'listAgencyID'
                },
                type: 'attribute'
            }, {
                name: 'listAgencyName',
                attributeName: {
                    localPart: 'listAgencyName'
                },
                type: 'attribute'
            }, {
                name: 'listName',
                attributeName: {
                    localPart: 'listName'
                },
                type: 'attribute'
            }, {
                name: 'listVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'listVersionID'
                },
                type: 'attribute'
            }, {
                name: 'languageID',
                typeInfo: 'Language',
                attributeName: {
                    localPart: 'languageID'
                },
                type: 'attribute'
            }, {
                name: 'languageLocaleID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'languageLocaleID'
                },
                type: 'attribute'
            }, {
                name: 'listURI',
                attributeName: {
                    localPart: 'listURI'
                },
                type: 'attribute'
            }, {
                name: 'listSchemaURI',
                attributeName: {
                    localPart: 'listSchemaURI'
                },
                type: 'attribute'
            }, {
                name: 'mimeCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'mimeCode'
                },
                type: 'attribute'
            }, {
                name: 'name',
                attributeName: {
                    localPart: 'name'
                },
                type: 'attribute'
            }, {
                name: 'schemaID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'schemaID'
                },
                type: 'attribute'
            }, {
                name: 'schemaName',
                attributeName: {
                    localPart: 'schemaName'
                },
                type: 'attribute'
            }, {
                name: 'schemaAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'schemaAgencyID'
                },
                type: 'attribute'
            }, {
                name: 'schemaAgencyName',
                attributeName: {
                    localPart: 'schemaAgencyName'
                },
                type: 'attribute'
            }, {
                name: 'schemaVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'schemaVersionID'
                },
                type: 'attribute'
            }, {
                name: 'schemaDataURI',
                attributeName: {
                    localPart: 'schemaDataURI'
                },
                type: 'attribute'
            }, {
                name: 'schemaURI',
                attributeName: {
                    localPart: 'schemaURI'
                },
                type: 'attribute'
            }, {
                name: 'unitCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCode'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCodeListID'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCodeListAgencyID'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListAgencyName',
                attributeName: {
                    localPart: 'unitCodeListAgencyName'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCodeListVersionID'
                },
                type: 'attribute'
            }, {
                name: 'filename',
                attributeName: {
                    localPart: 'filename'
                },
                type: 'attribute'
            }, {
                name: 'uri',
                attributeName: {
                    localPart: 'uri'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'GetOperationsPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'operationsPerformance',
                required: true,
                collection: true,
                elementName: 'OperationsPerformance',
                typeInfo: '.OperationsPerformanceType'
            }]
        }, {
            localName: 'ProductDefinitionRecordType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'productDefinition',
                required: true,
                elementName: 'ProductDefinition',
                typeInfo: '.ProductDefinitionType'
            }]
        }, {
            localName: 'EquipmentProceduralElementType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'equipmentProceduralElementType',
                required: true,
                elementName: 'EquipmentProceduralElementType',
                typeInfo: '.EquipmentProceduralElementTypeType'
            }, {
                name: 'equipmentProceduralElementClassID',
                elementName: 'EquipmentProceduralElementClassID',
                typeInfo: '.EquipmentProceduralElementClassIDType'
            }, {
                name: 'parameter',
                minOccurs: 0,
                collection: true,
                elementName: 'Parameter',
                typeInfo: '.BatchParameterType'
            }]
        }, {
            localName: 'ScheduleStartTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'OperationsPerformancesType',
            propertyInfos: [{
                name: 'operationsPerformanceRecord',
                minOccurs: 0,
                collection: true,
                elementName: 'OperationsPerformanceRecord',
                typeInfo: '.OperationsPerformanceRecordType'
            }]
        }, {
            localName: 'ShowOperationsDefinitionInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowOperationsDefinitionInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'TransRespondType',
            propertyInfos: [{
                name: 'originalApplicationArea',
                elementName: 'OriginalApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'responseCriteria',
                minOccurs: 0,
                collection: true,
                elementName: 'ResponseCriteria',
                typeInfo: '.TransResponseCriteriaType'
            }]
        }, {
            localName: 'UnitOfMeasureType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'OpPersonnelSpecificationPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'OperationsSchedulesType',
            propertyInfos: [{
                name: 'operationsScheduleRecord',
                minOccurs: 0,
                collection: true,
                elementName: 'OperationsScheduleRecord',
                typeInfo: '.OperationsScheduleRecordType'
            }]
        }, {
            localName: 'IdentifierType',
            propertyInfos: [{
                name: 'value',
                typeInfo: 'NormalizedString',
                type: 'value'
            }, {
                name: 'schemeID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'schemeID'
                },
                type: 'attribute'
            }, {
                name: 'schemeName',
                attributeName: {
                    localPart: 'schemeName'
                },
                type: 'attribute'
            }, {
                name: 'schemeAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'schemeAgencyID'
                },
                type: 'attribute'
            }, {
                name: 'schemeAgencyName',
                attributeName: {
                    localPart: 'schemeAgencyName'
                },
                type: 'attribute'
            }, {
                name: 'schemeVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'schemeVersionID'
                },
                type: 'attribute'
            }, {
                name: 'schemeDataURI',
                attributeName: {
                    localPart: 'schemeDataURI'
                },
                type: 'attribute'
            }, {
                name: 'schemeURI',
                attributeName: {
                    localPart: 'schemeURI'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'RespondBatchProductionRecordType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'batchProductionRecord',
                required: true,
                collection: true,
                elementName: 'BatchProductionRecord',
                typeInfo: '.BatchProductionRecordType'
            }]
        }, {
            localName: 'OpMaterialActualType',
            propertyInfos: [{
                name: 'materialClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialClassID',
                typeInfo: '.MaterialClassIDType'
            }, {
                name: 'materialDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialDefinitionID',
                typeInfo: '.MaterialDefinitionIDType'
            }, {
                name: 'materialLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialLotID',
                typeInfo: '.MaterialLotIDType'
            }, {
                name: 'materialSubLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSubLotID',
                typeInfo: '.MaterialSubLotIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'materialUse',
                elementName: 'MaterialUse',
                typeInfo: '.MaterialUseType'
            }, {
                name: 'storageLocation',
                elementName: 'StorageLocation',
                typeInfo: '.StorageLocationType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'assemblyActual',
                minOccurs: 0,
                collection: true,
                elementName: 'AssemblyActual',
                typeInfo: '.OpMaterialActualType'
            }, {
                name: 'assemblyType',
                elementName: 'AssemblyType',
                typeInfo: '.AssemblyTypeType'
            }, {
                name: 'assemblyRelationship',
                elementName: 'AssemblyRelationship',
                typeInfo: '.AssemblyRelationshipType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'materialActualProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialActualProperty',
                typeInfo: '.OpMaterialActualPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'RecipeElementsType',
            propertyInfos: [{
                name: 'recipeElementRecord',
                minOccurs: 0,
                collection: true,
                elementName: 'RecipeElementRecord',
                typeInfo: '.RecipeElementRecordType'
            }]
        }, {
            localName: 'ResourceNetworkConnectionIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'GetProductInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'productInformation',
                required: true,
                collection: true,
                elementName: 'ProductInformation',
                typeInfo: '.ProductInformationType'
            }]
        }, {
            localName: 'ProductNameType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ApprovalHistoryType',
            propertyInfos: [{
                name: 'finalApprovalDate',
                elementName: 'FinalApprovalDate',
                typeInfo: '.FinalApprovalDateType'
            }, {
                name: 'version',
                elementName: 'Version',
                typeInfo: '.VersionType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'individualApproval',
                minOccurs: 0,
                collection: true,
                elementName: 'IndividualApproval',
                typeInfo: '.IndividualApprovalType'
            }]
        }, {
            localName: 'ProcessOperationsPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'operationsPerformance',
                required: true,
                collection: true,
                elementName: 'OperationsPerformance',
                typeInfo: '.OperationsPerformanceType'
            }]
        }, {
            localName: 'ProductionDataType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }, {
                name: 'productionData',
                minOccurs: 0,
                collection: true,
                elementName: 'ProductionData',
                typeInfo: '.ProductionDataType'
            }]
        }, {
            localName: 'OperationsType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'OpMaterialRequirementPropertyType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'materialRequirementProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialRequirementProperty',
                typeInfo: '.OpMaterialRequirementPropertyType'
            }]
        }, {
            localName: 'AcknowledgeOperationsDefinitionInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeOperationsDefinitionInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OperationsPerformanceType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'operationsType',
                elementName: 'OperationsType',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'operationsScheduleID',
                elementName: 'OperationsScheduleID',
                typeInfo: '.OperationsScheduleIDType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'performanceState',
                elementName: 'PerformanceState',
                typeInfo: '.ResponseStateType'
            }, {
                name: 'publishedDate',
                elementName: 'PublishedDate',
                typeInfo: '.PublishedDateType'
            }, {
                name: 'operationsResponse',
                minOccurs: 0,
                collection: true,
                elementName: 'OperationsResponse',
                typeInfo: '.OperationsResponseType'
            }]
        }, {
            localName: 'CancelJobListType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelJobListType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OperationsPerformanceRecordType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'operationsPerformance',
                required: true,
                elementName: 'OperationsPerformance',
                typeInfo: '.OperationsPerformanceType'
            }]
        }, {
            localName: 'FinalApprovalDateType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'ChangeWorkflowSpecificationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeWorkflowSpecificationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'GetWorkMasterType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'workMaster',
                required: true,
                collection: true,
                elementName: 'WorkMaster',
                typeInfo: '.WorkMasterType'
            }]
        }, {
            localName: 'StorageHierarchyScopeType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ResponseState1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'CancelProductionPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelProductionPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'CauseType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'TransShowType',
            propertyInfos: [{
                name: 'originalApplicationArea',
                elementName: 'OriginalApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'responseCriteria',
                minOccurs: 0,
                collection: true,
                elementName: 'ResponseCriteria',
                typeInfo: '.TransResponseCriteriaType'
            }]
        }, {
            localName: 'Mode1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'GetProductInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetProductInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'EquipmentProceduralElementType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'GetJobListType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetJobListType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'AcknowledgeJobListType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'jobList',
                required: true,
                collection: true,
                elementName: 'JobList',
                typeInfo: '.JobListType'
            }]
        }, {
            localName: 'SyncWorkMasterType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'workMaster',
                required: true,
                collection: true,
                elementName: 'WorkMaster',
                typeInfo: '.WorkMasterType'
            }]
        }, {
            localName: 'EvaluationOrderType',
            baseTypeInfo: '.NumericType'
        }, {
            localName: 'MemberEquipmentIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'BatchListType',
            propertyInfos: [{
                name: 'listHeader',
                elementName: 'ListHeader',
                typeInfo: '.ListHeaderType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'batchListEntry',
                minOccurs: 0,
                collection: true,
                elementName: 'BatchListEntry',
                typeInfo: '.BatchListEntryType'
            }]
        }, {
            localName: 'SyncWorkflowSpecificationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'workflowSpecification',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecification',
                typeInfo: '.WorkflowSpecificationType'
            }]
        }, {
            localName: 'MaterialSpecificationType',
            propertyInfos: [{
                name: 'materialClassID',
                elementName: 'MaterialClassID',
                typeInfo: '.MaterialClassIDType'
            }, {
                name: 'materialDefinitionID',
                elementName: 'MaterialDefinitionID',
                typeInfo: '.MaterialDefinitionIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'materialUse',
                elementName: 'MaterialUse',
                typeInfo: '.MaterialUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'assemblySpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'AssemblySpecification',
                typeInfo: '.MaterialSpecificationType'
            }, {
                name: 'assemblyType',
                elementName: 'AssemblyType',
                typeInfo: '.AssemblyTypeType'
            }, {
                name: 'assemblyRelationship',
                elementName: 'AssemblyRelationship',
                typeInfo: '.AssemblyRelationshipType'
            }, {
                name: 'materialSpecificationProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSpecificationProperty',
                typeInfo: '.MaterialSpecificationPropertyType'
            }]
        }, {
            localName: 'ChangeProductInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'productInformation',
                required: true,
                collection: true,
                elementName: 'ProductInformation',
                typeInfo: '.ProductInformationType'
            }]
        }, {
            localName: 'RespondWorkflowSpecificationInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'workflowSpecificationInformation',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecificationInformation',
                typeInfo: '.WorkflowSpecificationInformationType'
            }]
        }, {
            localName: 'EndTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'ManufacturingBillType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'materialClassID',
                elementName: 'MaterialClassID',
                typeInfo: '.MaterialClassIDType'
            }, {
                name: 'materialDefinitionID',
                elementName: 'MaterialDefinitionID',
                typeInfo: '.MaterialDefinitionIDType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'assemblyManufacturingBill',
                minOccurs: 0,
                collection: true,
                elementName: 'AssemblyManufacturingBill',
                typeInfo: '.ManufacturingBillType'
            }, {
                name: 'assemblyType',
                elementName: 'AssemblyType',
                typeInfo: '.AssemblyTypeType'
            }, {
                name: 'assemblyRelationship',
                elementName: 'AssemblyRelationship',
                typeInfo: '.AssemblyRelationshipType'
            }, {
                name: 'billOfMaterialID',
                elementName: 'BillOfMaterialID',
                typeInfo: '.BillOfMaterialIDType'
            }]
        }, {
            localName: 'BatchPriorityType',
            baseTypeInfo: '.NumericType'
        }, {
            localName: 'BatchListEntryType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'batchListEntryType',
                required: true,
                elementName: 'BatchListEntryType',
                typeInfo: '.BatchListEntryTypeType'
            }, {
                name: 'status',
                elementName: 'Status',
                typeInfo: '.BatchStatusType'
            }, {
                name: 'mode',
                elementName: 'Mode',
                typeInfo: '.ModeType'
            }, {
                name: 'externalID',
                elementName: 'ExternalID',
                typeInfo: '.ExternalIDType'
            }, {
                name: 'recipeID',
                elementName: 'RecipeID',
                typeInfo: '.RecipeIDType'
            }, {
                name: 'recipeVersion',
                elementName: 'RecipeVersion',
                typeInfo: '.RecipeVersionType'
            }, {
                name: 'batchID',
                elementName: 'BatchID',
                typeInfo: '.BatchIDType'
            }, {
                name: 'lotID',
                elementName: 'LotID',
                typeInfo: '.LotIDType'
            }, {
                name: 'campaignID',
                elementName: 'CampaignID',
                typeInfo: '.CampaignIDType'
            }, {
                name: 'productID',
                elementName: 'ProductID',
                typeInfo: '.ProductIDType'
            }, {
                name: 'orderID',
                elementName: 'OrderID',
                typeInfo: '.OrderIDType'
            }, {
                name: 'startCondition',
                elementName: 'StartCondition',
                typeInfo: '.StartConditionType'
            }, {
                name: 'requestedStartTime',
                elementName: 'RequestedStartTime',
                typeInfo: '.RequestedStartTimeType'
            }, {
                name: 'actualStartTime',
                elementName: 'ActualStartTime',
                typeInfo: '.ActualStartTimeType'
            }, {
                name: 'requestedEndTime',
                elementName: 'RequestedEndTime',
                typeInfo: '.RequestedEndTimeType'
            }, {
                name: 'actualEndTime',
                elementName: 'ActualEndTime',
                typeInfo: '.ActualEndTimeType'
            }, {
                name: 'batchPriority',
                elementName: 'BatchPriority',
                typeInfo: '.BatchPriorityType'
            }, {
                name: 'requestedBatchSize',
                elementName: 'RequestedBatchSize',
                typeInfo: '.RequestedBatchSizeType'
            }, {
                name: 'actualBatchSize',
                elementName: 'ActualBatchSize',
                typeInfo: '.ActualBatchSizeType'
            }, {
                name: 'unitOfMeasure',
                elementName: 'UnitOfMeasure',
                typeInfo: '.UnitOfMeasureType'
            }, {
                name: 'note',
                minOccurs: 0,
                collection: true,
                elementName: 'Note',
                typeInfo: '.NoteType'
            }, {
                name: 'parameter',
                minOccurs: 0,
                collection: true,
                elementName: 'Parameter',
                typeInfo: '.BatchParameterType'
            }, {
                name: 'equipmentIDOrEquipmentClassID',
                minOccurs: 0,
                collection: true,
                elementTypeInfos: [{
                    elementName: 'EquipmentID',
                    typeInfo: '.BatchEquipmentIDType'
                }, {
                    elementName: 'EquipmentClassID',
                    typeInfo: '.BatchEquipmentClassIDType'
                }],
                type: 'elements'
            }, {
                name: 'actualEquipmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'ActualEquipmentID',
                typeInfo: '.ActualEquipmentIDType'
            }, {
                name: 'batchListEntry',
                minOccurs: 0,
                collection: true,
                elementName: 'BatchListEntry',
                typeInfo: '.BatchListEntryType'
            }]
        }, {
            localName: 'EquipmentIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'AcknowledgeWorkflowSpecificationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'workflowSpecification',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecification',
                typeInfo: '.WorkflowSpecificationType'
            }]
        }, {
            localName: 'RespondProductInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondProductInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ShowWorkflowSpecificationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'workflowSpecification',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecification',
                typeInfo: '.WorkflowSpecificationType'
            }]
        }, {
            localName: 'MaterialSubLotIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ChangeJobResponseType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeJobResponseType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'StatusType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'MaterialUseType',
            baseTypeInfo: '.MaterialUse1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'BatchStatusType',
            baseTypeInfo: '.BatchStatus1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OpMaterialCapabilityType',
            propertyInfos: [{
                name: 'materialClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialClassID',
                typeInfo: '.MaterialClassIDType'
            }, {
                name: 'materialDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialDefinitionID',
                typeInfo: '.MaterialDefinitionIDType'
            }, {
                name: 'materialLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialLotID',
                typeInfo: '.MaterialLotIDType'
            }, {
                name: 'materialSubLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSubLotID',
                typeInfo: '.MaterialSubLotIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'capabilityType',
                elementName: 'CapabilityType',
                typeInfo: '.CapabilityTypeType'
            }, {
                name: 'reason',
                elementName: 'Reason',
                typeInfo: '.ReasonType'
            }, {
                name: 'confidenceFactor',
                elementName: 'ConfidenceFactor',
                typeInfo: '.ConfidenceFactorType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'materialUse',
                elementName: 'MaterialUse',
                typeInfo: '.MaterialUseType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'assemblyCapability',
                minOccurs: 0,
                collection: true,
                elementName: 'AssemblyCapability',
                typeInfo: '.OpMaterialCapabilityType'
            }, {
                name: 'assemblyType',
                elementName: 'AssemblyType',
                typeInfo: '.AssemblyTypeType'
            }, {
                name: 'assemblyRelationship',
                elementName: 'AssemblyRelationship',
                typeInfo: '.AssemblyRelationshipType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'materialCapabilityProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialCapabilityProperty',
                typeInfo: '.OpMaterialCapabilityPropertyType'
            }]
        }, {
            localName: 'MaterialConsumedActualType',
            propertyInfos: [{
                name: 'materialClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialClassID',
                typeInfo: '.MaterialClassIDType'
            }, {
                name: 'materialDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialDefinitionID',
                typeInfo: '.MaterialDefinitionIDType'
            }, {
                name: 'materialLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialLotID',
                typeInfo: '.MaterialLotIDType'
            }, {
                name: 'materialSubLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSubLotID',
                typeInfo: '.MaterialSubLotIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'materialConsumedActualProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialConsumedActualProperty',
                typeInfo: '.MaterialConsumedActualPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'SyncWorkMasterType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncWorkMasterType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'SyncBatchProductionRecordType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'batchProductionRecord',
                required: true,
                collection: true,
                elementName: 'BatchProductionRecord',
                typeInfo: '.BatchProductionRecordType'
            }]
        }, {
            localName: 'SampleTestResultType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'testDisposition',
                elementName: 'TestDisposition',
                typeInfo: '.IdentifierType'
            }, {
                name: 'equipmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'physicalAssetID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'analysisUsed',
                minOccurs: 0,
                collection: true,
                elementName: 'AnalysisUsed',
                typeInfo: '.CodeType'
            }, {
                name: 'expiration',
                elementName: 'Expiration',
                typeInfo: '.DateTimeType'
            }, {
                name: 'results',
                minOccurs: 0,
                collection: true,
                elementName: 'Results',
                typeInfo: '.ValueType'
            }, {
                name: 'expectedResults',
                minOccurs: 0,
                collection: true,
                elementName: 'ExpectedResults',
                typeInfo: '.ValueType'
            }]
        }, {
            localName: 'JobOrderCommandType',
            baseTypeInfo: '.JobOrderCommand1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'BillOfResourcesIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'NumericType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'NumericType'
            },
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Decimal',
                type: 'value'
            }, {
                name: 'format',
                attributeName: {
                    localPart: 'format'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ProcessWorkflowSpecificationInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'workflowSpecificationInformation',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecificationInformation',
                typeInfo: '.WorkflowSpecificationInformationType'
            }]
        }, {
            localName: 'SyncWorkScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncWorkScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'RequiredByRequestedSegmentResponseType',
            baseTypeInfo: '.RequiredByRequestedSegmentResponse1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'SyncWorkflowSpecificationTypeType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncWorkflowSpecificationTypeType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ShowJobResponseType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowJobResponseType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'JobOrderCommandRuleType',
            baseTypeInfo: '.TextType'
        }, {
            localName: 'EquipmentSpecificationPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'ToIDType',
            propertyInfos: [{
                name: 'toIDValue',
                required: true,
                elementName: 'ToIDValue'
            }, {
                name: 'toType',
                required: true,
                elementName: 'ToType',
                typeInfo: '.ToTypeType'
            }, {
                name: 'idScope',
                required: true,
                elementName: 'IDScope',
                typeInfo: '.IDScopeType'
            }]
        }, {
            localName: 'RequestStateType',
            baseTypeInfo: '.RequestState1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'CancelWorkDirectiveType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelWorkDirectiveType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'MaterialProducedActualType',
            propertyInfos: [{
                name: 'materialClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialClassID',
                typeInfo: '.MaterialClassIDType'
            }, {
                name: 'materialDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialDefinitionID',
                typeInfo: '.MaterialDefinitionIDType'
            }, {
                name: 'materialLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialLotID',
                typeInfo: '.MaterialLotIDType'
            }, {
                name: 'materialSubLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSubLotID',
                typeInfo: '.MaterialSubLotIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'materialProducedActualProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialProducedActualProperty',
                typeInfo: '.MaterialProducedActualPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'SyncWorkScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'workSchedule',
                required: true,
                collection: true,
                elementName: 'WorkSchedule',
                typeInfo: '.WorkScheduleType'
            }]
        }, {
            localName: 'RequestedPriorityType',
            baseTypeInfo: '.NumericType'
        }, {
            localName: 'RespondProductInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'productInformation',
                required: true,
                collection: true,
                elementName: 'ProductInformation',
                typeInfo: '.ProductInformationType'
            }]
        }, {
            localName: 'SyncOperationsDefinitionInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncOperationsDefinitionInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'GetWorkMasterType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetWorkMasterType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'LocationType',
            propertyInfos: [{
                name: 'equipmentID',
                required: true,
                elementName: 'EquipmentID',
                typeInfo: '.EquipmentIDType'
            }, {
                name: 'equipmentElementLevel',
                required: true,
                elementName: 'EquipmentElementLevel',
                typeInfo: '.EquipmentElementLevelType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }]
        }, {
            localName: 'EquipmentActualPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'PropertyIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ProcessWorkflowSpecificationTypeType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessWorkflowSpecificationTypeType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'WorkMasterType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'version',
                elementName: 'Version',
                typeInfo: '.VersionType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'workType',
                elementName: 'WorkType',
                typeInfo: '.WorkTypeType'
            }, {
                name: 'duration',
                elementName: 'Duration',
                typeInfo: 'Duration'
            }, {
                name: 'publishedDate',
                elementName: 'PublishedDate',
                typeInfo: '.PublishedDateType'
            }, {
                name: 'operationsDefinitionID',
                elementName: 'OperationsDefinitionID',
                typeInfo: '.OperationsDefinitionIDType'
            }, {
                name: 'parameter',
                minOccurs: 0,
                collection: true,
                elementName: 'Parameter',
                typeInfo: '.ParameterType'
            }, {
                name: 'personnelSpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelSpecification',
                typeInfo: '.OpPersonnelSpecificationType'
            }, {
                name: 'equipmentSpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentSpecification',
                typeInfo: '.OpEquipmentSpecificationType'
            }, {
                name: 'physicalAssetSpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetSpecification',
                typeInfo: '.OpPhysicalAssetSpecificationType'
            }, {
                name: 'materialSpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSpecification',
                typeInfo: '.OpMaterialSpecificationType'
            }, {
                name: 'workflowSpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'WorkflowSpecification',
                typeInfo: '.WorkflowSpecificationType'
            }, {
                name: 'workMaster',
                minOccurs: 0,
                collection: true,
                elementName: 'WorkMaster',
                typeInfo: '.WorkMasterType'
            }]
        }, {
            localName: 'PersonnelSpecificationPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'ChangeWorkflowSpecificationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'workflowSpecification',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecification',
                typeInfo: '.WorkflowSpecificationType'
            }]
        }, {
            localName: 'RespondWorkDirectiveType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'workDirective',
                required: true,
                collection: true,
                elementName: 'WorkDirective',
                typeInfo: '.WorkDirectiveType'
            }]
        }, {
            localName: 'PersonnelActualPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'ModeType',
            baseTypeInfo: '.Mode1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'QuantityStringType',
            baseTypeInfo: '.AnyGenericValueType'
        }, {
            localName: 'ProcessSegmentIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'PhysicalAssetClassIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'OpMaterialSpecificationType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'materialClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialClassID',
                typeInfo: '.MaterialClassIDType'
            }, {
                name: 'materialDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialDefinitionID',
                typeInfo: '.MaterialDefinitionIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'materialUse',
                elementName: 'MaterialUse',
                typeInfo: '.MaterialUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'assemblySpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'AssemblySpecification',
                typeInfo: '.OpMaterialSpecificationType'
            }, {
                name: 'assemblyType',
                elementName: 'AssemblyType',
                typeInfo: '.AssemblyTypeType'
            }, {
                name: 'assemblyRelationship',
                elementName: 'AssemblyRelationship',
                typeInfo: '.AssemblyRelationshipType'
            }, {
                name: 'materialSpecificationProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSpecificationProperty',
                typeInfo: '.OpMaterialSpecificationPropertyType'
            }]
        }, {
            localName: 'CancelWorkflowSpecificationTypeType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelWorkflowSpecificationTypeType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ExternalIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'WorkDefinitionInformationType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'publishedDate',
                elementName: 'PublishedDate',
                typeInfo: '.PublishedDateType'
            }, {
                name: 'workMaster',
                minOccurs: 0,
                collection: true,
                elementName: 'WorkMaster',
                typeInfo: '.WorkMasterType'
            }, {
                name: 'workDirective',
                minOccurs: 0,
                collection: true,
                elementName: 'WorkDirective',
                typeInfo: '.WorkDirectiveType'
            }]
        }, {
            localName: 'ResourcesType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'CancelWorkflowSpecificationInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'workflowSpecificationInformation',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecificationInformation',
                typeInfo: '.WorkflowSpecificationInformationType'
            }]
        }, {
            localName: 'ShowBatchProductionRecordType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowBatchProductionRecordType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'EquipmentElementIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'OpPersonnelRequirementPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'MaterialProducedRequirementPropertyType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'GetWorkDirectiveType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetWorkDirectiveType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ProcessWorkflowSpecificationInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessWorkflowSpecificationInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'SyncJobResponseType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncJobResponseType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'CapabilityType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'OperationsRequestType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'operationsType',
                elementName: 'OperationsType',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'priority',
                elementName: 'Priority',
                typeInfo: '.PriorityType'
            }, {
                name: 'operationsDefinitionID',
                elementName: 'OperationsDefinitionID',
                typeInfo: '.OperationsDefinitionIDType'
            }, {
                name: 'requestState',
                elementName: 'RequestState',
                typeInfo: '.RequestStateType'
            }, {
                name: 'segmentRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'SegmentRequirement',
                typeInfo: '.OpSegmentRequirementType'
            }, {
                name: 'segmentResponse',
                minOccurs: 0,
                collection: true,
                elementName: 'SegmentResponse',
                typeInfo: '.OpSegmentResponseType'
            }]
        }, {
            localName: 'CancelWorkScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelWorkScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'CancelOperationsPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'operationsPerformance',
                required: true,
                collection: true,
                elementName: 'OperationsPerformance',
                typeInfo: '.OperationsPerformanceType'
            }]
        }, {
            localName: 'ProductionScheduleType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'publishedDate',
                elementName: 'PublishedDate',
                typeInfo: '.PublishedDateType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'equipmentElementLevel',
                elementName: 'EquipmentElementLevel',
                typeInfo: '.EquipmentElementLevelType'
            }, {
                name: 'productionRequest',
                minOccurs: 0,
                collection: true,
                elementName: 'ProductionRequest',
                typeInfo: '.ProductionRequestType'
            }, {
                name: 'scheduleState',
                elementName: 'ScheduleState',
                typeInfo: '.RequestStateType'
            }]
        }, {
            localName: 'RespondProductionScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'productionSchedule',
                required: true,
                collection: true,
                elementName: 'ProductionSchedule',
                typeInfo: '.ProductionScheduleType'
            }]
        }, {
            localName: 'RespondWorkflowSpecificationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondWorkflowSpecificationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ShowOperationsScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowOperationsScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ParameterType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'parameter',
                minOccurs: 0,
                collection: true,
                elementName: 'Parameter',
                typeInfo: '.ParameterType'
            }]
        }, {
            localName: 'ChangeOperationsScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeOperationsScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'CertificateOfAnalysisReferenceType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'GetWorkflowSpecificationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetWorkflowSpecificationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ProductionPerformanceRecordType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'productionPerformaance',
                required: true,
                elementName: 'ProductionPerformaance',
                typeInfo: '.ProductionPerformanceType'
            }]
        }, {
            localName: 'ShowBatchProductionRecordType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'batchProductionRecord',
                required: true,
                collection: true,
                elementName: 'BatchProductionRecord',
                typeInfo: '.BatchProductionRecordType'
            }]
        }, {
            localName: 'OpPhysicalAssetRequirementPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'GetOperationsDefinitionType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'operationsDefinition',
                required: true,
                collection: true,
                elementName: 'OperationsDefinition',
                typeInfo: '.OperationsDefinitionType'
            }]
        }, {
            localName: 'ResourceQualificationsManifestType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'recordReference',
                required: true,
                elementName: 'RecordReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'resourceID',
                required: true,
                elementName: 'ResourceID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'resourceUse',
                required: true,
                elementName: 'ResourceUse',
                typeInfo: '.IdentifierType'
            }, {
                name: 'resourceType',
                required: true,
                elementName: 'ResourceType',
                typeInfo: '.IdentifierType'
            }, {
                name: 'qualificationStatus',
                required: true,
                elementName: 'QualificationStatus',
                typeInfo: '.CodeType'
            }, {
                name: 'effectiveTimeStamp',
                elementName: 'EffectiveTimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'expirationTimeStamp',
                elementName: 'ExpirationTimeStamp',
                typeInfo: '.DateTimeType'
            }]
        }, {
            localName: 'OpSegmentDataType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'segmentData',
                minOccurs: 0,
                collection: true,
                elementName: 'SegmentData',
                typeInfo: '.OpSegmentDataType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'MaterialProducedActualPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'NameType',
            propertyInfos: [{
                name: 'value',
                type: 'value'
            }, {
                name: 'languageID',
                typeInfo: 'Language',
                attributeName: {
                    localPart: 'languageID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'SyncWorkDefinitionInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'workDefinitionInformation',
                required: true,
                collection: true,
                elementName: 'WorkDefinitionInformation',
                typeInfo: '.WorkDefinitionInformationType'
            }]
        }, {
            localName: 'AcknowledgeWorkPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeWorkPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OtherDependencyType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'SegmentRequirementType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'productSegmentID',
                elementName: 'ProductSegmentID',
                typeInfo: '.ProductSegmentIDType'
            }, {
                name: 'processSegmentID',
                elementName: 'ProcessSegmentID',
                typeInfo: '.ProcessSegmentIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'earliestStartTime',
                elementName: 'EarliestStartTime',
                typeInfo: '.EarliestStartTimeType'
            }, {
                name: 'latestEndTime',
                elementName: 'LatestEndTime',
                typeInfo: '.LatestEndTimeType'
            }, {
                name: 'duration',
                elementName: 'Duration',
                typeInfo: 'Duration'
            }, {
                name: 'productionParameter',
                minOccurs: 0,
                collection: true,
                elementName: 'ProductionParameter',
                typeInfo: '.ProductionParameterType'
            }, {
                name: 'personnelRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelRequirement',
                typeInfo: '.PersonnelRequirementType'
            }, {
                name: 'equipmentRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentRequirement',
                typeInfo: '.EquipmentRequirementType'
            }, {
                name: 'physicalAssetRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetRequirement',
                typeInfo: '.PhysicalAssetRequirementType'
            }, {
                name: 'materialRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialRequirement',
                typeInfo: '.MaterialRequirementType'
            }, {
                name: 'materialProducedRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialProducedRequirement',
                typeInfo: '.MaterialProducedRequirementType'
            }, {
                name: 'materialConsumedRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialConsumedRequirement',
                typeInfo: '.MaterialConsumedRequirementType'
            }, {
                name: 'consumableExpectedRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'ConsumableExpectedRequirement',
                typeInfo: '.ConsumableExpectedRequirementType'
            }, {
                name: 'segmentRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'SegmentRequirement',
                typeInfo: '.SegmentRequirementType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }, {
                name: 'segmentState',
                elementName: 'SegmentState',
                typeInfo: '.RequestStateType'
            }]
        }, {
            localName: 'ProcessWorkScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessWorkScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ShowProductionScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'productionSchedule',
                required: true,
                collection: true,
                elementName: 'ProductionSchedule',
                typeInfo: '.ProductionScheduleType'
            }]
        }, {
            localName: 'RequestedCompletionDateType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'WorkflowSpecificationConnectionType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'connectionType',
                required: true,
                elementName: 'ConnectionType',
                typeInfo: '.IdentifierType'
            }, {
                name: 'fromNodeID',
                minOccurs: 0,
                collection: true,
                elementName: 'FromNodeID',
                typeInfo: '.DescriptionType'
            }, {
                name: 'toNodeID',
                minOccurs: 0,
                collection: true,
                elementName: 'ToNodeID',
                typeInfo: '.DescriptionType'
            }, {
                name: 'property',
                minOccurs: 0,
                collection: true,
                elementName: 'Property',
                typeInfo: '.WorkflowSpecificationPropertyType'
            }]
        }, {
            localName: 'ProcessOperationsScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'operationsSchedule',
                required: true,
                collection: true,
                elementName: 'OperationsSchedule',
                typeInfo: '.OperationsScheduleType'
            }]
        }, {
            localName: 'ProductionPerformanceType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'publishedDate',
                elementName: 'PublishedDate',
                typeInfo: '.PublishedDateType'
            }, {
                name: 'productionScheduleID',
                elementName: 'ProductionScheduleID',
                typeInfo: '.ProductionScheduleIDType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'equipmentElementLevel',
                elementName: 'EquipmentElementLevel',
                typeInfo: '.EquipmentElementLevelType'
            }, {
                name: 'productionResponse',
                minOccurs: 0,
                collection: true,
                elementName: 'ProductionResponse',
                typeInfo: '.ProductionResponseType'
            }, {
                name: 'performanceState',
                elementName: 'PerformanceState',
                typeInfo: '.ResponseStateType'
            }]
        }, {
            localName: 'WorkDirectivesType',
            propertyInfos: [{
                name: 'workDirectiverRecord',
                minOccurs: 0,
                collection: true,
                elementName: 'WorkDirectiverRecord',
                typeInfo: '.WorkDirectiveRecordType'
            }]
        }, {
            localName: 'TextType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'TextType'
            },
            propertyInfos: [{
                name: 'value',
                type: 'value'
            }, {
                name: 'languageID',
                typeInfo: 'Language',
                attributeName: {
                    localPart: 'languageID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'EnumerationSetIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'AcknowledgeJobListType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeJobListType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'NumericType',
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Decimal',
                type: 'value'
            }, {
                name: 'format',
                attributeName: {
                    localPart: 'format'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'AcknowledgeProductDefinitionType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'productDefinition',
                required: true,
                collection: true,
                elementName: 'ProductDefinition',
                typeInfo: '.ProductDefinitionType'
            }]
        }, {
            localName: 'TransExpression1Type',
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Token',
                type: 'value'
            }]
        }, {
            localName: 'ChangeJobListType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeJobListType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'MaterialActualPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'EquipmentCapabilityTestSpecificationIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'WorkResponseType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'workType',
                elementName: 'WorkType',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'workRequestID',
                elementName: 'WorkRequestID',
                typeInfo: '.WorkRequestIDType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'responseState',
                elementName: 'ResponseState',
                typeInfo: '.ResponseStateType'
            }, {
                name: 'jobResponse',
                minOccurs: 0,
                collection: true,
                elementName: 'JobResponse',
                typeInfo: '.JobResponseType'
            }]
        }, {
            localName: 'OpPhysicalAssetActualPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'OpEquipmentActualPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'OpSegmentResponseType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'operationsType',
                elementName: 'OperationsType',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'processSegmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'ProcessSegmentID',
                typeInfo: '.ProcessSegmentIDType'
            }, {
                name: 'actualStartTime',
                elementName: 'ActualStartTime',
                typeInfo: '.ActualStartTimeType'
            }, {
                name: 'actualEndTime',
                elementName: 'ActualEndTime',
                typeInfo: '.ActualEndTimeType'
            }, {
                name: 'operationsDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'OperationsDefinitionID',
                typeInfo: '.OperationsDefinitionIDType'
            }, {
                name: 'segmentState',
                elementName: 'SegmentState',
                typeInfo: '.ResponseStateType'
            }, {
                name: 'segmentData',
                minOccurs: 0,
                collection: true,
                elementName: 'SegmentData',
                typeInfo: '.OpSegmentDataType'
            }, {
                name: 'personnelActual',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelActual',
                typeInfo: '.OpPersonnelActualType'
            }, {
                name: 'equipmentActual',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentActual',
                typeInfo: '.OpEquipmentActualType'
            }, {
                name: 'physicalAssetActual',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetActual',
                typeInfo: '.OpPhysicalAssetActualType'
            }, {
                name: 'materialActual',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialActual',
                typeInfo: '.OpMaterialActualType'
            }, {
                name: 'segmentResponse',
                minOccurs: 0,
                collection: true,
                elementName: 'SegmentResponse',
                typeInfo: '.OpSegmentResponseType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'RespondJobListType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondJobListType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'RespondOperationsScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'operationsSchedule',
                required: true,
                collection: true,
                elementName: 'OperationsSchedule',
                typeInfo: '.OperationsScheduleType'
            }]
        }, {
            localName: 'ProductionParameterType',
            propertyInfos: [{
                name: 'productSegmentID',
                elementName: 'ProductSegmentID',
                typeInfo: '.ProductSegmentIDType'
            }, {
                name: 'processSegmentID',
                elementName: 'ProcessSegmentID',
                typeInfo: '.ProcessSegmentIDType'
            }, {
                name: 'parameter',
                elementName: 'Parameter',
                typeInfo: '.ParameterType'
            }]
        }, {
            localName: 'ProcessBatchProductionRecordType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'batchProductionRecord',
                required: true,
                collection: true,
                elementName: 'BatchProductionRecord',
                typeInfo: '.BatchProductionRecordType'
            }]
        }, {
            localName: 'CancelProductDefinitionType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'productDefinition',
                required: true,
                collection: true,
                elementName: 'ProductDefinition',
                typeInfo: '.ProductDefinitionType'
            }]
        }, {
            localName: 'FormulaType',
            propertyInfos: [{
                name: 'parameter',
                minOccurs: 0,
                collection: true,
                elementName: 'Parameter',
                typeInfo: '.BatchParameterType'
            }]
        }, {
            localName: 'BuildingBlockElementVersionType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'DelimitedDataBlockType',
            propertyInfos: [{
                name: 'tagDelimiter',
                required: true,
                elementName: 'TagDelimiter'
            }, {
                name: 'orderDelimiter',
                required: true,
                elementName: 'OrderDelimiter'
            }, {
                name: 'delimitedData',
                required: true,
                elementName: 'DelimitedData'
            }]
        }, {
            localName: 'MasterRecipeRecordType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'masterRecipe',
                required: true,
                elementName: 'MasterRecipe',
                typeInfo: '.MasterRecipeType'
            }]
        }, {
            localName: 'BillOfMaterialIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'WorkflowSpecificationTypeType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'version',
                elementName: 'Version',
                typeInfo: '.VersionType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'nodeType',
                minOccurs: 0,
                collection: true,
                elementName: 'NodeType',
                typeInfo: '.WorkflowSpecificationNodeTypeType'
            }, {
                name: 'connectionType',
                minOccurs: 0,
                collection: true,
                elementName: 'ConnectionType',
                typeInfo: '.WorkflowSpecificationConnectionTypeType'
            }]
        }, {
            localName: 'ProcessJobListType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessJobListType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ControlRecipesType',
            propertyInfos: [{
                name: 'controlRecipeRecord',
                minOccurs: 0,
                collection: true,
                elementName: 'ControlRecipeRecord',
                typeInfo: '.ControlRecipeRecordType'
            }]
        }, {
            localName: 'CancelWorkflowSpecificationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'workflowSpecification',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecification',
                typeInfo: '.WorkflowSpecificationType'
            }]
        }, {
            localName: 'ToTypeType',
            baseTypeInfo: '.ToType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'EnumerationStringType',
            baseTypeInfo: '.TextType'
        }, {
            localName: 'MaterialConsumedRequirementPropertyType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'RespondWorkflowSpecificationTypeType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondWorkflowSpecificationTypeType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'RelationshipType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'JobOrderDispatchStatusType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'GetWorkScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetWorkScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'RelationshipTypeType',
            baseTypeInfo: '.RelationshipType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'AcknowledgeOperationsDefinitionType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'operationsDefinition',
                required: true,
                collection: true,
                elementName: 'OperationsDefinition',
                typeInfo: '.OperationsDefinitionType'
            }]
        }, {
            localName: 'AcknowledgeWorkDefinitionInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'workDefinitionInformation',
                required: true,
                collection: true,
                elementName: 'WorkDefinitionInformation',
                typeInfo: '.WorkDefinitionInformationType'
            }]
        }, {
            localName: 'TestResultType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'testDateTime',
                elementName: 'TestDateTime',
                typeInfo: '.TestDateTimeType'
            }, {
                name: 'result',
                minOccurs: 0,
                collection: true,
                elementName: 'Result',
                typeInfo: '.ResultType'
            }, {
                name: 'expirationTime',
                elementName: 'ExpirationTime',
                typeInfo: '.ExpirationTimeType'
            }]
        }, {
            localName: 'AcknowledgeWorkflowSpecificationTypeType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'workflowSpecificationType',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecificationType',
                typeInfo: '.WorkflowSpecificationTypeType'
            }]
        }, {
            localName: 'CorrectionType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'SyncWorkPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'workPerformance',
                required: true,
                collection: true,
                elementName: 'WorkPerformance',
                typeInfo: '.WorkPerformanceType'
            }]
        }, {
            localName: 'ChangeWorkScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeWorkScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'EquipmentProceduralElementTypeType',
            baseTypeInfo: '.EquipmentProceduralElementType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'AcknowledgeOperationsPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeOperationsPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'FromEquipmentIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'CancelJobResponseType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelJobResponseType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'PersonnelActualType',
            propertyInfos: [{
                name: 'personnelClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelClassID',
                typeInfo: '.PersonnelClassIDType'
            }, {
                name: 'personID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonID',
                typeInfo: '.PersonIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'personnelActualProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelActualProperty',
                typeInfo: '.PersonnelActualPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'ShowWorkPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowWorkPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'GetProductDefinitionType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'productDefinition',
                required: true,
                collection: true,
                elementName: 'ProductDefinition',
                typeInfo: '.ProductDefinitionType'
            }]
        }, {
            localName: 'BatchEquipmentClassIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'RespondOperationsPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'operationsPerformance',
                required: true,
                collection: true,
                elementName: 'OperationsPerformance',
                typeInfo: '.OperationsPerformanceType'
            }]
        }, {
            localName: 'FromIDType',
            propertyInfos: [{
                name: 'fromIDValue',
                required: true,
                elementName: 'FromIDValue'
            }, {
                name: 'fromType',
                required: true,
                elementName: 'FromType',
                typeInfo: '.FromTypeType'
            }, {
                name: 'idScope',
                required: true,
                elementName: 'IDScope',
                typeInfo: '.IDScopeType'
            }]
        }, {
            localName: 'NominalType',
            baseTypeInfo: '.MeasureType'
        }, {
            localName: 'BinaryObjectType',
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Base64Binary',
                type: 'value'
            }, {
                name: 'format',
                attributeName: {
                    localPart: 'format'
                },
                type: 'attribute'
            }, {
                name: 'mimeCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'mimeCode'
                },
                type: 'attribute'
            }, {
                name: 'encodingCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'encodingCode'
                },
                type: 'attribute'
            }, {
                name: 'characterSetCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'characterSetCode'
                },
                type: 'attribute'
            }, {
                name: 'uri',
                attributeName: {
                    localPart: 'uri'
                },
                type: 'attribute'
            }, {
                name: 'filename',
                attributeName: {
                    localPart: 'filename'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'RespondProductionScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondProductionScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'BatchSizeType',
            propertyInfos: [{
                name: 'nominal',
                elementName: 'Nominal',
                typeInfo: '.NominalType'
            }, {
                name: 'min',
                elementName: 'Min',
                typeInfo: '.MinType'
            }, {
                name: 'max',
                elementName: 'Max',
                typeInfo: '.MaxType'
            }, {
                name: 'scaleReference',
                elementName: 'ScaleReference',
                typeInfo: '.ScaleReferenceType'
            }, {
                name: 'scaledSize',
                elementName: 'ScaledSize',
                typeInfo: '.ScaledSizeType'
            }, {
                name: 'unitOfMeasure',
                elementName: 'UnitOfMeasure',
                typeInfo: '.UnitOfMeasureType'
            }]
        }, {
            localName: 'LinkTypeType',
            baseTypeInfo: '.LinkType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'LotIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'SyncOperationsDefinitionInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'operationsDefinitionInformation',
                required: true,
                collection: true,
                elementName: 'OperationsDefinitionInformation',
                typeInfo: '.OperationsDefinitionInformationType'
            }]
        }, {
            localName: 'RequiredByRequestedSegmentResponse1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'PhysicalAssetActualIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'CancelWorkflowSpecificationInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelWorkflowSpecificationInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'SyncWorkflowSpecificationInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'workflowSpecificationInformation',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecificationInformation',
                typeInfo: '.WorkflowSpecificationInformationType'
            }]
        }, {
            localName: 'CancelOperationsDefinitionInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelOperationsDefinitionInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ShowWorkflowSpecificationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowWorkflowSpecificationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ProcessOperationsPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessOperationsPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'JobResponseType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'workType',
                elementName: 'WorkType',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'jobOrderID',
                elementName: 'JobOrderID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'workDirectiveID',
                elementName: 'WorkDirectiveID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'workDirectiveVersion',
                elementName: 'WorkDirectiveVersion',
                typeInfo: '.VersionType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.ActualStartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.ActualEndTimeType'
            }, {
                name: 'jobState',
                elementName: 'JobState',
                typeInfo: '.ResponseStateType'
            }, {
                name: 'jobResponsetData',
                minOccurs: 0,
                collection: true,
                elementName: 'JobResponsetData',
                typeInfo: '.OpSegmentDataType'
            }, {
                name: 'personnelActual',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelActual',
                typeInfo: '.OpPersonnelActualType'
            }, {
                name: 'equipmentActual',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentActual',
                typeInfo: '.OpEquipmentActualType'
            }, {
                name: 'physicalAssetActual',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetActual',
                typeInfo: '.OpPhysicalAssetActualType'
            }, {
                name: 'materialActual',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialActual',
                typeInfo: '.OpMaterialActualType'
            }, {
                name: 'jobResponse',
                minOccurs: 0,
                collection: true,
                elementName: 'JobResponse',
                typeInfo: '.JobResponseType'
            }]
        }, {
            localName: 'LinkType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'EquipmentElementLevel1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'TransAcknowledgeType',
            propertyInfos: [{
                name: 'originalApplicationArea',
                elementName: 'OriginalApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'responseCriteria',
                minOccurs: 0,
                collection: true,
                elementName: 'ResponseCriteria',
                typeInfo: '.TransResponseCriteriaType'
            }]
        }, {
            localName: 'OpEquipmentRequirementPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'MaterialConsumedRequirementType',
            propertyInfos: [{
                name: 'materialClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialClassID',
                typeInfo: '.MaterialClassIDType'
            }, {
                name: 'materialDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialDefinitionID',
                typeInfo: '.MaterialDefinitionIDType'
            }, {
                name: 'materialLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialLotID',
                typeInfo: '.MaterialLotIDType'
            }, {
                name: 'materialSubLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSubLotID',
                typeInfo: '.MaterialSubLotIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'materialConsumedRequirementProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialConsumedRequirementProperty',
                typeInfo: '.MaterialConsumedRequirementPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'WorkDirectiveType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'version',
                elementName: 'Version',
                typeInfo: '.VersionType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'workType',
                elementName: 'WorkType',
                typeInfo: '.WorkTypeType'
            }, {
                name: 'duration',
                elementName: 'Duration',
                typeInfo: 'Duration'
            }, {
                name: 'publishedDate',
                elementName: 'PublishedDate',
                typeInfo: '.PublishedDateType'
            }, {
                name: 'operationsDefinitionID',
                elementName: 'OperationsDefinitionID',
                typeInfo: '.OperationsDefinitionIDType'
            }, {
                name: 'parameter',
                minOccurs: 0,
                collection: true,
                elementName: 'Parameter',
                typeInfo: '.ParameterType'
            }, {
                name: 'personnelSpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelSpecification',
                typeInfo: '.OpPersonnelSpecificationType'
            }, {
                name: 'equipmentSpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentSpecification',
                typeInfo: '.OpEquipmentSpecificationType'
            }, {
                name: 'physicalAssetSpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetSpecification',
                typeInfo: '.OpPhysicalAssetSpecificationType'
            }, {
                name: 'materialSpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSpecification',
                typeInfo: '.OpMaterialSpecificationType'
            }, {
                name: 'workflowSpecification',
                minOccurs: 0,
                collection: true,
                elementName: 'WorkflowSpecification',
                typeInfo: '.WorkflowSpecificationType'
            }, {
                name: 'workMasterID',
                elementName: 'WorkMasterID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'workDirective',
                minOccurs: 0,
                collection: true,
                elementName: 'WorkDirective',
                typeInfo: '.WorkDirectiveType'
            }]
        }, {
            localName: 'ChangeProductDefinitionType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'productDefinition',
                required: true,
                collection: true,
                elementName: 'ProductDefinition',
                typeInfo: '.ProductDefinitionType'
            }]
        }, {
            localName: 'ActualEquipmentIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'MeasureType',
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Decimal',
                type: 'value'
            }, {
                name: 'unitCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCode'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCodeListVersionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'PersonnelRequirementType',
            propertyInfos: [{
                name: 'personnelClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelClassID',
                typeInfo: '.PersonnelClassIDType'
            }, {
                name: 'personID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonID',
                typeInfo: '.PersonIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'personnelRequirementProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelRequirementProperty',
                typeInfo: '.PersonnelRequirementPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'ProcessWorkMasterType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessWorkMasterType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'PublishedDateType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'CancelOperationsScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelOperationsScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OpSegmentRequirementType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'operationsType',
                elementName: 'OperationsType',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'processSegmentID',
                elementName: 'ProcessSegmentID',
                typeInfo: '.ProcessSegmentIDType'
            }, {
                name: 'earliestStartTime',
                elementName: 'EarliestStartTime',
                typeInfo: '.EarliestStartTimeType'
            }, {
                name: 'latestEndTime',
                elementName: 'LatestEndTime',
                typeInfo: '.LatestEndTimeType'
            }, {
                name: 'duration',
                elementName: 'Duration',
                typeInfo: 'Duration'
            }, {
                name: 'operationsDefinitionID',
                elementName: 'OperationsDefinitionID',
                typeInfo: '.OperationsDefinitionIDType'
            }, {
                name: 'segmentState',
                elementName: 'SegmentState',
                typeInfo: '.RequestStateType'
            }, {
                name: 'segmentParameter',
                minOccurs: 0,
                collection: true,
                elementName: 'SegmentParameter',
                typeInfo: '.ParameterType'
            }, {
                name: 'personnelRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelRequirement',
                typeInfo: '.OpPersonnelRequirementType'
            }, {
                name: 'equipmentRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentRequirement',
                typeInfo: '.OpEquipmentRequirementType'
            }, {
                name: 'physicalAssetRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetRequirement',
                typeInfo: '.OpPhysicalAssetRequirementType'
            }, {
                name: 'materialRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialRequirement',
                typeInfo: '.OpMaterialRequirementType'
            }, {
                name: 'segmentRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'SegmentRequirement',
                typeInfo: '.OpSegmentRequirementType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'MaxType',
            baseTypeInfo: '.MeasureType'
        }, {
            localName: 'ProcessWorkDirectiveType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessWorkDirectiveType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OpMaterialCapabilityPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'materialUse',
                elementName: 'MaterialUse',
                typeInfo: '.MaterialUseType'
            }]
        }, {
            localName: 'WorkflowSpecificationConnectionTypeType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'property',
                minOccurs: 0,
                collection: true,
                elementName: 'Property',
                typeInfo: '.WorkflowSpecificationPropertyType'
            }]
        }, {
            localName: 'ProcessWorkPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessWorkPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'RespondWorkPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'respond',
                required: true,
                elementName: 'Respond',
                typeInfo: '.TransRespondType'
            }, {
                name: 'workPerformance',
                required: true,
                collection: true,
                elementName: 'WorkPerformance',
                typeInfo: '.WorkPerformanceType'
            }]
        }, {
            localName: 'ProcessOperationsScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessOperationsScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ShowJobListType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowJobListType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'WorkTypeType',
            baseTypeInfo: '.WorkType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'CancelBatchProductionRecordType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'batchProductionRecord',
                required: true,
                collection: true,
                elementName: 'BatchProductionRecord',
                typeInfo: '.BatchProductionRecordType'
            }]
        }, {
            localName: 'OtherInformationType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IDType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.BatchValueType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }]
        }, {
            localName: 'CancelProductInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'productInformation',
                required: true,
                collection: true,
                elementName: 'ProductInformation',
                typeInfo: '.ProductInformationType'
            }]
        }, {
            localName: 'OriginType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'EquipmentActualType',
            propertyInfos: [{
                name: 'equipmentClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentClassID',
                typeInfo: '.EquipmentClassIDType'
            }, {
                name: 'equipmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentID',
                typeInfo: '.EquipmentIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'equipmentActualProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentActualProperty',
                typeInfo: '.EquipmentActualPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'SyncProductionPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncProductionPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'WorkflowSpecificationType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'version',
                elementName: 'Version',
                typeInfo: '.VersionType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'node',
                minOccurs: 0,
                collection: true,
                elementName: 'Node',
                typeInfo: '.WorkflowSpecificationNodeType'
            }, {
                name: 'connection',
                minOccurs: 0,
                collection: true,
                elementName: 'Connection',
                typeInfo: '.WorkflowSpecificationConnectionType'
            }]
        }, {
            localName: 'QuantityValueType',
            propertyInfos: [{
                name: 'quantityString',
                required: true,
                elementName: 'QuantityString',
                typeInfo: '.QuantityStringType'
            }, {
                name: 'dataType',
                mixed: false,
                allowDom: false,
                elementName: 'DataType',
                typeInfo: '.DataTypeType',
                type: 'elementRef'
            }, {
                name: 'unitOfMeasure',
                mixed: false,
                allowDom: false,
                elementName: 'UnitOfMeasure',
                typeInfo: '.UnitOfMeasureType',
                type: 'elementRef'
            }, {
                name: 'key',
                elementName: 'Key',
                typeInfo: '.IdentifierType'
            }]
        }, {
            localName: 'ParameterSubTypeType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ShowOperationsPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'operationsPerformance',
                required: true,
                collection: true,
                elementName: 'OperationsPerformance',
                typeInfo: '.OperationsPerformanceType'
            }]
        }, {
            localName: 'JobOrderType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'workType',
                elementName: 'WorkType',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'workMasterID',
                elementName: 'WorkMasterID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'workMasterVersion',
                elementName: 'WorkMasterVersion',
                typeInfo: '.VersionType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'priority',
                elementName: 'Priority',
                typeInfo: '.PriorityType'
            }, {
                name: 'command',
                elementName: 'Command',
                typeInfo: '.JobOrderCommandType'
            }, {
                name: 'commandRule',
                elementName: 'CommandRule',
                typeInfo: '.JobOrderCommandRuleType'
            }, {
                name: 'dispatchStatus',
                elementName: 'DispatchStatus',
                typeInfo: '.JobOrderDispatchStatusType'
            }, {
                name: 'jobOrderParameter',
                minOccurs: 0,
                collection: true,
                elementName: 'JobOrderParameter',
                typeInfo: '.ParameterType'
            }, {
                name: 'personnelRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelRequirement',
                typeInfo: '.OpPersonnelRequirementType'
            }, {
                name: 'equipmentRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentRequirement',
                typeInfo: '.OpEquipmentRequirementType'
            }, {
                name: 'physicalAssetRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetRequirement',
                typeInfo: '.OpPhysicalAssetRequirementType'
            }, {
                name: 'materialRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialRequirement',
                typeInfo: '.OpMaterialRequirementType'
            }]
        }, {
            localName: 'WorkScheduleType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'workType',
                elementName: 'WorkType',
                typeInfo: '.OperationsTypeType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'scheduleState',
                elementName: 'ScheduleState',
                typeInfo: '.RequestStateType'
            }, {
                name: 'publishedDate',
                elementName: 'PublishedDate',
                typeInfo: '.PublishedDateType'
            }, {
                name: 'workSchedule',
                minOccurs: 0,
                collection: true,
                elementName: 'WorkSchedule',
                typeInfo: '.WorkScheduleType'
            }, {
                name: 'workRequest',
                minOccurs: 0,
                collection: true,
                elementName: 'WorkRequest',
                typeInfo: '.WorkRequestType'
            }]
        }, {
            localName: 'SegmentResponseType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'processSegmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'ProcessSegmentID',
                typeInfo: '.ProcessSegmentIDType'
            }, {
                name: 'productSegmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'ProductSegmentID',
                typeInfo: '.ProductSegmentIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'actualStartTime',
                elementName: 'ActualStartTime',
                typeInfo: '.ActualStartTimeType'
            }, {
                name: 'actualEndTime',
                elementName: 'ActualEndTime',
                typeInfo: '.ActualEndTimeType'
            }, {
                name: 'productionData',
                minOccurs: 0,
                collection: true,
                elementName: 'ProductionData',
                typeInfo: '.ProductionDataType'
            }, {
                name: 'personnelActual',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelActual',
                typeInfo: '.PersonnelActualType'
            }, {
                name: 'equipmentActual',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentActual',
                typeInfo: '.EquipmentActualType'
            }, {
                name: 'physicalAssetActual',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetActual',
                typeInfo: '.PhysicalAssetActualType'
            }, {
                name: 'materialActual',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialActual',
                typeInfo: '.MaterialActualType'
            }, {
                name: 'materialProducedActual',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialProducedActual',
                typeInfo: '.MaterialProducedActualType'
            }, {
                name: 'materialConsumedActual',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialConsumedActual',
                typeInfo: '.MaterialConsumedActualType'
            }, {
                name: 'consumableActual',
                minOccurs: 0,
                collection: true,
                elementName: 'ConsumableActual',
                typeInfo: '.ConsumableActualType'
            }, {
                name: 'segmentResponse',
                minOccurs: 0,
                collection: true,
                elementName: 'SegmentResponse',
                typeInfo: '.SegmentResponseType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }, {
                name: 'segmentState',
                elementName: 'SegmentState',
                typeInfo: '.ResponseStateType'
            }]
        }, {
            localName: 'StatusTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'OpEquipmentCapabilityPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'AcknowledgeProductionScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'productionSchedule',
                required: true,
                collection: true,
                elementName: 'ProductionSchedule',
                typeInfo: '.ProductionScheduleType'
            }]
        }, {
            localName: 'RecipeBuildingBlockType',
            propertyInfos: [{
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'recipeElement',
                minOccurs: 0,
                collection: true,
                elementName: 'RecipeElement',
                typeInfo: '.RecipeElementType'
            }]
        }, {
            localName: 'AcknowledgeWorkScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'workSchedule',
                required: true,
                collection: true,
                elementName: 'WorkSchedule',
                typeInfo: '.WorkScheduleType'
            }]
        }, {
            localName: 'CancelWorkMasterType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'workMaster',
                required: true,
                collection: true,
                elementName: 'WorkMaster',
                typeInfo: '.WorkMasterType'
            }]
        }, {
            localName: 'Depiction1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'OpEquipmentSpecificationType',
            propertyInfos: [{
                name: 'equipmentClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentClassID',
                typeInfo: '.EquipmentClassIDType'
            }, {
                name: 'equipmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentID',
                typeInfo: '.EquipmentIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'equipmentUse',
                elementName: 'EquipmentUse',
                typeInfo: '.EquipmentUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'equipmentSpecificationProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentSpecificationProperty',
                typeInfo: '.OpEquipmentSpecificationPropertyType'
            }]
        }, {
            localName: 'ProcessProductionPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'productionPerformance',
                required: true,
                collection: true,
                elementName: 'ProductionPerformance',
                typeInfo: '.ProductionPerformanceType'
            }]
        }, {
            localName: 'AcknowledgeWorkDirectiveType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'acknowledge',
                required: true,
                elementName: 'Acknowledge',
                typeInfo: '.TransAcknowledgeType'
            }, {
                name: 'workDirective',
                required: true,
                collection: true,
                elementName: 'WorkDirective',
                typeInfo: '.WorkDirectiveType'
            }]
        }, {
            localName: 'WorkPerformancesType',
            propertyInfos: [{
                name: 'workPerformanceRecord',
                minOccurs: 0,
                collection: true,
                elementName: 'WorkPerformanceRecord',
                typeInfo: '.WorkPerformanceRecordType'
            }]
        }, {
            localName: 'RespondBatchProductionRecordType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondBatchProductionRecordType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'SingleEventType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'eventType',
                required: true,
                elementName: 'EventType',
                typeInfo: '.EventTypeType'
            }, {
                name: 'eventSubType',
                required: true,
                elementName: 'EventSubType',
                typeInfo: '.EventSubTypeType'
            }, {
                name: 'equipmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'previousValue',
                minOccurs: 0,
                collection: true,
                elementName: 'PreviousValue',
                typeInfo: '.ValueType'
            }, {
                name: 'messageText',
                minOccurs: 0,
                collection: true,
                elementName: 'MessageText',
                typeInfo: '.TextType'
            }, {
                name: 'personID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonID',
                typeInfo: '.NameType'
            }, {
                name: 'computerID',
                minOccurs: 0,
                collection: true,
                elementName: 'ComputerID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'physicalAssetID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'proceduralElementReference',
                minOccurs: 0,
                collection: true,
                elementName: 'ProceduralElementReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'category',
                minOccurs: 0,
                collection: true,
                elementName: 'Category',
                typeInfo: '.IdentifierType'
            }, {
                name: 'alarmData',
                minOccurs: 0,
                collection: true,
                elementName: 'AlarmData',
                typeInfo: '.AlarmDataType'
            }, {
                name: 'associatedEventID',
                minOccurs: 0,
                collection: true,
                elementName: 'AssociatedEventID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'userAttribute',
                minOccurs: 0,
                collection: true,
                elementName: 'UserAttribute',
                typeInfo: '.UserAttributeType'
            }]
        }, {
            localName: 'ModificationLogType',
            propertyInfos: [{
                name: 'modifiedDate',
                elementName: 'ModifiedDate',
                typeInfo: '.ModifiedDateType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'author',
                elementName: 'Author',
                typeInfo: '.AuthorType'
            }]
        }, {
            localName: 'ScheduleEndTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'CancelWorkMasterType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelWorkMasterType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'PersonnelIdentificationType',
            propertyInfos: [{
                name: 'personnelIdentificationManifest',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelIdentificationManifest',
                typeInfo: '.PersonnelIdentificationManifestType'
            }]
        }, {
            localName: 'ProcessOperationsDefinitionType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessOperationsDefinitionType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ShowWorkflowSpecificationInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'workflowSpecificationInformation',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecificationInformation',
                typeInfo: '.WorkflowSpecificationInformationType'
            }]
        }, {
            localName: 'SampleType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'sampleSourceID',
                elementName: 'SampleSourceID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'sampleSize',
                minOccurs: 0,
                collection: true,
                elementName: 'SampleSize',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'sampleType',
                minOccurs: 0,
                collection: true,
                elementName: 'SampleType',
                typeInfo: '.CodeType'
            }, {
                name: 'samplePullReason',
                minOccurs: 0,
                collection: true,
                elementName: 'SamplePullReason',
                typeInfo: '.TextType'
            }, {
                name: 'sampleExpiration',
                elementName: 'SampleExpiration',
                typeInfo: '.DateTimeType'
            }, {
                name: 'equipmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'physicalAssetID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'proceduralElementReference',
                minOccurs: 0,
                collection: true,
                elementName: 'ProceduralElementReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'sopReference',
                minOccurs: 0,
                collection: true,
                elementName: 'SOPReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'sampleTest',
                minOccurs: 0,
                collection: true,
                elementName: 'SampleTest',
                typeInfo: '.SampleTestType'
            }]
        }, {
            localName: 'AmountType',
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Decimal',
                type: 'value'
            }, {
                name: 'currencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'currencyID'
                },
                type: 'attribute'
            }, {
                name: 'currencyCodeListVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'currencyCodeListVersionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'WorkflowSpecificationPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'propertyType',
                elementName: 'PropertyType',
                typeInfo: '.IdentifierType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'property',
                minOccurs: 0,
                collection: true,
                elementName: 'Property',
                typeInfo: '.WorkflowSpecificationPropertyType'
            }]
        }, {
            localName: 'ProcessWorkflowSpecificationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessWorkflowSpecificationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'TransReceiverType',
            propertyInfos: [{
                name: 'logicalID',
                elementName: 'LogicalID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'componentID',
                elementName: 'ComponentID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'id',
                minOccurs: 0,
                collection: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }]
        }, {
            localName: 'SyncProductInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'productInformation',
                required: true,
                collection: true,
                elementName: 'ProductInformation',
                typeInfo: '.ProductInformationType'
            }]
        }, {
            localName: 'ProcessWorkflowSpecificationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'workflowSpecification',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecification',
                typeInfo: '.WorkflowSpecificationType'
            }]
        }, {
            localName: 'ChangeWorkflowSpecificationTypeType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'workflowSpecificationType',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecificationType',
                typeInfo: '.WorkflowSpecificationTypeType'
            }]
        }, {
            localName: 'ChangeWorkflowSpecificationInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'workflowSpecificationInformation',
                required: true,
                collection: true,
                elementName: 'WorkflowSpecificationInformation',
                typeInfo: '.WorkflowSpecificationInformationType'
            }]
        }, {
            localName: 'ProductIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'CancelProductionPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'productionPerformance',
                required: true,
                collection: true,
                elementName: 'ProductionPerformance',
                typeInfo: '.ProductionPerformanceType'
            }]
        }, {
            localName: 'ValueType',
            propertyInfos: [{
                name: 'valueString',
                required: true,
                elementName: 'ValueString',
                typeInfo: '.ValueStringType'
            }, {
                name: 'dataType',
                mixed: false,
                allowDom: false,
                elementName: 'DataType',
                typeInfo: '.DataTypeType',
                type: 'elementRef'
            }, {
                name: 'unitOfMeasure',
                mixed: false,
                allowDom: false,
                elementName: 'UnitOfMeasure',
                typeInfo: '.UnitOfMeasureType',
                type: 'elementRef'
            }, {
                name: 'key',
                elementName: 'Key',
                typeInfo: '.IdentifierType'
            }]
        }, {
            localName: 'ValueStringType',
            baseTypeInfo: '.AnyGenericValueType'
        }, {
            localName: 'EarliestStartTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'PhysicalAssetUseType',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'RespondWorkflowSpecificationInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondWorkflowSpecificationInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'AcknowledgeOperationsScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeOperationsScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ChangeProductionPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'productionPerformance',
                required: true,
                collection: true,
                elementName: 'ProductionPerformance',
                typeInfo: '.ProductionPerformanceType'
            }]
        }, {
            localName: 'LatestEndTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'RelationshipFormType',
            baseTypeInfo: '.RelationshipForm1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ShowProductInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowProductInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'CancelJobListType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'jobList',
                required: true,
                collection: true,
                elementName: 'JobList',
                typeInfo: '.JobListType'
            }]
        }, {
            localName: 'MaterialCapabilityIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ActualBatchSizeType',
            baseTypeInfo: '.NumericType'
        }, {
            localName: 'ChangeBatchProductionRecordType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'batchProductionRecord',
                required: true,
                collection: true,
                elementName: 'BatchProductionRecord',
                typeInfo: '.BatchProductionRecordType'
            }]
        }, {
            localName: 'GetProductionScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetProductionScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'CancelProductionScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelProductionScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OpPersonnelActualPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'BatchEquipmentIDType',
            propertyInfos: [{
                name: 'property',
                elementName: 'Property',
                typeInfo: '.EquipmentElementPropertyType'
            }, {
                name: 'condition',
                elementName: 'Condition',
                typeInfo: '.ConditionType'
            }, {
                name: 'value',
                elementName: 'Value',
                typeInfo: '.BatchValueType'
            }]
        }, {
            localName: 'ChangeProductionPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeProductionPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ProcessJobResponseType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessJobResponseType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OperationsDefinitionInformationType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'publishedDate',
                elementName: 'PublishedDate',
                typeInfo: '.PublishedDateType'
            }, {
                name: 'operationsDefinition',
                minOccurs: 0,
                collection: true,
                elementName: 'OperationsDefinition',
                typeInfo: '.OperationsDefinitionType'
            }]
        }, {
            localName: 'BatchListEntryTypeType',
            baseTypeInfo: '.BatchListEntryType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'SyncOperationsDefinitionType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'operationsDefinition',
                required: true,
                collection: true,
                elementName: 'OperationsDefinition',
                typeInfo: '.OperationsDefinitionType'
            }]
        }, {
            localName: 'MaterialSpecificationIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'SyncOperationsScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'operationsSchedule',
                required: true,
                collection: true,
                elementName: 'OperationsSchedule',
                typeInfo: '.OperationsScheduleType'
            }]
        }, {
            localName: 'ClassEquipmentIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'GetProductDefinitionType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.GetProductDefinitionType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'TransSignatureType',
            propertyInfos: [{
                name: 'any',
                minOccurs: 0,
                collection: true,
                allowDom: false,
                mixed: false,
                type: 'anyElement'
            }, {
                name: 'qualifyingAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'qualifyingAgencyID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'DataTypeType',
            baseTypeInfo: '.DataType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'BatchProductionRecordType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'equipmentScope',
                elementName: 'EquipmentScope',
                typeInfo: '.IdentifierType'
            }, {
                name: 'publishedDate',
                elementName: 'PublishedDate',
                typeInfo: '.DateTimeType'
            }, {
                name: 'creationDate',
                elementName: 'CreationDate',
                typeInfo: '.DateTimeType'
            }, {
                name: 'batchID',
                elementName: 'BatchID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'batchProductionRecordSpec',
                elementName: 'BatchProductionRecordSpec',
                typeInfo: '.IdentifierType'
            }, {
                name: 'campaignID',
                elementName: 'CampaignID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'changeIndication',
                elementName: 'ChangeIndication'
            }, {
                name: 'delimiter',
                elementName: 'Delimiter',
                typeInfo: '.TextType'
            }, {
                name: 'equipmentID',
                elementName: 'EquipmentID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'expirationDate',
                elementName: 'ExpirationDate',
                typeInfo: '.DateTimeType'
            }, {
                name: 'language',
                elementName: 'Language',
                typeInfo: '.CodeType'
            }, {
                name: 'lastChangedDate',
                elementName: 'LastChangedDate',
                typeInfo: '.DateTimeType'
            }, {
                name: 'lotID',
                elementName: 'LotID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'materialDefinitionID',
                elementName: 'MaterialDefinitionID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'physicalAssetID',
                elementName: 'PhysicalAssetID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'recordStatus',
                elementName: 'RecordStatus',
                typeInfo: '.CodeType'
            }, {
                name: 'version',
                elementName: 'Version',
                typeInfo: '.IdentifierType'
            }, {
                name: 'changeHistory',
                elementName: 'ChangeHistory',
                typeInfo: '.ChangeHistoryType'
            }, {
                name: 'comments',
                elementName: 'Comments',
                typeInfo: '.CommentsType'
            }, {
                name: 'controlRecipes',
                elementName: 'ControlRecipes',
                typeInfo: '.ControlRecipesType'
            }, {
                name: 'dataSets',
                elementName: 'DataSets',
                typeInfo: '.DataSetsType'
            }, {
                name: 'events',
                elementName: 'Events',
                typeInfo: '.EventsType'
            }, {
                name: 'masterRecipes',
                elementName: 'MasterRecipes',
                typeInfo: '.MasterRecipesType'
            }, {
                name: 'personnelIdentification',
                elementName: 'PersonnelIdentification',
                typeInfo: '.PersonnelIdentificationType'
            }, {
                name: 'operationsDefinitions',
                elementName: 'OperationsDefinitions',
                typeInfo: '.OperationsDefinitionsType'
            }, {
                name: 'operationsPerformances',
                elementName: 'OperationsPerformances',
                typeInfo: '.OperationsPerformancesType'
            }, {
                name: 'operationsSchedules',
                elementName: 'OperationsSchedules',
                typeInfo: '.OperationsSchedulesType'
            }, {
                name: 'productDefinitions',
                elementName: 'ProductDefinitions',
                typeInfo: '.ProductDefinitionsType'
            }, {
                name: 'productionPerformances',
                elementName: 'ProductionPerformances',
                typeInfo: '.ProductionPerformancesType'
            }, {
                name: 'productionSchedules',
                elementName: 'ProductionSchedules',
                typeInfo: '.ProductionSchedulesType'
            }, {
                name: 'recipeElements',
                elementName: 'RecipeElements',
                typeInfo: '.RecipeElementsType'
            }, {
                name: 'resourceQualifications',
                elementName: 'ResourceQualifications',
                typeInfo: '.ResourceQualificationsType'
            }, {
                name: 'samples',
                elementName: 'Samples',
                typeInfo: '.SamplesType'
            }, {
                name: 'workDirectives',
                elementName: 'WorkDirectives',
                typeInfo: '.WorkDirectivesType'
            }, {
                name: 'workMasters',
                elementName: 'WorkMasters',
                typeInfo: '.WorkMastersType'
            }, {
                name: 'workPerformances',
                elementName: 'WorkPerformances',
                typeInfo: '.WorkPerformancesType'
            }, {
                name: 'workSchedules',
                elementName: 'WorkSchedules',
                typeInfo: '.WorkSchedulesType'
            }, {
                name: 'batchProductionRecord',
                elementName: 'BatchProductionRecord',
                typeInfo: '.BatchProductionRecordType'
            }]
        }, {
            localName: 'ProcessProductionScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'process',
                required: true,
                elementName: 'Process',
                typeInfo: '.TransProcessType'
            }, {
                name: 'productionSchedule',
                required: true,
                collection: true,
                elementName: 'ProductionSchedule',
                typeInfo: '.ProductionScheduleType'
            }]
        }, {
            localName: 'AssemblyRelationshipType',
            baseTypeInfo: '.AssemblyRelationship1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'CancelProductDefinitionType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelProductDefinitionType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ProcessProductionScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ProcessProductionScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'DataSetType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'trendSystemReference',
                elementName: 'TrendSystemReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.DateTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.DateTimeType'
            }, {
                name: 'timeSpecification',
                elementName: 'TimeSpecification',
                typeInfo: '.TimeSpecificationType'
            }, {
                name: 'tagSpecification',
                required: true,
                collection: true,
                elementName: 'TagSpecification',
                typeInfo: '.TagSpecificationType'
            }, {
                name: 'delimitedDataBlock',
                required: true,
                elementName: 'DelimitedDataBlock',
                typeInfo: '.DelimitedDataBlockType'
            }, {
                name: 'orderedData',
                required: true,
                collection: true,
                elementName: 'OrderedData',
                typeInfo: '.OrderedDataType'
            }]
        }, {
            localName: 'RequestedBatchSizeType',
            baseTypeInfo: '.MeasureType'
        }, {
            localName: 'HierarchyScopeType',
            propertyInfos: [{
                name: 'equipmentID',
                required: true,
                elementName: 'EquipmentID',
                typeInfo: '.EquipmentIDType'
            }, {
                name: 'equipmentElementLevel',
                required: true,
                elementName: 'EquipmentElementLevel',
                typeInfo: '.EquipmentElementLevelType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }]
        }, {
            localName: 'OpMaterialSpecificationPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'WorkRequestIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'PhysicalAssetSpecificationPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'EquipmentProceduralElementClassIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'WorkSchedulesType',
            propertyInfos: [{
                name: 'workScheduleRecord',
                minOccurs: 0,
                collection: true,
                elementName: 'WorkScheduleRecord',
                typeInfo: '.WorkScheduleRecordType'
            }]
        }, {
            localName: 'ListHeaderType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IDType'
            }, {
                name: 'version',
                elementName: 'Version',
                typeInfo: '.VersionType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'origin',
                elementName: 'Origin',
                typeInfo: '.OriginType'
            }, {
                name: 'createDate',
                elementName: 'CreateDate',
                typeInfo: '.CreateDateType'
            }, {
                name: 'modificationLog',
                minOccurs: 0,
                collection: true,
                elementName: 'ModificationLog',
                typeInfo: '.ModificationLogType'
            }]
        }, {
            localName: 'CancelProductInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelProductInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'SyncWorkDirectiveType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.SyncWorkDirectiveType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'DataInterpretationType',
            baseTypeInfo: '.DataInterpretation1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'EventTypeType',
            baseTypeInfo: '.EventType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'TransApplicationAreaType',
            propertyInfos: [{
                name: 'sender',
                elementName: 'Sender',
                typeInfo: '.TransSenderType'
            }, {
                name: 'receiver',
                minOccurs: 0,
                collection: true,
                elementName: 'Receiver',
                typeInfo: '.TransReceiverType'
            }, {
                name: 'creationDateTime',
                required: true,
                elementName: 'CreationDateTime',
                typeInfo: '.DateTimeType'
            }, {
                name: 'signature',
                elementName: 'Signature',
                typeInfo: '.TransSignatureType'
            }, {
                name: 'bodid',
                elementName: 'BODID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'userArea',
                elementName: 'UserArea',
                typeInfo: '.TransUserAreaType'
            }]
        }, {
            localName: 'ProcedureLogicType',
            propertyInfos: [{
                name: 'link',
                minOccurs: 0,
                collection: true,
                elementName: 'Link',
                typeInfo: '.LinkType'
            }, {
                name: 'step',
                minOccurs: 0,
                collection: true,
                elementName: 'Step',
                typeInfo: '.StepType'
            }, {
                name: 'transition',
                minOccurs: 0,
                collection: true,
                elementName: 'Transition',
                typeInfo: '.TransitionType'
            }]
        }, {
            localName: 'ChangeWorkflowSpecificationInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ChangeWorkflowSpecificationInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ConsumableActualType',
            propertyInfos: [{
                name: 'materialClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialClassID',
                typeInfo: '.MaterialClassIDType'
            }, {
                name: 'materialDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialDefinitionID',
                typeInfo: '.MaterialDefinitionIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'consumableActualProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'ConsumableActualProperty',
                typeInfo: '.ConsumableActualPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'MeasureType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'MeasureType'
            },
            propertyInfos: [{
                name: 'value',
                typeInfo: 'Decimal',
                type: 'value'
            }, {
                name: 'unitCode',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCode'
                },
                type: 'attribute'
            }, {
                name: 'unitCodeListVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'unitCodeListVersionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ConstraintType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IDType'
            }, {
                name: 'condition',
                elementName: 'Condition',
                typeInfo: '.ConditionType'
            }]
        }, {
            localName: 'EquipmentElementLevelType',
            baseTypeInfo: '.EquipmentElementLevel1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'PhysicalAssetIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'OperationsScheduleIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'ProductProductionRuleType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'SyncProductDefinitionType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'productDefinition',
                required: true,
                collection: true,
                elementName: 'ProductDefinition',
                typeInfo: '.ProductDefinitionType'
            }]
        }, {
            localName: 'AcknowledgeWorkflowSpecificationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeWorkflowSpecificationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ShowWorkDirectiveType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'workDirective',
                required: true,
                collection: true,
                elementName: 'WorkDirective',
                typeInfo: '.WorkDirectiveType'
            }]
        }, {
            localName: 'ConditionAnnotationType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'SamplesType',
            propertyInfos: [{
                name: 'sample',
                minOccurs: 0,
                collection: true,
                elementName: 'Sample',
                typeInfo: '.SampleType'
            }]
        }, {
            localName: 'AcknowledgeOperationsDefinitionType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeOperationsDefinitionType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ShowWorkScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowWorkScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ChangeJobResponseType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'jobResponse',
                required: true,
                collection: true,
                elementName: 'JobResponse',
                typeInfo: '.JobResponseType'
            }]
        }, {
            localName: 'IdentifierType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'IdentifierType'
            },
            propertyInfos: [{
                name: 'value',
                typeInfo: 'NormalizedString',
                type: 'value'
            }, {
                name: 'schemeID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'schemeID'
                },
                type: 'attribute'
            }, {
                name: 'schemeName',
                attributeName: {
                    localPart: 'schemeName'
                },
                type: 'attribute'
            }, {
                name: 'schemeAgencyID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'schemeAgencyID'
                },
                type: 'attribute'
            }, {
                name: 'schemeAgencyName',
                attributeName: {
                    localPart: 'schemeAgencyName'
                },
                type: 'attribute'
            }, {
                name: 'schemeVersionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'schemeVersionID'
                },
                type: 'attribute'
            }, {
                name: 'schemeDataURI',
                attributeName: {
                    localPart: 'schemeDataURI'
                },
                type: 'attribute'
            }, {
                name: 'schemeURI',
                attributeName: {
                    localPart: 'schemeURI'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'CampaignIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'MaterialRequirementPropertyType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'ToType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'DateTimeType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'DateTimeType'
            },
            propertyInfos: [{
                name: 'value',
                typeInfo: 'DateTime',
                type: 'value'
            }, {
                name: 'format',
                attributeName: {
                    localPart: 'format'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'AssemblyTypeType',
            baseTypeInfo: '.AssemblyType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'RespondWorkDefinitionInformationType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondWorkDefinitionInformationType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'IndividualApprovalType',
            propertyInfos: [{
                name: 'approvedBy',
                elementName: 'ApprovedBy',
                typeInfo: '.ApprovedByType'
            }, {
                name: 'approvalDate',
                elementName: 'ApprovalDate',
                typeInfo: '.ApprovalDateType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }]
        }, {
            localName: 'MaterialSpecificationPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }]
        }, {
            localName: 'WorkMasterRecordType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'workMaster',
                required: true,
                elementName: 'WorkMaster',
                typeInfo: '.WorkMasterType'
            }]
        }, {
            localName: 'ScaledSizeType',
            baseTypeInfo: '.MeasureType'
        }, {
            localName: 'SyncOperationsPerformanceType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'sync',
                required: true,
                elementName: 'Sync',
                typeInfo: '.TransSyncType'
            }, {
                name: 'operationsPerformance',
                required: true,
                collection: true,
                elementName: 'OperationsPerformance',
                typeInfo: '.OperationsPerformanceType'
            }]
        }, {
            localName: 'MaterialActualType',
            propertyInfos: [{
                name: 'materialClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialClassID',
                typeInfo: '.MaterialClassIDType'
            }, {
                name: 'materialDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialDefinitionID',
                typeInfo: '.MaterialDefinitionIDType'
            }, {
                name: 'materialLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialLotID',
                typeInfo: '.MaterialLotIDType'
            }, {
                name: 'materialSubLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSubLotID',
                typeInfo: '.MaterialSubLotIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'materialUse',
                elementName: 'MaterialUse',
                typeInfo: '.MaterialUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'assemblyActual',
                minOccurs: 0,
                collection: true,
                elementName: 'AssemblyActual',
                typeInfo: '.MaterialActualType'
            }, {
                name: 'assemblyType',
                elementName: 'AssemblyType',
                typeInfo: '.AssemblyTypeType'
            }, {
                name: 'assemblyRelationship',
                elementName: 'AssemblyRelationship',
                typeInfo: '.AssemblyRelationshipType'
            }, {
                name: 'materialActualProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialActualProperty',
                typeInfo: '.MaterialActualPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'WorkMastersType',
            propertyInfos: [{
                name: 'workMasterRecord',
                minOccurs: 0,
                collection: true,
                elementName: 'WorkMasterRecord',
                typeInfo: '.WorkMasterRecordType'
            }]
        }, {
            localName: 'RecordObjectTypeType',
            baseTypeInfo: '.RecordObjectType1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'BatchInformationType',
            propertyInfos: [{
                name: 'listHeader',
                minOccurs: 0,
                collection: true,
                elementName: 'ListHeader',
                typeInfo: '.ListHeaderType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'masterRecipe',
                minOccurs: 0,
                collection: true,
                elementName: 'MasterRecipe',
                typeInfo: '.MasterRecipeType'
            }, {
                name: 'controlRecipe',
                minOccurs: 0,
                collection: true,
                elementName: 'ControlRecipe',
                typeInfo: '.ControlRecipeType'
            }, {
                name: 'recipeBuildingBlock',
                minOccurs: 0,
                collection: true,
                elementName: 'RecipeBuildingBlock',
                typeInfo: '.RecipeBuildingBlockType'
            }, {
                name: 'equipmentElement',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentElement',
                typeInfo: '.EquipmentElementType'
            }, {
                name: 'batchList',
                minOccurs: 0,
                collection: true,
                elementName: 'BatchList',
                typeInfo: '.BatchListType'
            }, {
                name: 'enumerationSet',
                minOccurs: 0,
                collection: true,
                elementName: 'EnumerationSet',
                typeInfo: '.EnumerationSetType'
            }]
        }, {
            localName: 'DataType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'NameType',
            typeName: {
                namespaceURI: 'http:\/\/www.mesa.org\/xml\/B2MML-V0600-AllExtensions',
                localPart: 'NameType'
            },
            propertyInfos: [{
                name: 'value',
                type: 'value'
            }, {
                name: 'languageID',
                typeInfo: 'Language',
                attributeName: {
                    localPart: 'languageID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'PhysicalAssetActualPropertyType',
            propertyInfos: [{
                name: 'id',
                required: true,
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'value',
                minOccurs: 0,
                collection: true,
                elementName: 'Value',
                typeInfo: '.ValueType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'AcknowledgeJobResponseType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeJobResponseType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ResourceIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'TransCancelType',
            propertyInfos: [{
                name: 'actionCriteria',
                minOccurs: 0,
                collection: true,
                elementName: 'ActionCriteria',
                typeInfo: '.TransActionCriteriaType'
            }]
        }, {
            localName: 'ProductionScheduleIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'GetBatchProductionRecordType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'get',
                required: true,
                elementName: 'Get',
                typeInfo: '.TransGetType'
            }, {
                name: 'batchProductionRecord',
                required: true,
                collection: true,
                elementName: 'BatchProductionRecord',
                typeInfo: '.BatchProductionRecordType'
            }]
        }, {
            localName: 'CancelOperationsPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.CancelOperationsPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ScaleReferenceType',
            baseTypeInfo: '.MeasureType'
        }, {
            localName: 'ChangeHistoryType',
            propertyInfos: [{
                name: 'change',
                minOccurs: 0,
                collection: true,
                elementName: 'Change',
                typeInfo: '.ChangeType'
            }]
        }, {
            localName: 'CommentType',
            propertyInfos: [{
                name: 'entryID',
                required: true,
                elementName: 'EntryID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'objectType',
                required: true,
                elementName: 'ObjectType',
                typeInfo: '.RecordObjectTypeType'
            }, {
                name: 'timeStamp',
                elementName: 'TimeStamp',
                typeInfo: '.DateTimeType'
            }, {
                name: 'externalReference',
                elementName: 'ExternalReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'recordReference',
                required: true,
                elementName: 'RecordReference',
                typeInfo: '.IdentifierType'
            }, {
                name: 'commentText',
                required: true,
                collection: true,
                elementName: 'CommentText',
                typeInfo: '.TextType'
            }, {
                name: 'personID',
                elementName: 'PersonID',
                typeInfo: '.NameType'
            }]
        }, {
            localName: 'ShowWorkDefinitionInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'show',
                required: true,
                elementName: 'Show',
                typeInfo: '.TransShowType'
            }, {
                name: 'workDefinitionInformation',
                required: true,
                collection: true,
                elementName: 'WorkDefinitionInformation',
                typeInfo: '.WorkDefinitionInformationType'
            }]
        }, {
            localName: 'FromType1Type',
            baseTypeInfo: '.CodeType'
        }, {
            localName: 'ChangeProductionScheduleType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'change',
                required: true,
                elementName: 'Change',
                typeInfo: '.TransChangeType'
            }, {
                name: 'productionSchedule',
                required: true,
                collection: true,
                elementName: 'ProductionSchedule',
                typeInfo: '.ProductionScheduleType'
            }]
        }, {
            localName: 'CancelJobResponseType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'jobResponse',
                required: true,
                collection: true,
                elementName: 'JobResponse',
                typeInfo: '.JobResponseType'
            }]
        }, {
            localName: 'CancelWorkDirectiveType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'workDirective',
                required: true,
                collection: true,
                elementName: 'WorkDirective',
                typeInfo: '.WorkDirectiveType'
            }]
        }, {
            localName: 'RespondWorkScheduleType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondWorkScheduleType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ResponseStateType',
            baseTypeInfo: '.ResponseState1Type',
            propertyInfos: [{
                name: 'otherValue',
                attributeName: {
                    localPart: 'OtherValue'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OpMaterialRequirementType',
            propertyInfos: [{
                name: 'materialClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialClassID',
                typeInfo: '.MaterialClassIDType'
            }, {
                name: 'materialDefinitionID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialDefinitionID',
                typeInfo: '.MaterialDefinitionIDType'
            }, {
                name: 'materialLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialLotID',
                typeInfo: '.MaterialLotIDType'
            }, {
                name: 'materialSubLotID',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialSubLotID',
                typeInfo: '.MaterialSubLotIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'materialUse',
                elementName: 'MaterialUse',
                typeInfo: '.MaterialUseType'
            }, {
                name: 'storageLocation',
                elementName: 'StorageLocation',
                typeInfo: '.StorageLocationType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'assemblyRequirement',
                minOccurs: 0,
                collection: true,
                elementName: 'AssemblyRequirement',
                typeInfo: '.OpMaterialRequirementType'
            }, {
                name: 'assemblyType',
                elementName: 'AssemblyType',
                typeInfo: '.AssemblyTypeType'
            }, {
                name: 'assemblyRelationship',
                elementName: 'AssemblyRelationship',
                typeInfo: '.AssemblyRelationshipType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'materialRequirementProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'MaterialRequirementProperty',
                typeInfo: '.OpMaterialRequirementPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'OpEquipmentRequirementType',
            propertyInfos: [{
                name: 'equipmentClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentClassID',
                typeInfo: '.EquipmentClassIDType'
            }, {
                name: 'equipmentID',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentID',
                typeInfo: '.EquipmentIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'equipmentUse',
                elementName: 'EquipmentUse',
                typeInfo: '.EquipmentUseType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'equipmentLevel',
                elementName: 'EquipmentLevel',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'equipmentRequirementProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'EquipmentRequirementProperty',
                typeInfo: '.OpEquipmentRequirementPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'ProductionResponseType',
            propertyInfos: [{
                name: 'id',
                elementName: 'ID',
                typeInfo: '.IdentifierType'
            }, {
                name: 'productionRequestID',
                elementName: 'ProductionRequestID',
                typeInfo: '.ProductionRequestIDType'
            }, {
                name: 'productProductionRuleIDGroup',
                minOccurs: 0,
                collection: true,
                elementTypeInfos: [{
                    elementName: 'ProductProductionRuleID',
                    typeInfo: '.ProductProductionRuleIDType'
                }, {
                    elementName: 'Version',
                    typeInfo: '.VersionType'
                }],
                type: 'elements'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'segmentResponse',
                minOccurs: 0,
                collection: true,
                elementName: 'SegmentResponse',
                typeInfo: '.SegmentResponseType'
            }, {
                name: 'responseState',
                elementName: 'ResponseState',
                typeInfo: '.ResponseStateType'
            }]
        }, {
            localName: 'RespondWorkPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondWorkPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'PhysicalAssetActualType',
            propertyInfos: [{
                name: 'physicalAssetClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetClassID',
                typeInfo: '.PhysicalAssetClassIDType'
            }, {
                name: 'physicalAssetID',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetID',
                typeInfo: '.PhysicalAssetIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'location',
                elementName: 'Location',
                typeInfo: '.LocationType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'physicalAssetActualProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PhysicalAssetActualProperty',
                typeInfo: '.PhysicalAssetActualPropertyType'
            }, {
                name: 'requiredByRequestedSegmentResponse',
                elementName: 'RequiredByRequestedSegmentResponse',
                typeInfo: '.RequiredByRequestedSegmentResponseType'
            }]
        }, {
            localName: 'MaterialClassIDType',
            baseTypeInfo: '.IdentifierType'
        }, {
            localName: 'StartConditionType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'RespondOperationsDefinitionType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.RespondOperationsDefinitionType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'ShowProductionPerformanceType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.ShowProductionPerformanceType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'RequestedEndTimeType',
            baseTypeInfo: '.DateTimeType'
        }, {
            localName: 'CancelOperationsDefinitionInformationType.DataArea',
            typeName: null,
            propertyInfos: [{
                name: 'cancel',
                required: true,
                elementName: 'Cancel',
                typeInfo: '.TransCancelType'
            }, {
                name: 'operationsDefinitionInformation',
                required: true,
                collection: true,
                elementName: 'OperationsDefinitionInformation',
                typeInfo: '.OperationsDefinitionInformationType'
            }]
        }, {
            localName: 'AcknowledgeWorkMasterType',
            propertyInfos: [{
                name: 'applicationArea',
                required: true,
                elementName: 'ApplicationArea',
                typeInfo: '.TransApplicationAreaType'
            }, {
                name: 'dataArea',
                required: true,
                elementName: 'DataArea',
                typeInfo: '.AcknowledgeWorkMasterType.DataArea'
            }, {
                name: 'releaseID',
                required: true,
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'releaseID'
                },
                type: 'attribute'
            }, {
                name: 'versionID',
                typeInfo: 'NormalizedString',
                attributeName: {
                    localPart: 'versionID'
                },
                type: 'attribute'
            }]
        }, {
            localName: 'OpPersonnelCapabilityType',
            propertyInfos: [{
                name: 'personnelClassID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelClassID',
                typeInfo: '.PersonnelClassIDType'
            }, {
                name: 'personID',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonID',
                typeInfo: '.PersonIDType'
            }, {
                name: 'description',
                minOccurs: 0,
                collection: true,
                elementName: 'Description',
                typeInfo: '.DescriptionType'
            }, {
                name: 'capabilityType',
                elementName: 'CapabilityType',
                typeInfo: '.CapabilityTypeType'
            }, {
                name: 'reason',
                elementName: 'Reason',
                typeInfo: '.ReasonType'
            }, {
                name: 'confidenceFactor',
                elementName: 'ConfidenceFactor',
                typeInfo: '.ConfidenceFactorType'
            }, {
                name: 'hierarchyScope',
                elementName: 'HierarchyScope',
                typeInfo: '.HierarchyScopeType'
            }, {
                name: 'personnelUse',
                elementName: 'PersonnelUse',
                typeInfo: '.PersonnelUseType'
            }, {
                name: 'startTime',
                elementName: 'StartTime',
                typeInfo: '.StartTimeType'
            }, {
                name: 'endTime',
                elementName: 'EndTime',
                typeInfo: '.EndTimeType'
            }, {
                name: 'quantity',
                minOccurs: 0,
                collection: true,
                elementName: 'Quantity',
                typeInfo: '.QuantityValueType'
            }, {
                name: 'personnelCapabilityProperty',
                minOccurs: 0,
                collection: true,
                elementName: 'PersonnelCapabilityProperty',
                typeInfo: '.OpPersonnelCapabilityPropertyType'
            }]
        }, {
            type: 'enumInfo',
            localName: 'TransActionCodeEnumerationType',
            values: ['Add', 'Change', 'Delete', 'Replaced', 'Accepted', 'Modified', 'Rejected']
        }, {
            type: 'enumInfo',
            localName: 'TransResponseCodeType',
            baseTypeInfo: 'NormalizedString',
            values: ['Always', 'OnError']
        }],
        elementInfos: [{
            elementName: 'Depiction',
            typeInfo: '.DepictionType'
        }, {
            elementName: 'ActualEndTime',
            typeInfo: '.ActualEndTimeType'
        }, {
            elementName: 'EquipmentProceduralElement',
            typeInfo: '.EquipmentProceduralElementType'
        }, {
            elementName: 'RespondWorkDirective',
            typeInfo: '.RespondWorkDirectiveType'
        }, {
            elementName: 'UnitOfMeasure',
            typeInfo: '.UnitOfMeasureType'
        }, {
            elementName: 'ShowOperationsDefinitionInformation',
            typeInfo: '.ShowOperationsDefinitionInformationType'
        }, {
            elementName: 'EnumerationSetID',
            typeInfo: '.EnumerationSetIDType',
            scope: '.BatchValueType'
        }, {
            elementName: 'CancelWorkMaster',
            typeInfo: '.CancelWorkMasterType'
        }, {
            elementName: 'StartCondition',
            typeInfo: '.StartConditionType'
        }, {
            elementName: 'JobOrder',
            typeInfo: '.JobOrderType'
        }, {
            elementName: 'ShowProductDefinition',
            typeInfo: '.ShowProductDefinitionType'
        }, {
            elementName: 'ProcessBatchProductionRecord',
            typeInfo: '.ProcessBatchProductionRecordType'
        }, {
            elementName: 'GetWorkMaster',
            typeInfo: '.GetWorkMasterType'
        }, {
            elementName: 'ApprovedBy',
            typeInfo: '.ApprovedByType'
        }, {
            elementName: 'FinalApprovalDate',
            typeInfo: '.FinalApprovalDateType'
        }, {
            elementName: 'AcknowledgeProductionPerformance',
            typeInfo: '.AcknowledgeProductionPerformanceType'
        }, {
            elementName: 'SyncWorkDefinitionInformation',
            typeInfo: '.SyncWorkDefinitionInformationType'
        }, {
            elementName: 'CreateDate',
            typeInfo: '.CreateDateType'
        }, {
            elementName: 'CancelWorkDefinitionInformation',
            typeInfo: '.CancelWorkDefinitionInformationType'
        }, {
            elementName: 'ScaledSize',
            typeInfo: '.ScaledSizeType'
        }, {
            elementName: 'ProductionResponse',
            typeInfo: '.ProductionResponseType'
        }, {
            elementName: 'ProcessWorkflowSpecificationInformation',
            typeInfo: '.ProcessWorkflowSpecificationInformationType'
        }, {
            elementName: 'Origin',
            typeInfo: '.OriginType'
        }, {
            elementName: 'RespondOperationsDefinitionInformation',
            typeInfo: '.RespondOperationsDefinitionInformationType'
        }, {
            elementName: 'ProcessOperationsSchedule',
            typeInfo: '.ProcessOperationsScheduleType'
        }, {
            elementName: 'Formula',
            typeInfo: '.FormulaType'
        }, {
            elementName: 'Header',
            typeInfo: '.HeaderType'
        }, {
            elementName: 'AcknowledgeJobResponse',
            typeInfo: '.AcknowledgeJobResponseType'
        }, {
            elementName: 'AcknowledgeProductionSchedule',
            typeInfo: '.AcknowledgeProductionScheduleType'
        }, {
            elementName: 'ProductID',
            typeInfo: '.ProductIDType'
        }, {
            elementName: 'ProductName',
            typeInfo: '.ProductNameType'
        }, {
            elementName: 'ShowProductionPerformance',
            typeInfo: '.ShowProductionPerformanceType'
        }, {
            elementName: 'Mode',
            typeInfo: '.ModeType'
        }, {
            elementName: 'Version',
            typeInfo: '.VersionType'
        }, {
            elementName: 'WorkflowSpecificationType',
            typeInfo: '.WorkflowSpecificationTypeType'
        }, {
            elementName: 'Nominal',
            typeInfo: '.NominalType'
        }, {
            elementName: 'SyncOperationsDefinition',
            typeInfo: '.SyncOperationsDefinitionType'
        }, {
            elementName: 'AcknowledgeWorkflowSpecificationType',
            typeInfo: '.AcknowledgeWorkflowSpecificationTypeType'
        }, {
            elementName: 'ChangeWorkMaster',
            typeInfo: '.ChangeWorkMasterType'
        }, {
            elementName: 'UnitOfMeasure',
            typeInfo: '.UnitOfMeasureType',
            scope: '.ResultType'
        }, {
            elementName: 'SyncWorkSchedule',
            typeInfo: '.SyncWorkScheduleType'
        }, {
            elementName: 'ChangeWorkDefinitionInformation',
            typeInfo: '.ChangeWorkDefinitionInformationType'
        }, {
            elementName: 'OrderID',
            typeInfo: '.OrderIDType'
        }, {
            elementName: 'ChangeOperationsSchedule',
            typeInfo: '.ChangeOperationsScheduleType'
        }, {
            elementName: 'WorkDirective',
            typeInfo: '.WorkDirectiveType'
        }, {
            elementName: 'RespondOperationsSchedule',
            typeInfo: '.RespondOperationsScheduleType'
        }, {
            elementName: 'ProcessJobResponse',
            typeInfo: '.ProcessJobResponseType'
        }, {
            elementName: 'EnumerationSet',
            typeInfo: '.EnumerationSetType'
        }, {
            elementName: 'ProcessWorkPerformance',
            typeInfo: '.ProcessWorkPerformanceType'
        }, {
            elementName: 'ConnectionType',
            typeInfo: '.ConnectionTypeType'
        }, {
            elementName: 'Scaled',
            typeInfo: '.ScaledType'
        }, {
            elementName: 'ShowWorkMaster',
            typeInfo: '.ShowWorkMasterType'
        }, {
            elementName: 'ShowWorkPerformance',
            typeInfo: '.ShowWorkPerformanceType'
        }, {
            elementName: 'ActualStartTime',
            typeInfo: '.ActualStartTimeType'
        }, {
            elementName: 'ProcessWorkDirective',
            typeInfo: '.ProcessWorkDirectiveType'
        }, {
            elementName: 'OperationsDefinitionInformation',
            typeInfo: '.OperationsDefinitionInformationType'
        }, {
            elementName: 'GetWorkDirective',
            typeInfo: '.GetWorkDirectiveType'
        }, {
            elementName: 'Condition',
            typeInfo: '.ConditionType'
        }, {
            elementName: 'DefaultValue',
            typeInfo: '.DefaultValueType'
        }, {
            elementName: 'BatchProductionRecord',
            typeInfo: '.BatchProductionRecordType'
        }, {
            elementName: 'LinkType',
            typeInfo: '.LinkTypeType'
        }, {
            elementName: 'ChangeProductionPerformance',
            typeInfo: '.ChangeProductionPerformanceType'
        }, {
            elementName: 'ShowWorkflowSpecificationInformation',
            typeInfo: '.ShowWorkflowSpecificationInformationType'
        }, {
            elementName: 'ShowJobList',
            typeInfo: '.ShowJobListType'
        }, {
            elementName: 'CancelProductInformation',
            typeInfo: '.CancelProductInformationType'
        }, {
            elementName: 'ShowProductionSchedule',
            typeInfo: '.ShowProductionScheduleType'
        }, {
            elementName: 'AcknowledgeWorkflowSpecification',
            typeInfo: '.AcknowledgeWorkflowSpecificationType'
        }, {
            elementName: 'AcknowledgeProductDefinition',
            typeInfo: '.AcknowledgeProductDefinitionType'
        }, {
            elementName: 'RecipeElementVersion',
            typeInfo: '.RecipeElementVersionType'
        }, {
            elementName: 'RecipeElement',
            typeInfo: '.RecipeElementType'
        }, {
            elementName: 'RespondOperationsDefinition',
            typeInfo: '.RespondOperationsDefinitionType'
        }, {
            elementName: 'SyncWorkflowSpecificationInformation',
            typeInfo: '.SyncWorkflowSpecificationInformationType'
        }, {
            elementName: 'SyncProductDefinition',
            typeInfo: '.SyncProductDefinitionType'
        }, {
            elementName: 'ProcessOperationsDefinitionInformation',
            typeInfo: '.ProcessOperationsDefinitionInformationType'
        }, {
            elementName: 'OperationsSchedule',
            typeInfo: '.OperationsScheduleType'
        }, {
            elementName: 'GetOperationsSchedule',
            typeInfo: '.GetOperationsScheduleType'
        }, {
            elementName: 'ProcessProductionPerformance',
            typeInfo: '.ProcessProductionPerformanceType'
        }, {
            elementName: 'CancelJobList',
            typeInfo: '.CancelJobListType'
        }, {
            elementName: 'RespondProductInformation',
            typeInfo: '.RespondProductInformationType'
        }, {
            elementName: 'RespondJobResponse',
            typeInfo: '.RespondJobResponseType'
        }, {
            elementName: 'ProcedureLogic',
            typeInfo: '.ProcedureLogicType'
        }, {
            elementName: 'CancelWorkPerformance',
            typeInfo: '.CancelWorkPerformanceType'
        }, {
            elementName: 'ChangeProductDefinition',
            typeInfo: '.ChangeProductDefinitionType'
        }, {
            elementName: 'ShowWorkDefinitionInformation',
            typeInfo: '.ShowWorkDefinitionInformationType'
        }, {
            elementName: 'ProductDefinition',
            typeInfo: '.ProductDefinitionType'
        }, {
            elementName: 'CancelOperationsSchedule',
            typeInfo: '.CancelOperationsScheduleType'
        }, {
            elementName: 'ProcessOperationsPerformance',
            typeInfo: '.ProcessOperationsPerformanceType'
        }, {
            elementName: 'ApprovalHistory',
            typeInfo: '.ApprovalHistoryType'
        }, {
            elementName: 'EquipmentElementID',
            typeInfo: '.EquipmentElementIDType'
        }, {
            elementName: 'SyncJobResponse',
            typeInfo: '.SyncJobResponseType'
        }, {
            elementName: 'CancelWorkSchedule',
            typeInfo: '.CancelWorkScheduleType'
        }, {
            elementName: 'OperationsDefinition',
            typeInfo: '.OperationsDefinitionType'
        }, {
            elementName: 'WorkflowSpecification',
            typeInfo: '.WorkflowSpecificationType'
        }, {
            elementName: 'ModificationLog',
            typeInfo: '.ModificationLogType'
        }, {
            elementName: 'SyncWorkflowSpecification',
            typeInfo: '.SyncWorkflowSpecificationType'
        }, {
            elementName: 'ChangeJobResponse',
            typeInfo: '.ChangeJobResponseType'
        }, {
            elementName: 'RecipeElementType',
            typeInfo: '.RecipeElementTypeType'
        }, {
            elementName: 'CancelOperationsPerformance',
            typeInfo: '.CancelOperationsPerformanceType'
        }, {
            elementName: 'AcknowledgeWorkDirective',
            typeInfo: '.AcknowledgeWorkDirectiveType'
        }, {
            elementName: 'SyncJobList',
            typeInfo: '.SyncJobListType'
        }, {
            elementName: 'SyncOperationsSchedule',
            typeInfo: '.SyncOperationsScheduleType'
        }, {
            elementName: 'RecipeElementID',
            typeInfo: '.RecipeElementIDType'
        }, {
            elementName: 'MemberEquipmentID',
            typeInfo: '.MemberEquipmentIDType'
        }, {
            elementName: 'ChangeWorkflowSpecificationType',
            typeInfo: '.ChangeWorkflowSpecificationTypeType'
        }, {
            elementName: 'ScaleReference',
            typeInfo: '.ScaleReferenceType'
        }, {
            elementName: 'RecipeBuildingBlock',
            typeInfo: '.RecipeBuildingBlockType'
        }, {
            elementName: 'BatchPriority',
            typeInfo: '.BatchPriorityType'
        }, {
            elementName: 'SyncWorkPerformance',
            typeInfo: '.SyncWorkPerformanceType'
        }, {
            elementName: 'DataType',
            typeInfo: '.DataTypeType',
            scope: '.BatchValueType'
        }, {
            elementName: 'EquipmentClassID',
            typeInfo: '.BatchEquipmentClassIDType'
        }, {
            elementName: 'BatchInformation',
            typeInfo: '.BatchInformationType'
        }, {
            elementName: 'AcknowledgeProductInformation',
            typeInfo: '.AcknowledgeProductInformationType'
        }, {
            elementName: 'WorkMaster',
            typeInfo: '.WorkMasterType'
        }, {
            elementName: 'IndividualApproval',
            typeInfo: '.IndividualApprovalType'
        }, {
            elementName: 'Note',
            typeInfo: '.NoteType'
        }, {
            elementName: 'ChangeWorkflowSpecification',
            typeInfo: '.ChangeWorkflowSpecificationType'
        }, {
            elementName: 'ShowWorkSchedule',
            typeInfo: '.ShowWorkScheduleType'
        }, {
            elementName: 'Enumeration',
            typeInfo: '.EnumerationType'
        }, {
            elementName: 'DataInterpretation',
            typeInfo: '.DataInterpretationType',
            scope: '.BatchValueType'
        }, {
            elementName: 'SyncProductionSchedule',
            typeInfo: '.SyncProductionScheduleType'
        }, {
            elementName: 'ChangeOperationsPerformance',
            typeInfo: '.ChangeOperationsPerformanceType'
        }, {
            elementName: 'VersionDate',
            typeInfo: '.VersionDateType'
        }, {
            elementName: 'ShowWorkDirective',
            typeInfo: '.ShowWorkDirectiveType'
        }, {
            elementName: 'RespondWorkPerformance',
            typeInfo: '.RespondWorkPerformanceType'
        }, {
            elementName: 'SyncWorkDirective',
            typeInfo: '.SyncWorkDirectiveType'
        }, {
            elementName: 'ApprovalDate',
            typeInfo: '.ApprovalDateType'
        }, {
            elementName: 'Constraint',
            typeInfo: '.ConstraintType'
        }, {
            elementName: 'ProcessWorkflowSpecification',
            typeInfo: '.ProcessWorkflowSpecificationType'
        }, {
            elementName: 'EffectiveDate',
            typeInfo: '.EffectiveDateType'
        }, {
            elementName: 'ScheduleStartTime',
            typeInfo: '.ScheduleStartTimeType'
        }, {
            elementName: 'ShowWorkflowSpecificationType',
            typeInfo: '.ShowWorkflowSpecificationTypeType'
        }, {
            elementName: 'RespondWorkDefinitionInformation',
            typeInfo: '.RespondWorkDefinitionInformationType'
        }, {
            elementName: 'AcknowledgeJobList',
            typeInfo: '.AcknowledgeJobListType'
        }, {
            elementName: 'GetOperationsDefinitionInformation',
            typeInfo: '.GetOperationsDefinitionInformationType'
        }, {
            elementName: 'ChangeWorkPerformance',
            typeInfo: '.ChangeWorkPerformanceType'
        }, {
            elementName: 'AcknowledgeOperationsDefinition',
            typeInfo: '.AcknowledgeOperationsDefinitionType'
        }, {
            elementName: 'CancelProductDefinition',
            typeInfo: '.CancelProductDefinitionType'
        }, {
            elementName: 'BatchSize',
            typeInfo: '.BatchSizeType'
        }, {
            elementName: 'BuildingBlockElementID',
            typeInfo: '.BuildingBlockElementIDType'
        }, {
            elementName: 'ProcessWorkSchedule',
            typeInfo: '.ProcessWorkScheduleType'
        }, {
            elementName: 'ID',
            typeInfo: '.IDType'
        }, {
            elementName: 'EquipmentConnection',
            typeInfo: '.EquipmentConnectionType'
        }, {
            elementName: 'ToID',
            typeInfo: '.ToIDType'
        }, {
            elementName: 'WorkRequest',
            typeInfo: '.WorkRequestType'
        }, {
            elementName: 'ChangeJobList',
            typeInfo: '.ChangeJobListType'
        }, {
            elementName: 'ParameterSubType',
            typeInfo: '.ParameterSubTypeType'
        }, {
            elementName: 'AcknowledgeOperationsSchedule',
            typeInfo: '.AcknowledgeOperationsScheduleType'
        }, {
            elementName: 'CancelBatchProductionRecord',
            typeInfo: '.CancelBatchProductionRecordType'
        }, {
            elementName: 'CampaignID',
            typeInfo: '.CampaignIDType'
        }, {
            elementName: 'ModifiedDate',
            typeInfo: '.ModifiedDateType'
        }, {
            elementName: 'ListHeader',
            typeInfo: '.ListHeaderType'
        }, {
            elementName: 'Status',
            typeInfo: '.StatusType'
        }, {
            elementName: 'EquipmentID',
            typeInfo: '.BatchEquipmentIDType'
        }, {
            elementName: 'SyncWorkflowSpecificationType',
            typeInfo: '.SyncWorkflowSpecificationTypeType'
        }, {
            elementName: 'SyncOperationsPerformance',
            typeInfo: '.SyncOperationsPerformanceType'
        }, {
            elementName: 'ShowWorkflowSpecification',
            typeInfo: '.ShowWorkflowSpecificationType'
        }, {
            elementName: 'ShowOperationsPerformance',
            typeInfo: '.ShowOperationsPerformanceType'
        }, {
            elementName: 'EquipmentElementLevel',
            typeInfo: '.EquipmentElementLevelType'
        }, {
            elementName: 'RequestedStartTime',
            typeInfo: '.RequestedStartTimeType'
        }, {
            elementName: 'Value',
            typeInfo: '.BatchValueType'
        }, {
            elementName: 'AcknowledgeWorkPerformance',
            typeInfo: '.AcknowledgeWorkPerformanceType'
        }, {
            elementName: 'RequestedBatchSize',
            typeInfo: '.RequestedBatchSizeType'
        }, {
            elementName: 'AcknowledgeOperationsDefinitionInformation',
            typeInfo: '.AcknowledgeOperationsDefinitionInformationType'
        }, {
            elementName: 'ProcessProductInformation',
            typeInfo: '.ProcessProductInformationType'
        }, {
            elementName: 'JobResponse',
            typeInfo: '.JobResponseType'
        }, {
            elementName: 'RespondBatchProductionRecord',
            typeInfo: '.RespondBatchProductionRecordType'
        }, {
            elementName: 'AcknowledgeWorkMaster',
            typeInfo: '.AcknowledgeWorkMasterType'
        }, {
            elementName: 'ActualBatchSize',
            typeInfo: '.ActualBatchSizeType'
        }, {
            elementName: 'ControlRecipe',
            typeInfo: '.ControlRecipeType'
        }, {
            elementName: 'CancelWorkflowSpecificationType',
            typeInfo: '.CancelWorkflowSpecificationTypeType'
        }, {
            elementName: 'Author',
            typeInfo: '.AuthorType'
        }, {
            elementName: 'CancelWorkDirective',
            typeInfo: '.CancelWorkDirectiveType'
        }, {
            elementName: 'RecipeID',
            typeInfo: '.RecipeIDType'
        }, {
            elementName: 'ExpirationDate',
            typeInfo: '.ExpirationDateType'
        }, {
            elementName: 'ProcessProductionSchedule',
            typeInfo: '.ProcessProductionScheduleType'
        }, {
            elementName: 'RespondProductDefinition',
            typeInfo: '.RespondProductDefinitionType'
        }, {
            elementName: 'GetWorkflowSpecificationType',
            typeInfo: '.GetWorkflowSpecificationTypeType'
        }, {
            elementName: 'ProcessJobList',
            typeInfo: '.ProcessJobListType'
        }, {
            elementName: 'OperationsResponse',
            typeInfo: '.OperationsResponseType'
        }, {
            elementName: 'RespondProductionPerformance',
            typeInfo: '.RespondProductionPerformanceType'
        }, {
            elementName: 'DataType',
            typeInfo: '.DataTypeType'
        }, {
            elementName: 'EquipmentElementType',
            typeInfo: '.EquipmentElementTypeType'
        }, {
            elementName: 'ValueString',
            typeInfo: '.ValueStringType',
            scope: '.BatchValueType'
        }, {
            elementName: 'CancelProductionPerformance',
            typeInfo: '.CancelProductionPerformanceType'
        }, {
            elementName: 'CancelWorkflowSpecificationInformation',
            typeInfo: '.CancelWorkflowSpecificationInformationType'
        }, {
            elementName: 'ChangeBatchProductionRecord',
            typeInfo: '.ChangeBatchProductionRecordType'
        }, {
            elementName: 'Parameter',
            typeInfo: '.BatchParameterType'
        }, {
            elementName: 'EquipmentProceduralElementClass',
            typeInfo: '.EquipmentProceduralElementClassType'
        }, {
            elementName: 'ProcessOperationsDefinition',
            typeInfo: '.ProcessOperationsDefinitionType'
        }, {
            elementName: 'RespondWorkflowSpecificationType',
            typeInfo: '.RespondWorkflowSpecificationTypeType'
        }, {
            elementName: 'ParameterType',
            typeInfo: '.ParameterTypeType'
        }, {
            elementName: 'BatchID',
            typeInfo: '.BatchIDType'
        }, {
            elementName: 'EvaluationOrder',
            typeInfo: '.EvaluationOrderType'
        }, {
            elementName: 'SyncOperationsDefinitionInformation',
            typeInfo: '.SyncOperationsDefinitionInformationType'
        }, {
            elementName: 'RespondProductionSchedule',
            typeInfo: '.RespondProductionScheduleType'
        }, {
            elementName: 'ChangeWorkSchedule',
            typeInfo: '.ChangeWorkScheduleType'
        }, {
            elementName: 'MasterRecipe',
            typeInfo: '.MasterRecipeType'
        }, {
            elementName: 'JobList',
            typeInfo: '.JobListType'
        }, {
            elementName: 'CancelOperationsDefinitionInformation',
            typeInfo: '.CancelOperationsDefinitionInformationType'
        }, {
            elementName: 'ProductionRequest',
            typeInfo: '.ProductionRequestType'
        }, {
            elementName: 'EnumerationNumber',
            typeInfo: '.EnumerationNumberType'
        }, {
            elementName: 'ToEquipmentID',
            typeInfo: '.ToEquipmentIDType'
        }, {
            elementName: 'OperationsRequest',
            typeInfo: '.OperationsRequestType'
        }, {
            elementName: 'ShowBatchProductionRecord',
            typeInfo: '.ShowBatchProductionRecordType'
        }, {
            elementName: 'GetProductDefinition',
            typeInfo: '.GetProductDefinitionType'
        }, {
            elementName: 'SyncWorkMaster',
            typeInfo: '.SyncWorkMasterType'
        }, {
            elementName: 'GetWorkSchedule',
            typeInfo: '.GetWorkScheduleType'
        }, {
            elementName: 'ChangeWorkflowSpecificationInformation',
            typeInfo: '.ChangeWorkflowSpecificationInformationType'
        }, {
            elementName: 'RespondOperationsPerformance',
            typeInfo: '.RespondOperationsPerformanceType'
        }, {
            elementName: 'ExternalID',
            typeInfo: '.ExternalIDType'
        }, {
            elementName: 'ProcessWorkMaster',
            typeInfo: '.ProcessWorkMasterType'
        }, {
            elementName: 'WorkDefinitionInformation',
            typeInfo: '.WorkDefinitionInformationType'
        }, {
            elementName: 'ChangeOperationsDefinition',
            typeInfo: '.ChangeOperationsDefinitionType'
        }, {
            elementName: 'ShowProductInformation',
            typeInfo: '.ShowProductInformationType'
        }, {
            elementName: 'ValueString',
            typeInfo: '.ValueStringType'
        }, {
            elementName: 'Transition',
            typeInfo: '.TransitionType'
        }, {
            elementName: 'ProductInformation',
            typeInfo: '.ProductInformationType'
        }, {
            elementName: 'AcknowledgeOperationsPerformance',
            typeInfo: '.AcknowledgeOperationsPerformanceType'
        }, {
            elementName: 'AcknowledgeWorkSchedule',
            typeInfo: '.AcknowledgeWorkScheduleType'
        }, {
            elementName: 'DataType',
            typeInfo: '.DataTypeType',
            scope: '.ValueType'
        }, {
            elementName: 'UnitOfMeasure',
            typeInfo: '.UnitOfMeasureType',
            scope: '.ValueType'
        }, {
            elementName: 'ProcessWorkDefinitionInformation',
            typeInfo: '.ProcessWorkDefinitionInformationType'
        }, {
            elementName: 'CancelProductionSchedule',
            typeInfo: '.CancelProductionScheduleType'
        }, {
            elementName: 'RespondWorkMaster',
            typeInfo: '.RespondWorkMasterType'
        }, {
            elementName: 'Step',
            typeInfo: '.StepType'
        }, {
            elementName: 'AcknowledgeWorkflowSpecificationInformation',
            typeInfo: '.AcknowledgeWorkflowSpecificationInformationType'
        }, {
            elementName: 'GetWorkPerformance',
            typeInfo: '.GetWorkPerformanceType'
        }, {
            elementName: 'DataType',
            typeInfo: '.DataTypeType',
            scope: '.ResultType'
        }, {
            elementName: 'EquipmentRequirement',
            typeInfo: '.BatchEquipmentRequirementType'
        }, {
            elementName: 'GetWorkflowSpecification',
            typeInfo: '.GetWorkflowSpecificationType'
        }, {
            elementName: 'ScheduleEntryNote',
            typeInfo: '.ScheduleEntryNoteType'
        }, {
            elementName: 'EquipmentProceduralElementClassID',
            typeInfo: '.EquipmentProceduralElementClassIDType'
        }, {
            elementName: 'EnumerationString',
            typeInfo: '.EnumerationStringType'
        }, {
            elementName: 'UnitOfMeasure',
            typeInfo: '.UnitOfMeasureType',
            scope: '.BatchValueType'
        }, {
            elementName: 'Max',
            typeInfo: '.MaxType'
        }, {
            elementName: 'ShowJobResponse',
            typeInfo: '.ShowJobResponseType'
        }, {
            elementName: 'SyncProductionPerformance',
            typeInfo: '.SyncProductionPerformanceType'
        }, {
            elementName: 'AcknowledgeBatchProductionRecord',
            typeInfo: '.AcknowledgeBatchProductionRecordType'
        }, {
            elementName: 'ChangeProductionSchedule',
            typeInfo: '.ChangeProductionScheduleType'
        }, {
            elementName: 'OtherInformation',
            typeInfo: '.OtherInformationType'
        }, {
            elementName: 'ShowOperationsSchedule',
            typeInfo: '.ShowOperationsScheduleType'
        }, {
            elementName: 'ScheduleEndTime',
            typeInfo: '.ScheduleEndTimeType'
        }, {
            elementName: 'WorkflowSpecificationInformation',
            typeInfo: '.WorkflowSpecificationInformationType'
        }, {
            elementName: 'EquipmentElement',
            typeInfo: '.EquipmentElementType'
        }, {
            elementName: 'WorkResponse',
            typeInfo: '.WorkResponseType'
        }, {
            elementName: 'RespondWorkSchedule',
            typeInfo: '.RespondWorkScheduleType'
        }, {
            elementName: 'GetProductInformation',
            typeInfo: '.GetProductInformationType'
        }, {
            elementName: 'UnitOfMeasure',
            typeInfo: '.UnitOfMeasureType',
            scope: '.QuantityValueType'
        }, {
            elementName: 'ClassEquipmentID',
            typeInfo: '.ClassEquipmentIDType'
        }, {
            elementName: 'FromEquipmentID',
            typeInfo: '.FromEquipmentIDType'
        }, {
            elementName: 'GetWorkflowSpecificationInformation',
            typeInfo: '.GetWorkflowSpecificationInformationType'
        }, {
            elementName: 'BatchList',
            typeInfo: '.BatchListType'
        }, {
            elementName: 'EnumerationSetID',
            typeInfo: '.EnumerationSetIDType'
        }, {
            elementName: 'ProcessProductDefinition',
            typeInfo: '.ProcessProductDefinitionType'
        }, {
            elementName: 'DataInterpretation',
            typeInfo: '.DataInterpretationType'
        }, {
            elementName: 'GetWorkDefinitionInformation',
            typeInfo: '.GetWorkDefinitionInformationType'
        }, {
            elementName: 'GetBatchProductionRecord',
            typeInfo: '.GetBatchProductionRecordType'
        }, {
            elementName: 'RequestedEndTime',
            typeInfo: '.RequestedEndTimeType'
        }, {
            elementName: 'ProductionPerformance',
            typeInfo: '.ProductionPerformanceType'
        }, {
            elementName: 'ConditionAnnotation',
            typeInfo: '.ConditionAnnotationType'
        }, {
            elementName: 'OperationsPerformance',
            typeInfo: '.OperationsPerformanceType'
        }, {
            elementName: 'ChangeOperationsDefinitionInformation',
            typeInfo: '.ChangeOperationsDefinitionInformationType'
        }, {
            elementName: 'WorkSchedule',
            typeInfo: '.WorkScheduleType'
        }, {
            elementName: 'ProcessWorkflowSpecificationType',
            typeInfo: '.ProcessWorkflowSpecificationTypeType'
        }, {
            elementName: 'ChangeProductInformation',
            typeInfo: '.ChangeProductInformationType'
        }, {
            elementName: 'ShowOperationsDefinition',
            typeInfo: '.ShowOperationsDefinitionType'
        }, {
            elementName: 'ActualEquipmentID',
            typeInfo: '.ActualEquipmentIDType'
        }, {
            elementName: 'FromID',
            typeInfo: '.FromIDType'
        }, {
            elementName: 'ClassInstanceAssociation',
            typeInfo: '.ClassInstanceAssociationType'
        }, {
            elementName: 'CancelJobResponse',
            typeInfo: '.CancelJobResponseType'
        }, {
            elementName: 'Link',
            typeInfo: '.LinkType'
        }, {
            elementName: 'BuildingBlockElementVersion',
            typeInfo: '.BuildingBlockElementVersionType'
        }, {
            elementName: 'BatchListEntry',
            typeInfo: '.BatchListEntryType'
        }, {
            elementName: 'Property',
            typeInfo: '.EquipmentElementPropertyType'
        }, {
            elementName: 'ChangeWorkDirective',
            typeInfo: '.ChangeWorkDirectiveType'
        }, {
            elementName: 'LotID',
            typeInfo: '.LotIDType'
        }, {
            elementName: 'SyncProductInformation',
            typeInfo: '.SyncProductInformationType'
        }, {
            elementName: 'SyncBatchProductionRecord',
            typeInfo: '.SyncBatchProductionRecordType'
        }, {
            elementName: 'EquipmentProceduralElementType',
            typeInfo: '.EquipmentProceduralElementTypeType'
        }, {
            elementName: 'CancelWorkflowSpecification',
            typeInfo: '.CancelWorkflowSpecificationType'
        }, {
            elementName: 'RespondJobList',
            typeInfo: '.RespondJobListType'
        }, {
            elementName: 'CancelOperationsDefinition',
            typeInfo: '.CancelOperationsDefinitionType'
        }, {
            elementName: 'GetProductionPerformance',
            typeInfo: '.GetProductionPerformanceType'
        }, {
            elementName: 'GetJobResponse',
            typeInfo: '.GetJobResponseType'
        }, {
            elementName: 'BatchListEntryType',
            typeInfo: '.BatchListEntryTypeType'
        }, {
            elementName: 'RespondWorkflowSpecificationInformation',
            typeInfo: '.RespondWorkflowSpecificationInformationType'
        }, {
            elementName: 'DataType',
            typeInfo: '.DataTypeType',
            scope: '.QuantityValueType'
        }, {
            elementName: 'RecipeVersion',
            typeInfo: '.RecipeVersionType'
        }, {
            elementName: 'GetOperationsPerformance',
            typeInfo: '.GetOperationsPerformanceType'
        }, {
            elementName: 'GetJobList',
            typeInfo: '.GetJobListType'
        }, {
            elementName: 'Description',
            typeInfo: '.DescriptionType'
        }, {
            elementName: 'ProductionSchedule',
            typeInfo: '.ProductionScheduleType'
        }, {
            elementName: 'AcknowledgeWorkDefinitionInformation',
            typeInfo: '.AcknowledgeWorkDefinitionInformationType'
        }, {
            elementName: 'GetOperationsDefinition',
            typeInfo: '.GetOperationsDefinitionType'
        }, {
            elementName: 'RespondWorkflowSpecification',
            typeInfo: '.RespondWorkflowSpecificationType'
        }, {
            elementName: 'GetProductionSchedule',
            typeInfo: '.GetProductionScheduleType'
        }, {
            elementName: 'Min',
            typeInfo: '.MinType'
        }, {
            elementName: 'WorkPerformance',
            typeInfo: '.WorkPerformanceType'
        }]
    };
    return {
        BatchProductionRecord: BatchProductionRecord
    };
};
if (typeof define === 'function' && define.amd) {
    define([], BatchProductionRecord_Module_Factory);
}
else {
    var BatchProductionRecord_Module = BatchProductionRecord_Module_Factory();
    if (typeof module !== 'undefined' && module.exports) {
        module.exports.BatchProductionRecord = BatchProductionRecord_Module.BatchProductionRecord;
    }
    else {
        var BatchProductionRecord = BatchProductionRecord_Module.BatchProductionRecord;
    }
}